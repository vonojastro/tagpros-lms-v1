{"ast":null,"code":"import { api } from \"../api\";\nimport { getEmailTemplatesSuccess, updateTemplateAction, addTemplateAction } from \"../redux/actions/email-template\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nconst EMAIL_TEMPLATE_ENDPOINT = '/email-template';\nexport const getEmailTemplates = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(EMAIL_TEMPLATE_ENDPOINT + \"/\");\n    dispatch(getEmailTemplatesSuccess(response.data));\n    !!callback && callback(true);\n    console.log(response);\n  } catch (error) {\n    console.log(\"(getEmailTemplates) Status:\", error);\n    !!callback && callback(false);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const updateEmailTemplate = async (dispatch, args, callback) => {\n  try {\n    //dispatch(onLoadingScreen());\n    const response = await api.post(EMAIL_TEMPLATE_ENDPOINT + \"/update\", args);\n    dispatch(updateTemplateAction(response.data));\n    callback(true);\n  } catch (error) {\n    console.log(\"Status:\", error);\n    callback(false); //dispatch(offLoadingScreen());\n  } finally {//dispatch(offLoadingScreen());\n  }\n};\nexport const addEmailTemplate = async (dispatch, args) => {\n  try {\n    //dispatch(onLoadingScreen());\n    const response = await api.post(EMAIL_TEMPLATE_ENDPOINT + \"/add\", args);\n    dispatch(addTemplateAction(response.data));\n  } catch (error) {\n    console.log(\"Status:\", error); //dispatch(offLoadingScreen());\n  } finally {//dispatch(offLoadingScreen());\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/email-template.js"],"names":["api","getEmailTemplatesSuccess","updateTemplateAction","addTemplateAction","onLoadingScreen","offLoadingScreen","EMAIL_TEMPLATE_ENDPOINT","getEmailTemplates","dispatch","callback","response","get","data","console","log","error","updateEmailTemplate","args","post","addEmailTemplate"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,wBAAT,EAAmCC,oBAAnC,EAAyDC,iBAAzD,QAAkF,iCAAlF;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,8BAAlD;AAEA,MAAMC,uBAAuB,GAAG,iBAAhC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,MAAI;AACHD,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACA,UAAMM,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAQL,uBAAuB,GAAG,GAAlC,CAAvB;AAEAE,IAAAA,QAAQ,CAACP,wBAAwB,CAACS,QAAQ,CAACE,IAAV,CAAzB,CAAR;AACA,KAAC,CAACH,QAAF,IAAcA,QAAQ,CAAC,IAAD,CAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,GAPD,CAOE,OAAOK,KAAP,EAAc;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CC,KAA3C;AACA,KAAC,CAACN,QAAF,IAAcA,QAAQ,CAAC,KAAD,CAAtB;AACAD,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACA,GAXD,SAWU;AACTG,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACA;AACD,CAfM;AAiBP,OAAO,MAAMW,mBAAmB,GAAG,OAAOR,QAAP,EAAiBS,IAAjB,EAAuBR,QAAvB,KAAoC;AACtE,MAAI;AACH;AAEA,UAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACkB,IAAJ,CAASZ,uBAAuB,GAAG,SAAnC,EAA8CW,IAA9C,CAAvB;AACAT,IAAAA,QAAQ,CAACN,oBAAoB,CAACQ,QAAQ,CAACE,IAAV,CAArB,CAAR;AACAH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,GAND,CAME,OAAOM,KAAP,EAAc;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACAN,IAAAA,QAAQ,CAAC,KAAD,CAAR,CAFe,CAGf;AACA,GAVD,SAUU,CACT;AACA;AACD,CAdM;AAgBP,OAAO,MAAMU,gBAAgB,GAAG,OAAOX,QAAP,EAAiBS,IAAjB,KAA0B;AACzD,MAAI;AACH;AAEA,UAAMP,QAAQ,GAAG,MAAMV,GAAG,CAACkB,IAAJ,CAASZ,uBAAuB,GAAG,MAAnC,EAA2CW,IAA3C,CAAvB;AACAT,IAAAA,QAAQ,CAACL,iBAAiB,CAACO,QAAQ,CAACE,IAAV,CAAlB,CAAR;AACA,GALD,CAKE,OAAOG,KAAP,EAAc;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB,EADe,CAEf;AACA,GARD,SAQU,CACT;AACA;AACD,CAZM","sourcesContent":["import { api } from \"../api\";\nimport { getEmailTemplatesSuccess, updateTemplateAction, addTemplateAction } from \"../redux/actions/email-template\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\n\nconst EMAIL_TEMPLATE_ENDPOINT = '/email-template';\n\nexport const getEmailTemplates = async (dispatch, callback) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(EMAIL_TEMPLATE_ENDPOINT + \"/\");\n\n\t\tdispatch(getEmailTemplatesSuccess(response.data));\n\t\t!!callback && callback(true);\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\tconsole.log(\"(getEmailTemplates) Status:\", error);\n\t\t!!callback && callback(false);\n\t\tdispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const updateEmailTemplate = async (dispatch, args, callback) => {\n\ttry {\n\t\t//dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(EMAIL_TEMPLATE_ENDPOINT + \"/update\", args);\n\t\tdispatch(updateTemplateAction(response.data));\n\t\tcallback(true);\n\t} catch (error) {\n\t\tconsole.log(\"Status:\", error);\n\t\tcallback(false);\n\t\t//dispatch(offLoadingScreen());\n\t} finally {\n\t\t//dispatch(offLoadingScreen());\n\t}\n};\n\nexport const addEmailTemplate = async (dispatch, args) => {\n\ttry {\n\t\t//dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(EMAIL_TEMPLATE_ENDPOINT + \"/add\", args);\n\t\tdispatch(addTemplateAction(response.data));\n\t} catch (error) {\n\t\tconsole.log(\"Status:\", error);\n\t\t//dispatch(offLoadingScreen());\n\t} finally {\n\t\t//dispatch(offLoadingScreen());\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}