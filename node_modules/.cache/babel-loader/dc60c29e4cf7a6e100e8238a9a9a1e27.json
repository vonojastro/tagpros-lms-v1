{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Profile/PayoutAccount/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport schema from '../../../validators/registration'; // import { errorMessage } from '../../../validators/errorMessages';\n// import { getProcessors } from \"api/payment\";\n\nimport './index.css';\nimport { getTeacherPayoutAccount, saveTeacherPayoutAccount } from \"api/teacher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayoutAccount() {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialValidation = {\n    phone: {\n      validationType: \"\"\n    },\n    email: {\n      validationType: \"\"\n    },\n    firstName: {\n      validationType: \"\"\n    },\n    lastName: {\n      validationType: \"\"\n    }\n  }; // const processors = useSelector((state) =>\n  //   state.payment ? state.payment.getIn([\"data\", \"processors\"]) : {}\n  // );\n\n  const {\n    accountName,\n    accountNumber\n  } = useSelector(state => state.teacher ? state.teacher.getIn([\"payoutAccount\"]) : {});\n  const [editFlag, setEditFlag] = useState(false);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [validationFields, setValidationFields] = useState(initialValidation);\n  React.useEffect(() => {\n    // getProcessors(dispatch);\n    getTeacherPayoutAccount(dispatch); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onBlur = async event => {\n    var {\n      name,\n      value\n    } = event.target;\n\n    try {\n      await schema.validateAt(name, {\n        [name]: value\n      });\n      setValidationFieldKeywords(name, \"valid\");\n    } catch (error) {\n      //* yup error: { ValidationError, errors }\n      var validationType = error.errors ? error.errors.toString() : \"\";\n      setValidationFieldKeywords(name, validationType);\n    }\n  };\n\n  const setValidationFieldKeywords = function (name) {\n    let validationType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const validation = { ...validationFields,\n      [name]: {\n        validationType: validationType\n      }\n    };\n    setValidationFields(validation);\n  };\n\n  const validationMessage = params => {\n    var validationType = validationFields[params].validationType;\n\n    if (validationType) {\n      if (validationType !== \"valid\") return \"invalid-feedback\";else return \"valid-feedback\";\n    } else return \"\";\n  };\n\n  const validationFieldColor = params => {\n    var validationType = validationFields[params].validationType;\n\n    if (validationType) {\n      if (validationType !== \"valid\") return \"has-danger has-error\";else return \"has-success\";\n      /**Enable valid field color */\n    } else return \"\";\n  };\n\n  const validationInputIcon = params => {\n    var validationType = validationFields[params].validationType;\n\n    if (validationType) {\n      if (validationType !== \"valid\") return \"is-invalid\";\n    } else return \"\";\n  };\n\n  const getErrorMessage = (params, placeholder) => {\n    var validationType = validationFields[params].validationType;\n\n    if (validationType) {\n      // if(validationType in errorMessage) { \n      // \tif ([\"too_short\", \"too_long\", \"special_char\"].includes(validationType)) {\n      // \t\treturn placeholder + errorMessage[validationType] \n      // \t}\n      // \treturn errorMessage[validationType] \n      // };\n      return validationType;\n    } else return \"\";\n  };\n\n  const onCancelEdit = () => {\n    let validations = {};\n    validations = { ...validationFields,\n      phone: {\n        validationType: \"\"\n      },\n      email: {\n        validationType: \"\"\n      },\n      firstName: {\n        validationType: \"\"\n      },\n      lastName: {\n        validationType: \"\"\n      }\n    };\n    setEditFlag(false);\n    setSubmitLoading(false);\n    setValidationFields(validations);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setSubmitLoading(true);\n    const payout = {\n      accountName: event.target.elements.firstName.value,\n      accountType: event.target.elements.lastName.value,\n      accountNumber: event.target.elements.email.value\n    };\n    await saveTeacherPayoutAccount(dispatch, payout, status => {\n      setSubmitLoading(false);\n\n      if (status) {\n        setEditFlag(false);\n        getTeacherPayoutAccount(dispatch);\n        toast.success(\"Payout Details has been successfully updated!\");\n      } else {\n        toast.error(\"Failed updating payout details. Please try again.\");\n      }\n    });\n  };\n\n  const formHasErrors = () => {\n    let errors = 0;\n\n    for (var key in validationFields) {\n      const item = validationFields[key];\n\n      if (!!item.validationType && item.validationType !== 'valid') {\n        errors++;\n      }\n    }\n\n    if (errors > 0) return true;else return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: '3px #8080805c solid'\n        },\n        className: \"row justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            paddingTop: '10px'\n          },\n          children: \"PAYOUT DETAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-link\",\n          style: {\n            display: !!editFlag ? 'none' : 'block'\n          },\n          onClick: () => setEditFlag(true),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-horizontal floating-labels\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"col-md-12 lbl\",\n          children: \"Account Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-12 ${validationFieldColor(\"firstName\")} has-feedback`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `form-control ${validationInputIcon(\"firstName\")}`,\n            type: \"text\",\n            name: \"firstName\",\n            defaultValue: accountName,\n            onBlur: onBlur,\n            disabled: !editFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: validationMessage(\"firstName\"),\n            children: getErrorMessage(\"firstName\", \"Account Name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"col-md-12 lbl\",\n          children: \"Account Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-12 ${validationFieldColor(\"lastName\")} has-feedback`,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"custom-select\",\n            name: \"lastName\",\n            disabled: !editFlag,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PYPL\",\n              selected: true,\n              children: \"Paypal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: validationMessage(\"firstName\"),\n            children: getErrorMessage(\"firstName\", \"Account Type\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"col-md-12 lbl\",\n          children: \"Account Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-12 ${validationFieldColor(\"email\")} has-feedback`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `form-control ${validationInputIcon(\"email\")}`,\n            type: \"text\",\n            name: \"email\",\n            defaultValue: accountNumber,\n            onBlur: onBlur,\n            disabled: !editFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: validationMessage(\"email\"),\n            children: getErrorMessage(\"email\", \"Account Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          style: {\n            fontSize: \"12px\"\n          },\n          children: [\"Don't have a paypal account yet? Create one  \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.paypal.com/ph/webapps/mpp/account-selection\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            style: {\n              fontSize: \"11px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"u\", {\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 228\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 102\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: !!editFlag ? 'block' : 'none',\n          marginRight: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link\",\n            style: {\n              marginRight: '20px'\n            },\n            type: \"reset\",\n            onClick: () => onCancelEdit(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            type: \"submit\",\n            disabled: submitLoading || formHasErrors(),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: submitLoading ? 'inline-block' : 'none'\n              },\n              class: \"spinner-border spinner-border-sm btn-load\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), \"Update\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayoutAccount, \"RQap2zKmJ09S24tBeJdz26KQGQQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PayoutAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayoutAccount\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Profile/PayoutAccount/index.jsx"],"names":["React","useState","useSelector","useDispatch","toast","schema","getTeacherPayoutAccount","saveTeacherPayoutAccount","PayoutAccount","dispatch","initialValidation","phone","validationType","email","firstName","lastName","accountName","accountNumber","state","teacher","getIn","editFlag","setEditFlag","submitLoading","setSubmitLoading","validationFields","setValidationFields","useEffect","onBlur","event","name","value","target","validateAt","setValidationFieldKeywords","error","errors","toString","validation","validationMessage","params","validationFieldColor","validationInputIcon","getErrorMessage","placeholder","onCancelEdit","validations","handleSubmit","preventDefault","payout","elements","accountType","status","success","formHasErrors","key","item","padding","borderBottom","paddingTop","display","fontSize","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport schema from '../../../validators/registration';\n// import { errorMessage } from '../../../validators/errorMessages';\n// import { getProcessors } from \"api/payment\";\nimport './index.css';\nimport { getTeacherPayoutAccount, saveTeacherPayoutAccount } from \"api/teacher\";\n\nexport default function PayoutAccount() {\n  const dispatch = useDispatch();\n  const initialValidation = {\n    phone: { validationType: \"\" },\n    email: { validationType: \"\" },\n    firstName: { validationType: \"\" },\n    lastName: { validationType: \"\" }\n  }\n\n  // const processors = useSelector((state) =>\n  //   state.payment ? state.payment.getIn([\"data\", \"processors\"]) : {}\n  // );\n\n  const { accountName, accountNumber } = useSelector((state) =>\n    state.teacher ? state.teacher.getIn([\"payoutAccount\"]) : {}\n  );\n\n  const [editFlag, setEditFlag] = useState(false);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [validationFields, setValidationFields] = useState(initialValidation);\n\n  React.useEffect(() => {\n    // getProcessors(dispatch);\n    getTeacherPayoutAccount(dispatch);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onBlur = async(event) => {\n\t\tvar { name, value } = event.target;\n\t\ttry {\n\t\t\tawait schema.validateAt(name ,{[name] : value});\n\t\t\tsetValidationFieldKeywords(name, \"valid\")\n\n\t\t} catch(error) { //* yup error: { ValidationError, errors }\n\t\t\tvar validationType = error.errors ? error.errors.toString() : \"\";\n\n\t\t\tsetValidationFieldKeywords(name, validationType)\n\t\t}\n\t}\n\n  const setValidationFieldKeywords = (name, validationType = \"\") => {\n\t\t\tconst validation = { ...validationFields, \n\t\t\t\t[name] : { validationType: validationType }\n\t\t\t};\n\n      setValidationFields(validation);\n\t}\n\n  const validationMessage = (params) => {\n\t\tvar validationType = validationFields[params].validationType;\n\n\t\tif(validationType) {\n\t\t\tif(validationType !== \"valid\") return \"invalid-feedback\";\n\t\t\telse return \"valid-feedback\";\n\t\t}\n\n\t\telse return \"\"\n\t}\n\n  const validationFieldColor = (params) => {\n\t\tvar validationType = validationFields[params].validationType;\n\n\t\tif(validationType) {\n\t\t\tif(validationType !== \"valid\") return \"has-danger has-error\"\n\t\t\telse return \"has-success\" /**Enable valid field color */\n\t\t} \n\t\telse return \"\" \n\t}\n\n  const validationInputIcon = (params) => {\n\t\tvar validationType = validationFields[params].validationType;\n\n\t\tif(validationType) {\n\t\t\tif(validationType !== \"valid\")  return \"is-invalid\";\n\t\t}\n\n\t\telse return \"\"\n\t}\n\n  const getErrorMessage = (params, placeholder) => {\n\t\tvar validationType = validationFields[params].validationType;\n\n\t\tif(validationType) {\n\t\t\t// if(validationType in errorMessage) { \n\t\t\t// \tif ([\"too_short\", \"too_long\", \"special_char\"].includes(validationType)) {\n\t\t\t// \t\treturn placeholder + errorMessage[validationType] \n\t\t\t// \t}\n\t\t\t// \treturn errorMessage[validationType] \n\t\t\t// };\n\n      return validationType;\n\t\t}\n\n\t\telse return \"\";\n\t}\n\n  const onCancelEdit = () => {\n    let validations = {};\n\n    validations = { ...validationFields, \n        phone: { validationType: \"\" },\n        email: { validationType: \"\" },\n        firstName: { validationType: \"\" },\n        lastName: { validationType: \"\" }\n    }\n    setEditFlag(false);\n    setSubmitLoading(false);\n    setValidationFields(validations);\n  }\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setSubmitLoading(true);\n    \n    const payout = {\n      accountName: event.target.elements.firstName.value,\n      accountType: event.target.elements.lastName.value,\n      accountNumber: event.target.elements.email.value\n    }\n\n    await saveTeacherPayoutAccount(dispatch, payout, (status) => {\n      setSubmitLoading(false);\n      if(status){\n        setEditFlag(false);\n        getTeacherPayoutAccount(dispatch)\n        toast.success(\"Payout Details has been successfully updated!\");\n      }else{\n        toast.error(\"Failed updating payout details. Please try again.\");\n      }\n    });\n  }\n\n  const formHasErrors = () => {\n    let errors = 0\n    \n    for (var key in validationFields) {\n      const item = validationFields[key];\n      if (!!item.validationType && item.validationType !== 'valid') {\n        errors++;\n      }\n    }\n\n    if(errors > 0) return true;\n    else return false;\n  }\n\n  return (\n    <div className=\"card-body\">\n      <div style={{padding: '10px 20px'}}>\n        <div style={{borderBottom: '3px #8080805c solid'}} className=\"row justify-content-between\">\n          <h5 style={{paddingTop: '10px'}}>PAYOUT DETAILS</h5>\n          <button className=\"btn btn-link\" style={{display: !!editFlag ? 'none' : 'block'}} onClick={() => setEditFlag(true)}>\n            <i className=\"fas fa-edit\"></i>\n          </button>\n        </div>\n      </div>\n      <br />\n      <form className=\"form-horizontal floating-labels\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <span className=\"col-md-12 lbl\">Account Name</span>\n          <div className={`col-md-12 ${validationFieldColor(\"firstName\")} has-feedback`}>\n            <input className={`form-control ${validationInputIcon(\"firstName\")}`} type=\"text\"\n                      name=\"firstName\" defaultValue={accountName}\n                      onBlur={onBlur} disabled = {!editFlag}/>\n\n            <span className=\"bar\"></span>\n\n            <div className={validationMessage(\"firstName\")}> \n              {getErrorMessage(\"firstName\", \"Account Name\")} \n            </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <span className=\"col-md-12 lbl\">Account Type</span>\n          <div className={`col-md-12 ${validationFieldColor(\"lastName\")} has-feedback`}>\n            <select class=\"custom-select\" name=\"lastName\" disabled = {!editFlag}>\n                {/* <option selected={accountType === null || accountType === undefined}>Choose...</option> */}\n                <option value={\"PYPL\"} selected>Paypal</option>\n                {/* {\n                    processors && (Object.keys(processors)).map(type => (\n                        <optgroup label={`~.~.~.~${type.toUpperCase()}~.~.~.~`}>\n                            {processors[type].map(item => (\n                                <option value={item.procId} selected={accountType === item.procId}>{item.acronym}</option>\n                            ))}\n                        </optgroup>\n                    ))\n                } */}\n            </select>\n\n            <span className=\"bar\"></span>\n\n            <div className={validationMessage(\"firstName\")}> \n              {getErrorMessage(\"firstName\", \"Account Type\")} \n            </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <span className=\"col-md-12 lbl\">Account Email</span>\n          <div className={`col-md-12 ${validationFieldColor(\"email\")} has-feedback`}>\n            <input className={`form-control ${validationInputIcon(\"email\")}`} type=\"text\"\n                      name=\"email\" defaultValue={accountNumber}\n                      onBlur={onBlur} disabled = {!editFlag}/>\n\n            <span className=\"bar\"></span>\n\n            <div className={validationMessage(\"email\")}> \n              {getErrorMessage(\"email\", \"Account Number\")} \n            </div>\n          </div>\n          {/* <div className={`col-md-12 ${validationFieldColor(\"phone\")} has-feedback`}>\n            <input className={`form-control ${validationInputIcon(\"phone\")}`} type=\"text\"\n                      name=\"phone\" defaultValue={accountNumber}\n                      onBlur={onBlur} disabled = {!editFlag}/>\n\n            <span className=\"bar\"></span>\n\n            <div className={validationMessage(\"phone\")}> \n              {getErrorMessage(\"phone\", \"Account Number\")} \n            </div>\n          </div> */}\n        </div>\n        <div>\n          <p className=\"m-0\" style={{fontSize: \"12px\"}}>Don't have a paypal account yet? Create one  <a href=\"https://www.paypal.com/ph/webapps/mpp/account-selection\" target=\"_blank\" rel=\"noreferrer\" style={{fontSize: \"11px\"}}><u>here</u></a></p>\n        </div>\n        <div style={{display: !!editFlag ? 'block': 'none', marginRight: '20px'}}>\n          <div className=\"form-group row justify-content-end\">\n              <button className=\"btn btn-link\" style={{marginRight:'20px'}} type=\"reset\" onClick={() => onCancelEdit()}>Cancel</button>\n              <button className=\"btn btn-info\" type=\"submit\" disabled={submitLoading || formHasErrors()}>\n                <span style={{ display: submitLoading ? 'inline-block' : 'none' }} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                Update\n              </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}