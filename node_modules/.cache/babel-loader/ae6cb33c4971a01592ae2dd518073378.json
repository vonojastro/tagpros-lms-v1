{"ast":null,"code":"import { getLearners } from \"../../api/learners\";\nexport const FETCH_LEARNERS = \"FETCH_LEARNERS\";\nexport const FETCH_LEARNERS_REQUEST = \"FETCH_LEARNERS_REQUEST\";\nexport const FETCH_LEARNERS_ERROR = \"FETCH_LEARNERS_ERROR\";\nexport const FETCH_LEARNERS_SUCCESS = \"FETCH_LEARNERS_SUCCESS\";\nexport function fetchLearners() {\n  return async dispatch => {\n    try {\n      dispatch(fetchLearnersRequest());\n      const learners = await getLearners(dispatch);\n      dispatch(fetchLearnersSuccess(learners));\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n\n      dispatch(fetchLearnersError(data));\n      return error;\n    }\n  };\n}\nexport function fetchLearnersRequest(data) {\n  return {\n    type: FETCH_LEARNERS_REQUEST,\n    data\n  };\n}\nexport function fetchLearnersError(data) {\n  return {\n    type: FETCH_LEARNERS_ERROR,\n    data\n  };\n}\nexport function fetchLearnersSuccess(data) {\n  console.log('data', data);\n  return {\n    type: FETCH_LEARNERS_SUCCESS,\n    data\n  };\n}","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/actions/learners.js"],"names":["getLearners","FETCH_LEARNERS","FETCH_LEARNERS_REQUEST","FETCH_LEARNERS_ERROR","FETCH_LEARNERS_SUCCESS","fetchLearners","dispatch","fetchLearnersRequest","learners","fetchLearnersSuccess","error","data","response","status","request","fetchLearnersError","type","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,oBAAoB,EAArB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMR,WAAW,CAACM,QAAD,CAAlC;AACAA,MAAAA,QAAQ,CAACG,oBAAoB,CAACD,QAAD,CAArB,CAAR;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACd;AACA,YAAMC,IAAI,GAAG,EAAb;;AACA,UAAID,KAAK,CAACE,QAAV,EAAoB;AAClB;AACR;AACA;AACA;AACQD,QAAAA,IAAI,CAACE,MAAL,GAAcH,KAAK,CAACE,QAAN,CAAeC,MAA7B;AACD,OAND,MAMO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACxB;AACR;AACA;AACA;AACA;AACQH,QAAAA,IAAI,CAACE,MAAL,GAAc,GAAd;AACD,OAPM,MAOA;AACLF,QAAAA,IAAI,CAACE,MAAL,GAAc,GAAd;AACD;;AACDP,MAAAA,QAAQ,CAACS,kBAAkB,CAACJ,IAAD,CAAnB,CAAR;AACA,aAAOD,KAAP;AACD;AACF,GA3BD;AA4BD;AAED,OAAO,SAASH,oBAAT,CAA8BI,IAA9B,EAAoC;AACzC,SAAO;AAAEK,IAAAA,IAAI,EAAEd,sBAAR;AAAgCS,IAAAA;AAAhC,GAAP;AACD;AAED,OAAO,SAASI,kBAAT,CAA4BJ,IAA5B,EAAkC;AACvC,SAAO;AAAEK,IAAAA,IAAI,EAAEb,oBAAR;AAA8BQ,IAAAA;AAA9B,GAAP;AACD;AAED,OAAO,SAASF,oBAAT,CAA8BE,IAA9B,EAAoC;AACzCM,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AACA,SAAO;AAAEK,IAAAA,IAAI,EAAEZ,sBAAR;AAAgCO,IAAAA;AAAhC,GAAP;AACD","sourcesContent":["import { getLearners } from \"../../api/learners\";\n\nexport const FETCH_LEARNERS = \"FETCH_LEARNERS\";\nexport const FETCH_LEARNERS_REQUEST = \"FETCH_LEARNERS_REQUEST\";\nexport const FETCH_LEARNERS_ERROR = \"FETCH_LEARNERS_ERROR\";\nexport const FETCH_LEARNERS_SUCCESS = \"FETCH_LEARNERS_SUCCESS\";\n\nexport function fetchLearners() {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchLearnersRequest());\n      const learners = await getLearners(dispatch);\n      dispatch(fetchLearnersSuccess(learners));\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n      dispatch(fetchLearnersError(data));\n      return error;\n    }\n  };\n}\n\nexport function fetchLearnersRequest(data) {\n  return { type: FETCH_LEARNERS_REQUEST, data };\n}\n\nexport function fetchLearnersError(data) {\n  return { type: FETCH_LEARNERS_ERROR, data };\n}\n\nexport function fetchLearnersSuccess(data) {\n  console.log('data', data);\n  return { type: FETCH_LEARNERS_SUCCESS, data };\n}\n"]},"metadata":{},"sourceType":"module"}