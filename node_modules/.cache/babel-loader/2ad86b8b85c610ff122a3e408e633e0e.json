{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/TeacherApplication/TeacherApplicationFormSegment/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, FormSpy } from \"react-final-form\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { CheckBoxControl, FileInputControl, InputControl, TextAreaControl } from \"../../common/Form/Inputs\";\nimport { group0Fields, group1Fields, group2Fields, group3Fields, group4Fields } from \"../fields\";\nimport { s3Config } from \"../../../config\";\nimport S3 from \"aws-s3-pro\";\nimport useValidationSchema from \"../../../hooks/use-validation-schema\";\nimport { getInputGroupSchema } from \"../../../validators/teacherApplication\";\nimport { getStep, toggleCheckBoxState } from \"../../../utils/teacherApplication\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateTeacherAppData } from \"../../../redux/actions/teacherApp\";\nimport { api } from \"../../../api\";\nimport { toast } from 'react-toastify';\nimport { getTeacherApplication } from \"api/teacher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst s3Client = new S3(s3Config);\n\nfunction SubmitButton(_ref) {\n  let {\n    submitting,\n    step,\n    isFirstTime,\n    pristine,\n    hasValidationErrors\n  } = _ref;\n  const label = submitting ? \"Loading\" : step === 5 ? \"Submit Application\" : isFirstTime || pristine ? \"Next\" : \"Update\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    class: \"btn waves-effect waves-light btn-info m-t-20 btn-lg d-flex align-items-center\",\n    type: \"submit\",\n    disabled: submitting || hasValidationErrors,\n    children: [submitting && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"spinner-border text-light mr-2\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SubmitButton;\nexport default function TeacherApplicationFormSegment(_ref2) {\n  _s();\n\n  let {\n    group\n  } = _ref2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const accountId = user ? user.accountId : \"\";\n\n  const goToNextStep = () => {\n    navigate(`/application/step-${getStep(location) + 1}`);\n  };\n\n  const canGoToNextStep = () => getStep(location) < 5;\n\n  const fields = {\n    0: group0Fields,\n    1: group1Fields,\n    2: group2Fields,\n    3: group3Fields,\n    4: group4Fields\n  };\n  const validate = useValidationSchema(getInputGroupSchema(group));\n\n  const handleSubmit = async values => {\n    try {\n      let files = [];\n      fields[group].forEach(_ref3 => {\n        var _values$name;\n\n        let {\n          type,\n          name\n        } = _ref3;\n        if (type === \"checkbox\") toggleCheckBoxState(name, true);\n\n        if (type === \"file\" && (_values$name = values[name]) !== null && _values$name !== void 0 && _values$name.name) {\n          files.push(s3Client.uploadFile(values[name], `${accountId}-${name}`).then(result => ({\n            [name]: result.key\n          })).catch(err => err));\n        }\n      });\n\n      if (files.length) {\n        files = await Promise.all(files);\n        files = files.reduce((acc, curr) => ({ ...acc,\n          [Object.keys(curr)[0]]: curr[Object.keys(curr)[0]]\n        }), {});\n      }\n\n      const hasNextStep = canGoToNextStep();\n      const newData = { ...values,\n        ...files,\n        accountId,\n        applicationStatus: !hasNextStep ? \"ASTAT002\" : \"ASTAT001\",\n        agreeTerms: !hasNextStep\n      };\n      console.log(\"ðŸš€ ~ file: index.jsx ~ line 71 ~ handleSubmit ~ newData\", newData);\n      await api.post(\"teacher/update\", newData);\n      dispatch(updateTeacherAppData(newData));\n      getTeacherApplication(dispatch);\n      if (hasNextStep) goToNextStep();else {\n        await dispatch(updateTeacherAppData({\n          applicationStatus: \"ASTAT002\"\n        }));\n        toast.success(\"Your application has been sent!\");\n        navigate(\"/application-status\", {\n          replace: true\n        });\n      }\n      ;\n    } catch (error) {\n      console.log(\"ðŸš€ ~ file: index.jsx ~ line 27 ~ handleSubmit ~ error\", error);\n    }\n  }; // const initialValues = useSelector((state) => state.teacherApp.data);\n\n\n  const initialValues = useSelector(state => state.teacher ? state.teacher.getIn(['applications', 'application']) : {});\n  return /*#__PURE__*/_jsxDEV(Form, {\n    validate: validate,\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    render: _ref4 => {\n      var _initialValues$fields;\n\n      let {\n        handleSubmit,\n        initialValues,\n        submitting\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-material form-horizontal position-relative\",\n        children: [fields[group].map(props => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 mb-5\",\n          children: [props.type === \"text\" && /*#__PURE__*/_jsxDEV(InputControl, { ...props,\n            disabled: submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 41\n          }, this), props.type === \"checkbox\" && /*#__PURE__*/_jsxDEV(CheckBoxControl, { ...props,\n            disabled: initialValues[props.name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), props.type === \"text-area\" && /*#__PURE__*/_jsxDEV(TextAreaControl, { ...props,\n            disabled: submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), props.type === \"file\" && /*#__PURE__*/_jsxDEV(FileInputControl, { ...props,\n            disabled: submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(FormSpy, {\n          component: SubmitButton,\n          step: getStep(location),\n          subscription: {\n            submitting: true,\n            initialValues: true,\n            pristine: true,\n            hasValidationErrors: true\n          },\n          isFirstTime: !!!((_initialValues$fields = initialValues[fields[group][0].name]) !== null && _initialValues$fields !== void 0 && _initialValues$fields.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TeacherApplicationFormSegment, \"bJmOJsJlaVwTHN2+f4uFAWl3xQE=\", false, function () {\n  return [useNavigate, useLocation, useDispatch, useSelector, useValidationSchema, useSelector];\n});\n\n_c2 = TeacherApplicationFormSegment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubmitButton\");\n$RefreshReg$(_c2, \"TeacherApplicationFormSegment\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/TeacherApplication/TeacherApplicationFormSegment/index.jsx"],"names":["React","Form","FormSpy","useLocation","useNavigate","CheckBoxControl","FileInputControl","InputControl","TextAreaControl","group0Fields","group1Fields","group2Fields","group3Fields","group4Fields","s3Config","S3","useValidationSchema","getInputGroupSchema","getStep","toggleCheckBoxState","useDispatch","useSelector","updateTeacherAppData","api","toast","getTeacherApplication","s3Client","SubmitButton","submitting","step","isFirstTime","pristine","hasValidationErrors","label","TeacherApplicationFormSegment","group","navigate","location","dispatch","user","state","auth","accountId","goToNextStep","canGoToNextStep","fields","validate","handleSubmit","values","files","forEach","type","name","push","uploadFile","then","result","key","catch","err","length","Promise","all","reduce","acc","curr","Object","keys","hasNextStep","newData","applicationStatus","agreeTerms","console","log","post","success","replace","error","initialValues","teacher","getIn","map","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, FormSpy } from \"react-final-form\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  CheckBoxControl,\n  FileInputControl,\n  InputControl,\n  TextAreaControl,\n} from \"../../common/Form/Inputs\";\nimport {\n  group0Fields,\n  group1Fields,\n  group2Fields,\n  group3Fields,\n  group4Fields,\n} from \"../fields\";\nimport { s3Config } from \"../../../config\";\nimport S3 from \"aws-s3-pro\";\nimport useValidationSchema from \"../../../hooks/use-validation-schema\";\nimport { getInputGroupSchema } from \"../../../validators/teacherApplication\";\nimport { getStep, toggleCheckBoxState } from \"../../../utils/teacherApplication\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateTeacherAppData } from \"../../../redux/actions/teacherApp\";\nimport { api } from \"../../../api\";\nimport { toast } from 'react-toastify';\nimport { getTeacherApplication } from \"api/teacher\";\nconst s3Client = new S3(s3Config);\n\nfunction SubmitButton({submitting, step, isFirstTime, pristine, hasValidationErrors}) {\n  const label = submitting ? \"Loading\" : step === 5 ? \"Submit Application\" : isFirstTime || pristine ? \"Next\" : \"Update\";\n  return (\n    <button\n      class='btn waves-effect waves-light btn-info m-t-20 btn-lg d-flex align-items-center'\n      type='submit'\n      disabled={submitting || hasValidationErrors}\n    >\n      {submitting && (\n        <React.Fragment>\n          <div class='spinner-border text-light mr-2' role='status'>\n            <span class='sr-only'>Loading...</span>\n          </div>\n        </React.Fragment>\n      )}\n      {label}\n    </button>\n  );\n}\n\nexport default function TeacherApplicationFormSegment({ group }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user);\n  const accountId = user ? user.accountId : \"\";\n\n  const goToNextStep = () => {\n    navigate(`/application/step-${getStep(location) + 1}`);\n  };\n\n  const canGoToNextStep = () => getStep(location) < 5;\n\n  const fields = {\n    0: group0Fields,\n    1: group1Fields,\n    2: group2Fields,\n    3: group3Fields,\n    4: group4Fields,\n  };\n\n  const validate = useValidationSchema(getInputGroupSchema(group));\n  const handleSubmit = async (values) => {\n    try {\n      let files = [];\n      fields[group].forEach(({ type, name }) => {\n        if (type === \"checkbox\") toggleCheckBoxState(name, true);\n        if (type === \"file\" && values[name]?.name) {\n          files.push(\n            s3Client\n              .uploadFile(values[name], `${accountId}-${name}`)\n              .then((result) => ({ [name]: result.key }))\n              .catch((err) => err)\n          );\n        }\n      });\n\n      if (files.length) {\n        files = await Promise.all(files);\n        files = files.reduce(\n          (acc, curr) => ({ ...acc, [Object.keys(curr)[0]]: curr[Object.keys(curr)[0]] }),\n          {}\n        );\n      }\n\n      const hasNextStep = canGoToNextStep();\n\n      const newData = {\n        ...values,\n        ...files,\n        accountId,\n        applicationStatus: !hasNextStep ? \"ASTAT002\" : \"ASTAT001\",\n        agreeTerms: !hasNextStep,\n      };\n\n      console.log(\"ðŸš€ ~ file: index.jsx ~ line 71 ~ handleSubmit ~ newData\", newData);\n\n      await api.post(\"teacher/update\", newData);\n\n      dispatch(updateTeacherAppData(newData));\n      getTeacherApplication(dispatch);\n\n      if (hasNextStep) goToNextStep();\n      else\n      {\n        await dispatch(updateTeacherAppData({ applicationStatus: \"ASTAT002\" }));\n        toast.success(\"Your application has been sent!\");\n        navigate(\"/application-status\", { replace: true });\n      };\n    } catch (error) {\n      console.log(\"ðŸš€ ~ file: index.jsx ~ line 27 ~ handleSubmit ~ error\", error);\n    }\n  };\n\n  // const initialValues = useSelector((state) => state.teacherApp.data);\n  const initialValues = useSelector((state) => state.teacher ? state.teacher.getIn(['applications', 'application']) : {});\n\n  return (\n    <Form\n      validate={validate}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      render={({ handleSubmit, initialValues, submitting }) => (\n        <form\n          onSubmit={handleSubmit}\n          className=\"form-material form-horizontal position-relative\"\n        >\n          {fields[group].map((props) => (\n            <div className=\"mt-3 mb-5\">\n              {props.type === \"text\" && <InputControl {...props} disabled={submitting} />}\n              {props.type === \"checkbox\" && (\n                <CheckBoxControl {...props} disabled={initialValues[props.name]} />\n              )}\n              {props.type === \"text-area\" && (\n                <TextAreaControl {...props} disabled={submitting} />\n              )}\n              {props.type === \"file\" && (\n                <FileInputControl {...props} disabled={submitting} />\n              )}\n            </div>\n          ))}\n          <FormSpy component={SubmitButton} step={getStep(location)} subscription={{submitting: true, initialValues: true, pristine: true, hasValidationErrors: true}} isFirstTime={!!!initialValues[fields[group][0].name]?.length} />\n        </form>\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}