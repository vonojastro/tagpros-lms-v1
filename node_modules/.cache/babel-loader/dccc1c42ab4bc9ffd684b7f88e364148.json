{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/JitsiMeeting/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useBeforeunload } from 'react-beforeunload';\nimport React, { useEffect, useState } from 'react';\nimport { JitsiMeeting as Jitsi } from '@jitsi/react-sdk';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal } from 'react-bootstrap';\nimport ProtectedRoute from 'components/ProtectedRoute';\nimport { getMeeting } from 'api/meetings';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n`;\n/**\n * @typedef {import('@jitsi/react-sdk/lib/types/IJitsiMeetExternalApi').default} api\n */\n\n/**\n * @typedef {Function} apiSetter\n */\n\n_c = Wrapper;\n\nfunction JitsiMeeting() {\n  _s();\n\n  /**\n   * @type {[api, apiSetter]}\n   */\n  const [api, setApi] = useState(null);\n  const {\n    userInfo,\n    userType\n  } = useSelector(state => {\n    var _state$auth, _state$auth$user, _state$auth2, _state$auth2$user, _state$auth3, _state$auth3$user, _state$auth4, _state$auth5, _state$auth6, _state$auth6$user;\n\n    return {\n      userType: state === null || state === void 0 ? void 0 : (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.type,\n      userInfo: {\n        displayName: (_state$auth2 = state.auth) !== null && _state$auth2 !== void 0 && (_state$auth2$user = _state$auth2.user) !== null && _state$auth2$user !== void 0 && _state$auth2$user.nickname.length ? (_state$auth3 = state.auth) === null || _state$auth3 === void 0 ? void 0 : (_state$auth3$user = _state$auth3.user) === null || _state$auth3$user === void 0 ? void 0 : _state$auth3$user.nickname : ((_state$auth4 = state.auth) === null || _state$auth4 === void 0 ? void 0 : _state$auth4.user.firstName) + ' ' + ((_state$auth5 = state.auth) === null || _state$auth5 === void 0 ? void 0 : _state$auth5.user.lastName),\n        email: (_state$auth6 = state.auth) === null || _state$auth6 === void 0 ? void 0 : (_state$auth6$user = _state$auth6.user) === null || _state$auth6$user === void 0 ? void 0 : _state$auth6$user.email\n      }\n    };\n  });\n  const [recording, setRecording] = useState(false);\n  const dispatch = useDispatch();\n  const meeting = useSelector(s => {\n    var _s$meetings;\n\n    return s === null || s === void 0 ? void 0 : (_s$meetings = s.meetings) === null || _s$meetings === void 0 ? void 0 : _s$meetings.meeting;\n  });\n  const {\n    dropboxClientId,\n    dropboxAccessToken\n  } = meeting || {};\n\n  const handleReadyClosed = () => {\n    stopRecording();\n  };\n\n  const canSecureMeeting = userType === 'teacher';\n  const canVerifyParticipant = userType === 'teacher';\n  const canRecordMeeting = userType === 'teacher';\n\n  const secureMeeting = () => {\n    if (canSecureMeeting) {// api.executeCommand('password', params.id);\n      // api.executeCommand('toggleLobby', true);\n    }\n  };\n\n  const initIFrame = iFrameRef => {\n    iFrameRef.style.height = '100%';\n  };\n\n  const handleVideoConferenceJoined = () => //   {\n  //   roomName,\n  //   id,\n  //   displayName,\n  //   avatarURL,\n  //   breakoutRoom,\n  // }\n  {\n    secureMeeting();\n  };\n\n  useBeforeunload(event => {\n    event.preventDefault();\n    stopRecording();\n  });\n\n  const participantIsAllowedInMeeting = participantId => true;\n  /* Should be implemented */\n\n\n  const verifyParticipant = _ref => {\n    let {\n      id: participantId\n    } = _ref;\n\n    if (canVerifyParticipant && !participantIsAllowedInMeeting(participantId)) {\n      api === null || api === void 0 ? void 0 : api.executeCommand('kickParticipant', participantId);\n    }\n  };\n\n  const photo = useSelector(s => {\n    var _s$auth, _s$auth$user;\n\n    return (_s$auth = s.auth) === null || _s$auth === void 0 ? void 0 : (_s$auth$user = _s$auth.user) === null || _s$auth$user === void 0 ? void 0 : _s$auth$user.photo;\n  });\n\n  const setMyProfile = () => {\n    api === null || api === void 0 ? void 0 : api.executeCommand('avatarURL', photo);\n  };\n\n  const handleParticipantJoinedOnce = () => {\n    startRecording();\n    setMyProfile();\n  };\n\n  const handleParticipantJoined = _ref2 => {\n    let {\n      id,\n      displayName\n    } = _ref2;\n    verifyParticipant({\n      displayName,\n      id\n    });\n  };\n\n  const stopRecording = () => {\n    if (canRecordMeeting) {\n      api === null || api === void 0 ? void 0 : api.stopRecording('file');\n      setRecording(false);\n    }\n  };\n\n  const startRecording = () => {\n    if (canRecordMeeting) {\n      api === null || api === void 0 ? void 0 : api.startRecording({\n        mode: 'file',\n        dropboxToken: dropboxAccessToken\n      });\n      setRecording(true);\n    }\n  };\n\n  const continueRecording = () => {\n    const numberOfParticipants = api === null || api === void 0 ? void 0 : api.getNumberOfParticipants();\n    const shouldContinueRecording = numberOfParticipants > 0;\n    if (shouldContinueRecording) startRecording();\n  };\n\n  useEffect(() => {\n    if (api) {\n      api.once('videoConferenceJoined', handleVideoConferenceJoined);\n      api.once('participantJoined', handleParticipantJoinedOnce);\n      api.on('participantJoined', handleParticipantJoined);\n      continueRecording();\n    }\n\n    return api === null || api === void 0 ? void 0 : api.removeAllListeners;\n  }, [!!api]);\n  const params = useParams();\n  const [showConfirmEndModal, setShowConfirmEndModal] = useState(false);\n\n  const handleCloseConfirmEndModal = () => setShowConfirmEndModal(false);\n\n  const handleShowConfirmEndModal = () => setShowConfirmEndModal(true);\n\n  const handleEndMeeting = () => {\n    stopRecording();\n    handleCloseConfirmEndModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n    isAllowed: () => getMeeting(dispatch, params.id),\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [canRecordMeeting && recording && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 10\n        },\n        variant: \"secondary\",\n        onClick: handleShowConfirmEndModal,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-phone-alt mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), \"End Class\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showConfirmEndModal,\n        onHide: handleCloseConfirmEndModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Confirm end class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleEndMeeting,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCloseConfirmEndModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Jitsi, {\n        onReadyToClose: handleReadyClosed,\n        getIFrameRef: initIFrame,\n        userInfo: userInfo,\n        roomName: meeting === null || meeting === void 0 ? void 0 : meeting.room,\n        onApiReady: setApi,\n        interfaceConfigOverwrite: {\n          APP_NAME: 'Tagpros'\n        },\n        configOverwrite: {\n          apiLogLevels: [],\n          remoteVideoMenu: {\n            disableKick: !canSecureMeeting\n          },\n          autoKnockLobby: true,\n          prejoinPageEnabled: false,\n          toolbarButtons: ['camera', 'chat', 'fullscreen', 'participants-pane', 'raisehand', 'tileview', 'toggle-camera', 'videoquality', 'microphone', 'desktop', 'hangup'],\n          localSubject: meeting === null || meeting === void 0 ? void 0 : meeting.title,\n          readOnlyName: true,\n          dropbox: {\n            appKey: dropboxClientId\n          },\n          fileRecordingsServiceEnabled: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JitsiMeeting, \"U0ErUL4cafYcS/8Wq+3AJRg3k/Q=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useBeforeunload, useSelector, useParams];\n});\n\n_c2 = JitsiMeeting;\nexport default JitsiMeeting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"JitsiMeeting\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/JitsiMeeting/index.jsx"],"names":["useBeforeunload","React","useEffect","useState","JitsiMeeting","Jitsi","styled","useDispatch","useSelector","Button","Modal","ProtectedRoute","getMeeting","useParams","Wrapper","div","api","setApi","userInfo","userType","state","auth","user","type","displayName","nickname","length","firstName","lastName","email","recording","setRecording","dispatch","meeting","s","meetings","dropboxClientId","dropboxAccessToken","handleReadyClosed","stopRecording","canSecureMeeting","canVerifyParticipant","canRecordMeeting","secureMeeting","initIFrame","iFrameRef","style","height","handleVideoConferenceJoined","event","preventDefault","participantIsAllowedInMeeting","participantId","verifyParticipant","id","executeCommand","photo","setMyProfile","handleParticipantJoinedOnce","startRecording","handleParticipantJoined","mode","dropboxToken","continueRecording","numberOfParticipants","getNumberOfParticipants","shouldContinueRecording","once","on","removeAllListeners","params","showConfirmEndModal","setShowConfirmEndModal","handleCloseConfirmEndModal","handleShowConfirmEndModal","handleEndMeeting","position","top","left","room","APP_NAME","apiLogLevels","remoteVideoMenu","disableKick","autoKnockLobby","prejoinPageEnabled","toolbarButtons","localSubject","title","readOnlyName","dropbox","appKey","fileRecordingsServiceEnabled"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useBeforeunload } from 'react-beforeunload';\nimport React, { useEffect, useState } from 'react';\nimport { JitsiMeeting as Jitsi } from '@jitsi/react-sdk';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal } from 'react-bootstrap';\nimport ProtectedRoute from 'components/ProtectedRoute';\nimport { getMeeting } from 'api/meetings';\nimport { useParams } from 'react-router';\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n`;\n\n/**\n * @typedef {import('@jitsi/react-sdk/lib/types/IJitsiMeetExternalApi').default} api\n */\n/**\n * @typedef {Function} apiSetter\n */\nfunction JitsiMeeting() {\n  /**\n   * @type {[api, apiSetter]}\n   */\n  const [api, setApi] = useState(null);\n  const { userInfo, userType } = useSelector(state => {\n    return {\n      userType: state?.auth?.user?.type,\n      userInfo: {\n        displayName: state.auth?.user?.nickname.length\n          ? state.auth?.user?.nickname\n          : state.auth?.user.firstName + ' ' + state.auth?.user.lastName,\n        email: state.auth?.user?.email\n      }\n    };\n  });\n  const [recording, setRecording] = useState(false);\n  const dispatch = useDispatch();\n  const meeting = useSelector(s => s?.meetings?.meeting);\n  const {dropboxClientId, dropboxAccessToken} = meeting || {};\n\n  const handleReadyClosed = () => {\n    stopRecording();\n  };\n\n  const canSecureMeeting = userType === 'teacher';\n  const canVerifyParticipant = userType === 'teacher';\n  const canRecordMeeting = userType === 'teacher';\n\n  const secureMeeting = () => {\n    if (canSecureMeeting) {\n      // api.executeCommand('password', params.id);\n      // api.executeCommand('toggleLobby', true);\n    }\n  };\n\n  const initIFrame = iFrameRef => {\n    iFrameRef.style.height = '100%';\n  };\n  const handleVideoConferenceJoined = () =>\n    //   {\n    //   roomName,\n    //   id,\n    //   displayName,\n    //   avatarURL,\n    //   breakoutRoom,\n    // }\n    {\n      secureMeeting();\n    };\n\n  useBeforeunload(event => {\n    event.preventDefault();\n    stopRecording();\n  });\n  const participantIsAllowedInMeeting = participantId => true; /* Should be implemented */\n  const verifyParticipant = ({ id: participantId }) => {\n    if (canVerifyParticipant && !participantIsAllowedInMeeting(participantId)) {\n      api?.executeCommand('kickParticipant', participantId);\n    }\n  };\n  const photo = useSelector(s => s.auth?.user?.photo);\n  const setMyProfile = () => {\n    api?.executeCommand('avatarURL', photo);\n  };\n  const handleParticipantJoinedOnce = () => {\n    startRecording();\n    setMyProfile();\n  };\n\n  const handleParticipantJoined = ({ id, displayName }) => {\n    verifyParticipant({ displayName, id });\n  };\n\n  const stopRecording = () => {\n    if (canRecordMeeting) {\n      api?.stopRecording('file');\n      setRecording(false);\n    }\n  };\n\n  const startRecording = () => {\n    if (canRecordMeeting) {\n      api?.startRecording({\n        mode: 'file',\n        dropboxToken: dropboxAccessToken\n      });\n      setRecording(true);\n    }\n  };\n\n  const continueRecording = () => {\n    const numberOfParticipants = api?.getNumberOfParticipants();\n    const shouldContinueRecording = numberOfParticipants > 0;\n    if (shouldContinueRecording) startRecording();\n  };\n\n  useEffect(() => {\n    if (api) {\n      api.once('videoConferenceJoined', handleVideoConferenceJoined);\n      api.once('participantJoined', handleParticipantJoinedOnce);\n      api.on('participantJoined', handleParticipantJoined);\n      continueRecording();\n    }\n\n    return api?.removeAllListeners;\n  }, [!!api]);\n  const params = useParams();\n  const [showConfirmEndModal, setShowConfirmEndModal] = useState(false);\n\n  const handleCloseConfirmEndModal = () => setShowConfirmEndModal(false);\n  const handleShowConfirmEndModal = () => setShowConfirmEndModal(true);\n  const handleEndMeeting = () => {\n    stopRecording();\n    handleCloseConfirmEndModal();\n  };\n\n  return (\n    <ProtectedRoute isAllowed={() => getMeeting(dispatch, params.id)}>\n      <Wrapper>\n        {canRecordMeeting && recording && (\n          <Button\n            style={{ position: 'absolute', top: 10, left: 10 }}\n            variant='secondary'\n            onClick={handleShowConfirmEndModal}\n          >\n            <i className='fas fa-phone-alt mr-2' />\n            End Class\n          </Button>\n        )}\n        <Modal show={showConfirmEndModal} onHide={handleCloseConfirmEndModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirm end class</Modal.Title>\n          </Modal.Header>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={handleEndMeeting}>\n              Confirm\n            </Button>\n            <Button variant='primary' onClick={handleCloseConfirmEndModal}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Jitsi\n          onReadyToClose={handleReadyClosed}\n          getIFrameRef={initIFrame}\n          userInfo={userInfo}\n          roomName={meeting?.room}\n          onApiReady={setApi}\n          interfaceConfigOverwrite={{\n            APP_NAME: 'Tagpros'\n          }}\n          configOverwrite={{\n            apiLogLevels: [],\n            remoteVideoMenu: {\n              disableKick: !canSecureMeeting\n            },\n            autoKnockLobby: true,\n            prejoinPageEnabled: false,\n            toolbarButtons: [\n              'camera',\n              'chat',\n              'fullscreen',\n              'participants-pane',\n              'raisehand',\n              'tileview',\n              'toggle-camera',\n              'videoquality',\n              'microphone',\n              'desktop',\n              'hangup'\n            ],\n            localSubject: meeting?.title,\n            readOnlyName: true,\n            dropbox: {\n              appKey: dropboxClientId \n            },\n            fileRecordingsServiceEnabled: true\n          }}\n        />\n      </Wrapper>\n    </ProtectedRoute>\n  );\n}\n\nexport default JitsiMeeting;\n"]},"metadata":{},"sourceType":"module"}