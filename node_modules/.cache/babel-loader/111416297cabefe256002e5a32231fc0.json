{"ast":null,"code":"/* eslint-disable react/no-array-index-key */\nimport { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { withEditorContext } from '../Editor';\nexport var BtnStyles = createDropdown('Styles', [['Normal', 'formatBlock', 'DIV'], ['ùóõùó≤ùóÆùó±ùó≤ùóø ùü≠', 'formatBlock', 'H1'], ['Header 2', 'formatBlock', 'H2'], ['ùô≤ùöòùöçùöé', 'formatBlock', 'PRE']]);\n\nfunction createDropdown(title, items) {\n  DropdownFactory.displayName = title;\n  return withEditorContext(DropdownFactory);\n\n  function DropdownFactory(props) {\n    var selection = props.selection,\n        ddProps = __rest(props, [\"selection\"]);\n\n    return React.createElement(Dropdown, __assign({}, ddProps, {\n      onChange: onChange,\n      title: title,\n      items: items\n    }));\n\n    function onChange(e) {\n      var selected = parseInt(e.target.value, 10);\n      var _a = items[selected],\n          command = _a[1],\n          commandArgument = _a[2];\n      e.preventDefault();\n      e.target.selectedIndex = 0;\n\n      if (typeof command === 'function') {\n        command(selection);\n      } else {\n        document.execCommand(command, false, commandArgument);\n      }\n    }\n  }\n}\n\nexport function Dropdown(props) {\n  var el = props.el,\n      items = props.items,\n      selected = props.selected,\n      selection = props.selection,\n      styles = props.styles,\n      inputProps = __rest(props, [\"el\", \"items\", \"selected\", \"selection\", \"styles\"]);\n\n  var style = __assign(__assign({}, styles.dropdown), props.style);\n\n  return React.createElement(\"select\", __assign({}, inputProps, {\n    value: selected,\n    style: style\n  }), React.createElement(\"option\", {\n    hidden: true\n  }, props.title), items.map(function (item, index) {\n    return React.createElement(\"option\", {\n      key: index,\n      value: index\n    }, item[0]);\n  }));\n}","map":{"version":3,"sources":["../../../src/toolbar/dropdowns.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { withEditorContext } from '../Editor';\nexport var BtnStyles = createDropdown('Styles', [\n    ['Normal', 'formatBlock', 'DIV'],\n    ['ùóõùó≤ùóÆùó±ùó≤ùóø ùü≠', 'formatBlock', 'H1'],\n    ['Header 2', 'formatBlock', 'H2'],\n    ['ùô≤ùöòùöçùöé', 'formatBlock', 'PRE'],\n]);\nfunction createDropdown(title, items) {\n    DropdownFactory.displayName = title;\n    return withEditorContext(DropdownFactory);\n    function DropdownFactory(props) {\n        var selection = props.selection, ddProps = __rest(props, [\"selection\"]);\n        return (React.createElement(Dropdown, __assign({}, ddProps, { onChange: onChange, title: title, items: items })));\n        function onChange(e) {\n            var selected = parseInt(e.target.value, 10);\n            var _a = items[selected], command = _a[1], commandArgument = _a[2];\n            e.preventDefault();\n            e.target.selectedIndex = 0;\n            if (typeof command === 'function') {\n                command(selection);\n            }\n            else {\n                document.execCommand(command, false, commandArgument);\n            }\n        }\n    }\n}\nexport function Dropdown(props) {\n    var el = props.el, items = props.items, selected = props.selected, selection = props.selection, styles = props.styles, inputProps = __rest(props, [\"el\", \"items\", \"selected\", \"selection\", \"styles\"]);\n    var style = __assign(__assign({}, styles.dropdown), props.style);\n    return (React.createElement(\"select\", __assign({}, inputProps, { value: selected, style: style }),\n        React.createElement(\"option\", { hidden: true }, props.title),\n        items.map(function (item, index) { return (React.createElement(\"option\", { key: index, value: index }, item[0])); })));\n}\n//# sourceMappingURL=dropdowns.js.map"]},"metadata":{},"sourceType":"module"}