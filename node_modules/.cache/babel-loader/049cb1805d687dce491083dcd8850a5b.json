{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/LearnerHistory/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getEnrollmentHistory } from 'api/classEnroll';\nimport { useDispatch } from 'react-redux';\nimport Table from 'components/Admin/contents/Table';\nimport moment from 'moment';\nimport { Button, Modal } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { api } from 'api';\nimport { PAYMENT_STATUS, ENROLLMENT_STATUS } from 'utils/constants';\nimport { LEARNER_HISTORY_TABS } from '../../utils/constants';\nimport { toMoneyFormat } from \"utils/utils\";\nimport { s3Config } from \"../../config\";\nimport S3 from \"aws-s3-pro\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst s3Client = new S3(s3Config);\nexport default function LearnerHistory() {\n  _s();\n\n  var _history$selectedTxn, _history$selectedTxn2, _history$selectedTxn3, _history$selectedTxn4, _history$selectedTxn5, _history$selectedTxn6, _history$selectedTxn7, _history$selectedTxn8, _history$selectedTxn9, _history$selectedTxn10;\n\n  const uploaderRef = useRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [modalShow, setModalShow] = useState({\n    cancel: false,\n    refund: false,\n    verify: false\n  });\n  const [selectedTxn, setSelectedTxn] = useState(null);\n  const [selectedTab, setSelectedTab] = useState('all');\n  const [history, setHistory] = useState([]);\n  const [reason, setReason] = useState(\"\");\n  const [fileAttached, setFileAttached] = useState(false);\n  const [paymentDetails, setPaymentDetails] = useState({});\n  const [loading, setLoading] = useState({\n    hasError: false,\n    isDataLoading: true,\n    isSubmitLoading: false,\n    loadingPayment: false,\n    errorPayment: false\n  });\n  const maxDate = moment().format('YYYY-MM-DD');\n  const columns = [{\n    Header: 'Enrollment History',\n    columns: [{\n      Header: 'No.',\n      accessor: 'classId',\n      Cell: _ref => {\n        let {\n          row\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: row.index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this);\n      }\n    }, {\n      Header: 'Transaction Ref',\n      accessor: 'transactionId'\n    }, {\n      Header: 'Class Title',\n      accessor: 'classTitle',\n      Cell: _ref2 => {\n        let {\n          row,\n          value\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/class/enroll/${history[row.index].classId}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      }\n    }, {\n      Header: 'Price',\n      accessor: d => `${toMoneyFormat(d.price, d.currency)}`\n    }, {\n      Header: 'Total Payment',\n      accessor: d => [PAYMENT_STATUS.PENDING, PAYMENT_STATUS.FOR_VERIFICATION].indexOf(d.status) < 0 ? `${toMoneyFormat(d.price - d.totalDiscount, d.currency)}` : ''\n    }, {\n      Header: 'Refund',\n      accessor: d => d.refund ? `${toMoneyFormat(d.refund, d.currency)}` : null\n    }, {\n      Header: 'Enrollment Date',\n      accessor: d => moment(d.createdDateTime).format('MM/DD/YYYY hh:mm a')\n    }, {\n      Header: 'Status',\n      accessor: \"status\",\n      Cell: _ref3 => {\n        let {\n          value\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge \" + getBadge(value),\n          children: getValue(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 30\n        }, this);\n      }\n    }, {\n      Header: 'Action',\n      accessor: d => d.status,\n      Cell: _ref4 => {\n        let {\n          row,\n          value\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gap: 5,\n            gridTemplateColumns: 'repeat(auto-fill, minmax(5rem,1fr))'\n          },\n          children: [[PAYMENT_STATUS.UNPAID, PAYMENT_STATUS.UNKNOWN, PAYMENT_STATUS.PENDING].indexOf(value) > -1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: 'block'\n            },\n            className: \"btn btn-danger btn-sm\",\n            \"data-toggle\": \"tooltip\",\n            title: \"Cancel Enrollment\",\n            onClick: () => handleClickAction('cancel', row.index),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 111\n          }, this), value === PAYMENT_STATUS.PAID && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: 'block'\n            },\n            className: \"btn btn-warning btn-sm\",\n            \"data-toggle\": \"tooltip\",\n            title: \"Refund is available up to 24hrs before start of the class.\",\n            disabled: parseInt(history[row.index].price) === 0 || [ENROLLMENT_STATUS.PENDING, ENROLLMENT_STATUS.SUCCESS, ENROLLMENT_STATUS.CANCELLED].indexOf(history[row.index].enrollmentStatus) === -1 || !isRefundable(row.index),\n            onClick: () => handleClickAction('refund', row.index),\n            children: \"Refund\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 49\n          }, this), value === PAYMENT_STATUS.PENDING && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: 'block'\n            },\n            className: \"btn btn-warning btn-sm\",\n            \"data-toggle\": \"tooltip\",\n            title: \"Add your proof of payment\",\n            onClick: () => handleClickAction('verify', row.index),\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 52\n          }, this), value === PAYMENT_STATUS.FOR_VERIFICATION && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: 'block'\n            },\n            className: \"btn btn-info btn-sm\",\n            \"data-toggle\": \"tooltip\",\n            title: \"Update/Edit proof of payment\",\n            onClick: () => handleClickAction('verify', row.index),\n            children: \"Edit Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 61\n          }, this), value === PAYMENT_STATUS.VOID && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: 'block'\n            },\n            className: \"btn btn-primary btn-sm\",\n            \"data-toggle\": \"tooltip\",\n            title: \"Enroll to class\",\n            onClick: () => navigate('/class/enroll/' + history[row.index].classId),\n            children: \"Enroll Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      }\n    }]\n  }];\n\n  const getValue = value => {\n    var _Object$keys$find;\n\n    switch (value) {\n      case PAYMENT_STATUS.UNPAID:\n      case PAYMENT_STATUS.UNKNOWN:\n      case PAYMENT_STATUS.PENDING:\n        return \"pending\";\n\n      case PAYMENT_STATUS.FOR_VERIFICATION:\n        return \"for verification\";\n\n      case PAYMENT_STATUS.PAID:\n        return \"paid\";\n\n      case PAYMENT_STATUS.VOID:\n        return \"cancelled\";\n\n      default:\n        return (_Object$keys$find = Object.keys(PAYMENT_STATUS).find(key => PAYMENT_STATUS[key] === value)) === null || _Object$keys$find === void 0 ? void 0 : _Object$keys$find.toLowerCase();\n    }\n  };\n\n  const getBadge = key => {\n    switch (key) {\n      case PAYMENT_STATUS.UNPAID:\n      case PAYMENT_STATUS.UNKNOWN:\n      case PAYMENT_STATUS.PENDING:\n        return \"badge-primary\";\n\n      case PAYMENT_STATUS.FOR_VERIFICATION:\n        return \"badge-info\";\n\n      case PAYMENT_STATUS.PAID:\n        return \"badge-success\";\n\n      case PAYMENT_STATUS.VOID:\n        return \"badge-warning\";\n\n      default:\n        return \"badge-secondary\";\n    }\n  };\n\n  const isRefundable = index => {\n    const startDateTime = moment(`${history[index].startDate} ${history[index].startTime}`, 'YYYY/MM/DD hh:mm A').format();\n    return moment().isBefore(moment(startDateTime).subtract(1, 'days'));\n  };\n\n  const handleClickAction = async (action, index) => {\n    setModalShow({\n      [action]: true\n    });\n    setSelectedTxn(index);\n\n    switch (action) {\n      case 'verify':\n        if (history[index].status === PAYMENT_STATUS.PENDING) {\n          setPaymentDetails(prevState => {\n            var _history$index, _history$index2;\n\n            return { ...prevState,\n              currency: (_history$index = history[index]) === null || _history$index === void 0 ? void 0 : _history$index.currency,\n              amount: (_history$index2 = history[index]) === null || _history$index2 === void 0 ? void 0 : _history$index2.price\n            };\n          });\n        } else {\n          setPaymentDetails(prevState => ({ ...history[index].paymentReference,\n            depositDate: moment(history[index].paymentReference.depositDate).format('YYYY-MM-DD'),\n            depositTime: history[index].paymentReference.depositTime\n          }));\n          break;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const cancelTransaction = async () => {\n    setLoading(prevState => ({ ...prevState,\n      isSubmitLoading: true\n    }));\n    await api.post('/payment/void', {\n      txnId: history[selectedTxn].transactionId\n    }).then(response => {\n      if (response.status === 'success') {\n        toast.success('Enrollment has been cancelled.');\n      }\n\n      loadData('cancelled');\n      setSelectedTab('cancelled');\n    }).catch(err => {\n      console.log(err);\n      toast.error('Cannot cancel enrollment. Please try again later.');\n    }).finally(() => {\n      setLoading(prevState => ({ ...prevState,\n        isSubmitLoading: false\n      }));\n      setModalShow({\n        cancel: false\n      });\n    });\n  };\n\n  const refundTransaction = async () => {\n    setLoading(prevState => ({ ...prevState,\n      isSubmitLoading: true\n    }));\n    await api.post('/payment/refund', {\n      refNo: history[selectedTxn].refNo,\n      reason,\n      enrollmentId: history[selectedTxn].enrollmentId\n    }).then(response => {\n      toast.success('Payment for this enrollment has been successfully refunded.');\n      loadData('refund');\n      setSelectedTab('refund');\n      setReason(\"\");\n    }).catch(err => {\n      var _err$response, _err$response$data, _err$response$data$er;\n\n      console.log(err);\n      toast.error((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$er = _err$response$data.err) === null || _err$response$data$er === void 0 ? void 0 : _err$response$data$er.message) || 'Cannot proceed with refund. Please try again later.');\n    }).finally(() => {\n      setLoading(prevState => ({ ...prevState,\n        isSubmitLoading: false\n      }));\n      setModalShow({\n        refund: false\n      });\n    });\n  };\n\n  const onTabClicked = async tabName => {\n    if (selectedTab !== tabName) {\n      await setSelectedTab(tabName);\n      loadData(tabName);\n    }\n  };\n\n  const filterHistory = async (history, tabName) => {\n    let data;\n\n    switch (tabName) {\n      case 'all':\n        setHistory(history);\n        return;\n\n      case 'pending':\n        data = await history.filter(item => [PAYMENT_STATUS.UNPAID, PAYMENT_STATUS.UNKNOWN, PAYMENT_STATUS.PENDING, PAYMENT_STATUS.FOR_VERIFICATION].indexOf(item.status) > -1);\n        setHistory(data);\n        return;\n\n      case 'paid':\n        data = history.filter(item => item.status === PAYMENT_STATUS.PAID);\n        setHistory(data);\n        return;\n\n      case 'completed':\n        data = history.filter(item => item.enrollmentStatus === ENROLLMENT_STATUS.COMPLETED || item.enrollmentStatus === ENROLLMENT_STATUS.PAYOUT_PAID);\n        setHistory(data);\n        return;\n\n      case 'refund':\n        data = await history.filter(item => item.enrollmentStatus === ENROLLMENT_STATUS.REFUNDED);\n        setHistory(data);\n        return;\n\n      case 'cancelled':\n        data = await history.filter(item => item.status === PAYMENT_STATUS.VOID);\n        setHistory(data);\n        return;\n\n      default:\n        data = [];\n        setHistory(data);\n    }\n  };\n\n  const onInputChange = (name, value) => {\n    setPaymentDetails(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const verifyPayment = async () => {\n    try {\n      setLoading(prevState => ({ ...prevState,\n        errorPayment: false,\n        loadingPayment: true\n      }));\n      const invalidMessage = await verifyForm();\n      console.log('invalidMessage', invalidMessage);\n\n      if (invalidMessage !== null) {\n        console.log('');\n        setLoading(prevState => ({ ...prevState,\n          errorPayment: true,\n          loadingPayment: false,\n          errorMessage: invalidMessage || 'Please fill up all required fields.'\n        }));\n      } else {\n        const uploadResponse = fileAttached ? await s3Client.uploadFile(fileAttached) : {\n          status: 204\n        };\n\n        if (uploadResponse.status === 204) {\n          await api.post(`/payment/verify${paymentDetails.paymentRef ? '/update' : ''}`, { ...paymentDetails,\n            photo: uploadResponse.location,\n            txnId: history[selectedTxn].transactionId\n          }).then(response => {\n            toast.success('Proof of Payment for this enrollment has been successfully submitted. Please wait for our accounting team to verify your payment.');\n            loadData('pending');\n            setSelectedTab('pending');\n            setPaymentDetails({\n              bankName: \"\",\n              referenceNumber: \"\",\n              depositDate: null,\n              depositTime: null,\n              currency: \"\",\n              amount: null,\n              photo: null\n            });\n            setLoading(prevState => ({ ...prevState,\n              errorPayment: false,\n              loadingPayment: false\n            }));\n            setModalShow({\n              verify: false\n            });\n          }).catch(err => {\n            var _err$response2, _err$response2$data, _err$response2$data$e;\n\n            console.log(err);\n            toast.error((err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$e = _err$response2$data.err) === null || _err$response2$data$e === void 0 ? void 0 : _err$response2$data$e.message) || 'Cannot proceed with payment verification. Please try again later.');\n          });\n        } else {\n          setLoading(prevState => ({ ...prevState,\n            errorPayment: true,\n            loadingPayment: false\n          }));\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n\n      toast.error((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.err) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Cannot proceed with payment verification. Please try again later.');\n      setLoading(prevState => ({ ...prevState,\n        hasError: true,\n        isSubmitLoading: false\n      }));\n    }\n  };\n\n  const verifyForm = async () => {\n    const now = moment();\n    const date = moment(paymentDetails.depositDate).format('YYYY-MM-DD');\n    const depositDate = moment(`${date} ${paymentDetails.depositTime}`, 'YYYY-MM-DD HH:mm');\n    const totalPayment = parseFloat(history[selectedTxn].price - history[selectedTxn].totalDiscount);\n\n    if (!paymentDetails.referenceNumber || !paymentDetails.bankName || !paymentDetails.depositDate || !paymentDetails.depositTime || !paymentDetails.currency || !paymentDetails.amount || !paymentDetails.photo) {\n      return 'Please fill up all required fields.';\n    }\n\n    if (parseFloat(paymentDetails.amount) < totalPayment) {\n      return `Amount should be atleast ${totalPayment}`;\n    }\n\n    if (depositDate > now) {\n      return 'You cannot use future date on the Deposit Date and Time. Please make sure to input a valid date and time';\n    }\n\n    return null;\n  };\n\n  const onClose = () => {\n    setPaymentDetails({\n      bankName: \"\",\n      referenceNumber: \"\",\n      depositDate: null,\n      depositTime: null,\n      currency: \"\",\n      amount: null,\n      photo: null\n    });\n    setModalShow({\n      verify: false\n    });\n  };\n\n  const onAttachImage = async event => {\n    try {\n      //event.target.files[0].name = `${accountId}-${event.target.files[0].name}`;\n      setFileAttached(event.target.files[0]);\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        const uploaded_image = reader.result;\n        setPaymentDetails(prevState => ({ ...prevState,\n          photo: uploaded_image\n        })); // setProfilePhoto(uploaded_image);\n        // setIsPhotoAttached(true);\n      });\n      reader.readAsDataURL(event.target.files[0]);\n    } catch (error) {}\n  };\n\n  const loadData = async tabName => {\n    setLoading({\n      isDataLoading: true,\n      hasError: false\n    });\n    getEnrollmentHistory(dispatch, (status, data) => {\n      if (status) {\n        filterHistory(data, tabName);\n\n        if (location.state && location.state.verify) {\n          const selectedIdx = data.findIndex(item => item.transactionId === location.state.txnId);\n          setSelectedTxn(selectedIdx);\n          window.history.replaceState({}, document.title, 'history');\n          setTimeout(() => {\n            setModalShow(prevState => ({ ...prevState,\n              verify: true\n            }));\n          }, 500);\n        }\n\n        setLoading({\n          isDataLoading: false,\n          hasError: false\n        });\n      } else {\n        setLoading({\n          isDataLoading: false,\n          hasError: true\n        });\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    loadData(selectedTab); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav nav-tabs profile-tab\",\n        role: \"tablist\",\n        children: LEARNER_HISTORY_TABS.map(_ref5 => {\n          let {\n            name,\n            title\n          } = _ref5;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: `nav-link ${selectedTab === name && 'active'}`,\n              \"data-toggle\": \"tab\",\n              href: \"#history\",\n              role: \"tab\",\n              onClick: () => onTabClicked(name),\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)\n          }, selectedTab + '.' + name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-pane active\",\n          id: \"pending\",\n          role: \"tabpanel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              loading: loading.isDataLoading,\n              error: loading.hasError,\n              columns: columns,\n              data: history,\n              title: 'Enrollment History',\n              filterColumn: 'status',\n              filterValue: '',\n              onReload: () => loadData(selectedTab),\n              disableSearch: true // Hide search\n              ,\n              sortableRows: true // Clicking column header sorts rows accordingly\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"m\",\n      show: modalShow.refund,\n      onHide: () => setModalShow({\n        refund: false\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Refund Payment?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: 'red'\n          },\n          children: [\"Note: Payment Gateway fee of \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: (_history$selectedTxn = history[selectedTxn]) === null || _history$selectedTxn === void 0 ? void 0 : _history$selectedTxn.gatewayFees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 70\n          }, this), \" has been deducted from the total amount to be refunded.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-1\",\n          children: [\"A total of \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: toMoneyFormat(((_history$selectedTxn2 = history[selectedTxn]) === null || _history$selectedTxn2 === void 0 ? void 0 : _history$selectedTxn2.price) - ((_history$selectedTxn3 = history[selectedTxn]) === null || _history$selectedTxn3 === void 0 ? void 0 : _history$selectedTxn3.totalDiscount) - ((_history$selectedTxn4 = history[selectedTxn]) === null || _history$selectedTxn4 === void 0 ? void 0 : _history$selectedTxn4.gatewayFees), (_history$selectedTxn5 = history[selectedTxn]) === null || _history$selectedTxn5 === void 0 ? void 0 : _history$selectedTxn5.currency)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 24\n          }, this), \" will be refunded to your account.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Please state your reason below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: reason,\n            className: \"form-control\",\n            rows: \"3\",\n            placeholder: \"Write your reason here ...\",\n            onChange: e => setReason(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          type: \"button\",\n          onClick: () => setModalShow({\n            refund: false\n          }),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          type: \"submit\",\n          onClick: refundTransaction,\n          disabled: loading.isSubmitLoading === true,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: loading.isSubmitLoading ? 'inline-block' : 'none'\n            },\n            class: \"spinner-border spinner-border-sm btn-load\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), \"Continue\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"m\",\n      show: modalShow.cancel,\n      onHide: () => setModalShow({\n        cancel: false\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Cancel Payment?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to cancel this payment? Clicking continue will cancel all enrollments related to this transaction.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          type: \"button\",\n          onClick: () => setModalShow({\n            cancel: false\n          }),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          type: \"submit\",\n          onClick: cancelTransaction,\n          disabled: loading.isSubmitLoading === true,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: loading.isSubmitLoading ? 'inline-block' : 'none'\n            },\n            class: \"spinner-border spinner-border-sm btn-load\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), \"Continue\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: modalShow.verify,\n      backdrop: \"static\",\n      keyboard: false,\n      onHide: () => setModalShow({\n        verify: false\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [((_history$selectedTxn6 = history[selectedTxn]) === null || _history$selectedTxn6 === void 0 ? void 0 : _history$selectedTxn6.status) === PAYMENT_STATUS.PENDING ? 'Verify' : 'Edit', \" Payment?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bank-details\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row\",\n          id: \"verifyForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [loading.errorPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning text-center text m-t-10 ml-0 mr-0\",\n                  style: {\n                    fontSize: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-times float-right\",\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: () => setLoading(prevState => ({ ...prevState,\n                      errorPayment: false,\n                      loadingPayment: false\n                    }))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-weight-bold\",\n                    style: {\n                      fontSize: 12\n                    },\n                    children: \"Something went wrong.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 27\n                  }, this), loading.errorMessage ? loading.errorMessage : 'Please try again later.']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"modal-title mb-2\",\n                  id: \"exampleModalLabel\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"Transaction Id: \", (_history$selectedTxn7 = history[selectedTxn]) === null || _history$selectedTxn7 === void 0 ? void 0 : _history$selectedTxn7.transactionId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 81\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"modal-title\",\n                  id: \"exampleModalLabel\",\n                  children: [\"Bank Name\", /*#__PURE__*/_jsxDEV(\"small\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    type: \"text\",\n                    name: \"bankName\",\n                    defaultValue: paymentDetails.bankName,\n                    onChange: e => onInputChange(e.target.name, e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"modal-title\",\n                  id: \"exampleModalLabel\",\n                  children: [\"Reference Number\", /*#__PURE__*/_jsxDEV(\"small\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    type: \"text\",\n                    name: \"referenceNumber\",\n                    \"aria-describedby\": \"refHelp\",\n                    defaultValue: paymentDetails.referenceNumber,\n                    onChange: e => onInputChange(e.target.name, e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"refHelp\",\n                    class: \"form-text text-muted\",\n                    children: \"Reference Number refers to the number indicated on your deposit slip or payment confirmation.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"modal-title\",\n                      id: \"exampleModalLabel\",\n                      children: [\"Date of Deposit\", /*#__PURE__*/_jsxDEV(\"small\", {\n                        style: {\n                          color: 'red'\n                        },\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 596,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"date\",\n                        name: \"depositDate\",\n                        defaultValue: paymentDetails.depositDate,\n                        max: maxDate,\n                        onChange: e => onInputChange(e.target.name, e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"modal-title\",\n                      id: \"exampleModalLabel\",\n                      children: [\"Time of Deposit\", /*#__PURE__*/_jsxDEV(\"small\", {\n                        style: {\n                          color: 'red'\n                        },\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 602,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"time\",\n                        name: \"depositTime\",\n                        defaultValue: paymentDetails.depositTime,\n                        onChange: e => onInputChange(e.target.name, e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"modal-title\",\n                      id: \"exampleModalLabel\",\n                      children: [\"Currency\", /*#__PURE__*/_jsxDEV(\"small\", {\n                        style: {\n                          color: 'red'\n                        },\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 88\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-control\",\n                        name: \"currency\",\n                        onChange: e => onInputChange(e.target.name, e.target.value),\n                        disabled: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"PHP\",\n                          selected: ((_history$selectedTxn8 = history[selectedTxn]) === null || _history$selectedTxn8 === void 0 ? void 0 : _history$selectedTxn8.currency) === 'PHP',\n                          children: \"PHP\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 613,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"USD\",\n                          selected: ((_history$selectedTxn9 = history[selectedTxn]) === null || _history$selectedTxn9 === void 0 ? void 0 : _history$selectedTxn9.currency) === 'USD',\n                          children: \"USD\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 614,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 612,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"modal-title\",\n                      id: \"exampleModalLabel\",\n                      children: [\"Amount\", /*#__PURE__*/_jsxDEV(\"small\", {\n                        style: {\n                          color: 'red'\n                        },\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 619,\n                        columnNumber: 86\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"number\",\n                        name: \"amount\",\n                        min: \"1\",\n                        defaultValue: paymentDetails.amount,\n                        onChange: e => onInputChange(e.target.name, e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 621,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"modal-title mb-3\",\n                      children: [\"Proof of Payment\", /*#__PURE__*/_jsxDEV(\"small\", {\n                        style: {\n                          color: 'red'\n                        },\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 78\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ml-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"lms-input-label\",\n                        children: \"Upload a thumbnail image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 630,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 633,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"lms-input-sublabel\",\n                        children: [\"Image size: not more than 3MB\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 636,\n                          columnNumber: 33\n                        }, this), \"Image formats: jpg, png, jpeg\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 638,\n                          columnNumber: 33\n                        }, this), \"Accepted file formats: jpg, png, jpeg\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 640,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ml-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info btn-block\",\n                        type: \"button\",\n                        onClick: () => uploaderRef.current.click(),\n                        disabled: loading.loadingPayment,\n                        children: \"Upload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"upload\",\n                        ref: uploaderRef,\n                        type: \"file\",\n                        accept: \".png, .jpg, .jpeg\",\n                        style: {\n                          display: \"none\"\n                        },\n                        onChange: onAttachImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6\",\n                    style: {\n                      textAlign: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      id: \"imageFile\",\n                      src: paymentDetails.photo ? paymentDetails.photo : \"/assets/images/image-placeholder.jpg\",\n                      alt: \"thumbnail\",\n                      className: \"img-fluid\",\n                      style: {\n                        maxHeight: \"200px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"button\",\n          onClick: verifyPayment,\n          disabled: loading.loadingPayment,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: loading.loadingPayment ? 'inline-block' : 'none'\n            },\n            className: \"spinner-border spinner-border-sm btn-load\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this), ((_history$selectedTxn10 = history[selectedTxn]) === null || _history$selectedTxn10 === void 0 ? void 0 : _history$selectedTxn10.status) === PAYMENT_STATUS.PENDING ? 'Proceed' : 'Update']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => onClose(),\n          disabled: loading.loadingPayment,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LearnerHistory, \"47euWlcq8fFpXLQz7VvEomOYAOs=\", false, function () {\n  return [useDispatch, useNavigate, useLocation];\n});\n\n_c = LearnerHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"LearnerHistory\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/LearnerHistory/index.jsx"],"names":["React","Fragment","useState","useRef","useLocation","useNavigate","getEnrollmentHistory","useDispatch","Table","moment","Button","Modal","toast","api","PAYMENT_STATUS","ENROLLMENT_STATUS","LEARNER_HISTORY_TABS","toMoneyFormat","s3Config","S3","s3Client","LearnerHistory","uploaderRef","dispatch","navigate","location","modalShow","setModalShow","cancel","refund","verify","selectedTxn","setSelectedTxn","selectedTab","setSelectedTab","history","setHistory","reason","setReason","fileAttached","setFileAttached","paymentDetails","setPaymentDetails","loading","setLoading","hasError","isDataLoading","isSubmitLoading","loadingPayment","errorPayment","maxDate","format","columns","Header","accessor","Cell","row","index","value","classId","d","price","currency","PENDING","FOR_VERIFICATION","indexOf","status","totalDiscount","createdDateTime","getBadge","getValue","display","gap","gridTemplateColumns","UNPAID","UNKNOWN","handleClickAction","PAID","parseInt","SUCCESS","CANCELLED","enrollmentStatus","isRefundable","VOID","Object","keys","find","key","toLowerCase","startDateTime","startDate","startTime","isBefore","subtract","action","prevState","amount","paymentReference","depositDate","depositTime","cancelTransaction","post","txnId","transactionId","then","response","success","loadData","catch","err","console","log","error","finally","refundTransaction","refNo","enrollmentId","data","message","onTabClicked","tabName","filterHistory","filter","item","COMPLETED","PAYOUT_PAID","REFUNDED","onInputChange","name","verifyPayment","invalidMessage","verifyForm","errorMessage","uploadResponse","uploadFile","paymentRef","photo","bankName","referenceNumber","now","date","totalPayment","parseFloat","onClose","onAttachImage","event","target","files","reader","FileReader","addEventListener","uploaded_image","result","readAsDataURL","state","selectedIdx","findIndex","window","replaceState","document","title","setTimeout","useEffect","map","color","gatewayFees","e","fontSize","cursor","current","click","textAlign","maxHeight"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getEnrollmentHistory } from 'api/classEnroll';\nimport { useDispatch } from 'react-redux';\nimport Table from 'components/Admin/contents/Table';\nimport moment from 'moment';\nimport { Button, Modal } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { api } from 'api';\nimport { PAYMENT_STATUS, ENROLLMENT_STATUS } from 'utils/constants';\nimport { LEARNER_HISTORY_TABS } from '../../utils/constants';\nimport { toMoneyFormat } from \"utils/utils\";\nimport { s3Config } from \"../../config\";\nimport S3 from \"aws-s3-pro\";\n\nconst s3Client = new S3(s3Config);\n\nexport default function LearnerHistory() {\n  const uploaderRef = useRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [modalShow, setModalShow] = useState({\n    cancel: false,\n    refund: false,\n    verify: false\n  });\n  const [selectedTxn, setSelectedTxn] = useState(null);\n  const [selectedTab, setSelectedTab] = useState('all');\n  const [history, setHistory] = useState([]);\n  const [reason, setReason] = useState(\"\");\n  const [fileAttached, setFileAttached] = useState(false);\n  const [paymentDetails, setPaymentDetails] = useState({});\n  const [loading, setLoading] = useState({\n    hasError: false,\n    isDataLoading: true,\n    isSubmitLoading: false,\n    loadingPayment: false,\n    errorPayment: false\n  });\n\n  const maxDate = moment().format('YYYY-MM-DD')\n\n  const columns = [\n    {\n      Header: 'Enrollment History',\n      columns: [\n        {\n          Header: 'No.',\n          accessor: 'classId',\n          Cell: ({ row }) => <div>{row.index + 1}</div>\n        },\n        {\n          Header: 'Transaction Ref',\n          accessor: 'transactionId'\n        },\n        {\n          Header: 'Class Title',\n          accessor: 'classTitle',\n          Cell:({row, value}) => (\n            <a href={`/class/enroll/${history[row.index].classId}`} target=\"_blank\" rel=\"noreferrer\">{value}</a>\n          )\n        },\n        {\n          Header: 'Price',\n          accessor: d => `${toMoneyFormat(d.price, d.currency)}`\n        },\n        {\n          Header: 'Total Payment',\n          accessor: d => [PAYMENT_STATUS.PENDING, PAYMENT_STATUS.FOR_VERIFICATION].indexOf(d.status) < 0 ? `${toMoneyFormat((d.price-d.totalDiscount), d.currency)}` : ''\n        },\n        {\n          Header: 'Refund',\n          accessor: d => d.refund ? `${toMoneyFormat(d.refund, d.currency)}` : null\n        },\n        {\n          Header: 'Enrollment Date',\n          accessor: d => moment(d.createdDateTime).format('MM/DD/YYYY hh:mm a')\n        },\n        {\n          Header: 'Status', accessor: \"status\",\n          Cell: ({value}) => <div className={\"badge \" + getBadge(value)}>{getValue(value)}</div>\n        },\n        {\n          Header: 'Action',\n          accessor: d => d.status,\n          Cell: ({ row, value }) => (\n            <div style={{display:'grid', gap:5, gridTemplateColumns: 'repeat(auto-fill, minmax(5rem,1fr))'}}>\n              {[PAYMENT_STATUS.UNPAID, PAYMENT_STATUS.UNKNOWN, PAYMENT_STATUS.PENDING].indexOf(value) > -1 && <button\n                style={{ display: 'block' }}\n                className='btn btn-danger btn-sm'\n                data-toggle='tooltip'\n                title='Cancel Enrollment'\n                onClick={() => handleClickAction('cancel', row.index)}\n              >\n                Cancel\n              </button>}\n\n              {value === PAYMENT_STATUS.PAID && <button\n                style={{ display: 'block' }}\n                className='btn btn-warning btn-sm'\n                data-toggle='tooltip'\n                title='Refund is available up to 24hrs before start of the class.'\n                disabled={parseInt(history[row.index].price) === 0 \n                  || [ENROLLMENT_STATUS.PENDING, ENROLLMENT_STATUS.SUCCESS, ENROLLMENT_STATUS.CANCELLED].indexOf(history[row.index].enrollmentStatus) === -1\n                  || !isRefundable(row.index)}\n                onClick={() => handleClickAction('refund', row.index)}\n              >\n                Refund\n              </button>}\n              {value === PAYMENT_STATUS.PENDING && <button\n                style={{ display: 'block' }}\n                className='btn btn-warning btn-sm'\n                data-toggle='tooltip'\n                title='Add your proof of payment'\n                onClick={() => handleClickAction('verify', row.index)}\n              >\n                Verify\n              </button>}\n              {value === PAYMENT_STATUS.FOR_VERIFICATION && <button\n                style={{display: 'block'}}\n                className='btn btn-info btn-sm'\n                data-toggle='tooltip'\n                title='Update/Edit proof of payment'\n                onClick={() => handleClickAction('verify', row.index)}\n              >\n                Edit Payment\n              </button>}\n\n              {value === PAYMENT_STATUS.VOID && <button\n                style={{ display: 'block' }}\n                className='btn btn-primary btn-sm'\n                data-toggle='tooltip'\n                title='Enroll to class'\n                onClick={() => navigate('/class/enroll/' + history[row.index].classId)}\n              >\n                Enroll Again\n              </button>}\n            </div>\n          )\n        }\n      ]\n    }\n  ];\n\n  const getValue = (value) => {\n    switch(value){\n      case PAYMENT_STATUS.UNPAID:\n      case PAYMENT_STATUS.UNKNOWN:\n      case PAYMENT_STATUS.PENDING:\n        return \"pending\"\n      case PAYMENT_STATUS.FOR_VERIFICATION:\n        return \"for verification\"\n      case PAYMENT_STATUS.PAID:\n        return \"paid\"\n      case PAYMENT_STATUS.VOID:\n        return \"cancelled\"\n      default: return (Object.keys(PAYMENT_STATUS).find(key => PAYMENT_STATUS[key] === value))?.toLowerCase();\n    }\n  }\n\n  const getBadge = (key) => {\n    switch(key){\n      case PAYMENT_STATUS.UNPAID:\n      case PAYMENT_STATUS.UNKNOWN:\n      case PAYMENT_STATUS.PENDING:\n        return \"badge-primary\"\n      case PAYMENT_STATUS.FOR_VERIFICATION:\n        return \"badge-info\"\n      case PAYMENT_STATUS.PAID:\n        return \"badge-success\"\n      case PAYMENT_STATUS.VOID:\n        return \"badge-warning\"\n      default: return \"badge-secondary\"\n    }\n  }\n\n  const isRefundable = index => {\n    const startDateTime = moment(\n      `${history[index].startDate} ${history[index].startTime}`,\n      'YYYY/MM/DD hh:mm A'\n    ).format();\n    return moment().isBefore(moment(startDateTime).subtract(1, 'days'));\n  };\n\n  const handleClickAction = async (action, index) => {\n    setModalShow({[action]: true});\n    setSelectedTxn(index);\n\n    switch(action){\n      case 'verify':\n        if(history[index].status === PAYMENT_STATUS.PENDING){\n          setPaymentDetails(prevState => ({\n            ...prevState,\n            currency: history[index]?.currency,\n            amount: history[index]?.price\n          })); \n        } else {\n          setPaymentDetails(prevState => ({\n            ...history[index].paymentReference,\n            depositDate: moment(history[index].paymentReference.depositDate).format('YYYY-MM-DD'),\n            depositTime: history[index].paymentReference.depositTime,\n          })); break;\n        }\n        break;\n      default: break;\n    }\n  };\n\n  const cancelTransaction = async () => {\n    setLoading(prevState => ({\n      ...prevState,\n      isSubmitLoading: true\n    }));\n    await api\n      .post('/payment/void', { txnId: history[selectedTxn].transactionId })\n      .then(response => {\n        if (response.status === 'success') {\n          toast.success('Enrollment has been cancelled.');\n        }\n        loadData('cancelled');\n        setSelectedTab('cancelled');\n      })\n      .catch(err => {\n        console.log(err);\n        toast.error('Cannot cancel enrollment. Please try again later.');\n      })\n      .finally(() => {\n        setLoading(prevState => ({\n          ...prevState,\n          isSubmitLoading: false\n        }));\n        setModalShow({cancel: false});\n      });\n  };\n\n  const refundTransaction = async () => {\n    setLoading(prevState => ({\n      ...prevState,\n      isSubmitLoading: true\n    }));\n    await api\n      .post('/payment/refund', { refNo: history[selectedTxn].refNo, reason, enrollmentId: history[selectedTxn].enrollmentId})\n      .then(response => {\n        toast.success('Payment for this enrollment has been successfully refunded.');\n        loadData('refund');\n        setSelectedTab('refund');\n        setReason(\"\");\n      })\n      .catch(err => {\n        console.log(err);\n        toast.error(err?.response?.data?.err?.message || 'Cannot proceed with refund. Please try again later.');\n      })\n      .finally(() => {\n        setLoading(prevState => ({\n          ...prevState,\n          isSubmitLoading: false\n        }));\n        setModalShow({refund: false});\n      });\n  };\n\n  const onTabClicked = async tabName => {\n    if (selectedTab !== tabName) {\n      await setSelectedTab(tabName);\n      loadData(tabName);\n    }\n  };\n\n  const filterHistory = async (history, tabName) => {\n    let data;\n    switch (tabName) {\n      case 'all':\n        setHistory(history);\n        return;\n      case 'pending':\n        data = await history.filter(\n          item =>\n            [PAYMENT_STATUS.UNPAID, PAYMENT_STATUS.UNKNOWN, PAYMENT_STATUS.PENDING, PAYMENT_STATUS.FOR_VERIFICATION].indexOf(item.status) > -1\n        );\n        setHistory(data);\n        return;\n      case 'paid':\n        data = history.filter(item => item.status === PAYMENT_STATUS.PAID);\n        setHistory(data);\n        return;\n      case 'completed':\n        data = history.filter(\n          item => (item.enrollmentStatus === ENROLLMENT_STATUS.COMPLETED || item.enrollmentStatus === ENROLLMENT_STATUS.PAYOUT_PAID)\n        );\n        setHistory(data);\n        return;\n      case 'refund':\n        data = await history.filter(\n          item => item.enrollmentStatus === ENROLLMENT_STATUS.REFUNDED\n        );\n        setHistory(data);\n        return;\n      case 'cancelled':\n        data = await history.filter(item => item.status === PAYMENT_STATUS.VOID);\n        setHistory(data);\n        return;\n      default:\n        data = [];\n        setHistory(data);\n    }\n  };\n\n  const onInputChange = (name, value) => {\n    setPaymentDetails(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  const verifyPayment = async () => {\n    try {\n      setLoading(prevState => ({\n        ...prevState,\n        errorPayment: false,\n        loadingPayment: true\n      }));\n      \n      const invalidMessage = await verifyForm();\n      console.log('invalidMessage', invalidMessage);\n      if(invalidMessage !== null){\n        console.log('')\n        setLoading(prevState => ({\n          ...prevState,\n          errorPayment: true,\n          loadingPayment: false,\n          errorMessage: invalidMessage || 'Please fill up all required fields.'\n        }));\n      }else{\n        const uploadResponse = fileAttached ? await s3Client.uploadFile(fileAttached) : {status: 204};\n        if (uploadResponse.status === 204) {\n          await api.post(`/payment/verify${paymentDetails.paymentRef ? '/update': ''}`, {\n            ...paymentDetails,\n            photo: uploadResponse.location,\n            txnId: history[selectedTxn].transactionId\n          }).then(response => {\n            toast.success('Proof of Payment for this enrollment has been successfully submitted. Please wait for our accounting team to verify your payment.');\n            loadData('pending');\n            setSelectedTab('pending');\n            setPaymentDetails({ bankName: \"\", referenceNumber: \"\", depositDate: null, depositTime: null, currency: \"\", amount: null, photo: null});\n            setLoading(prevState => ({\n              ...prevState,\n              errorPayment: false,\n              loadingPayment: false\n            }));\n            setModalShow({verify: false});\n          })\n          .catch(err => {\n            console.log(err);\n            toast.error(err?.response?.data?.err?.message || 'Cannot proceed with payment verification. Please try again later.');\n          })\n        }else{\n          setLoading(prevState => ({\n            ...prevState,\n            errorPayment: true,\n            loadingPayment: false\n          }));\n        }\n      }\n    } catch (error) {\n      toast.error(error?.response?.data?.err?.message || 'Cannot proceed with payment verification. Please try again later.');\n      setLoading(prevState => ({\n        ...prevState,\n        hasError: true,\n        isSubmitLoading: false\n      }));\n    }\n  }\n\n  const verifyForm = async () => {\n    const now = moment();\n    const date = moment(paymentDetails.depositDate).format('YYYY-MM-DD');\n    const depositDate = moment(`${date} ${paymentDetails.depositTime}`, 'YYYY-MM-DD HH:mm');\n    const totalPayment = parseFloat(history[selectedTxn].price - history[selectedTxn].totalDiscount);\n\n    if(!paymentDetails.referenceNumber || !paymentDetails.bankName || !paymentDetails.depositDate || !paymentDetails.depositTime || !paymentDetails.currency || !paymentDetails.amount || !paymentDetails.photo){\n      return 'Please fill up all required fields.';\n    }\n\n    if(parseFloat(paymentDetails.amount) < totalPayment){\n      return `Amount should be atleast ${totalPayment}`;\n    }\n\n    if(depositDate > now){\n      return 'You cannot use future date on the Deposit Date and Time. Please make sure to input a valid date and time';\n    }\n\n    return null;\n  }\n  \n  const onClose = () => {\n    setPaymentDetails({ bankName: \"\", referenceNumber: \"\", depositDate: null, depositTime: null, currency: \"\", amount: null, photo: null});\n    setModalShow({verify: false});\n  }\n\n  const onAttachImage = async (event) => {\n    try {\n      //event.target.files[0].name = `${accountId}-${event.target.files[0].name}`;\n      setFileAttached(event.target.files[0]);\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        const uploaded_image = reader.result;\n        setPaymentDetails(prevState => ({\n          ...prevState,\n          photo: uploaded_image\n        }))\n        // setProfilePhoto(uploaded_image);\n        // setIsPhotoAttached(true);\n      });\n\n      reader.readAsDataURL(event.target.files[0]);\n    } catch (error) {}\n  }\n\n  const loadData = async tabName => {\n    setLoading({ isDataLoading: true, hasError: false });\n    getEnrollmentHistory(dispatch, (status, data) => {\n      if (status) {\n        filterHistory(data, tabName);\n        if(location.state && location.state.verify){\n          const selectedIdx = data.findIndex(item => item.transactionId === location.state.txnId)\n          setSelectedTxn(selectedIdx);\n          window.history.replaceState({}, document.title, 'history')\n          setTimeout(() => {\n            setModalShow(prevState => ({\n              ...prevState,\n              verify: true\n            }));\n          }, 500);\n        }\n        setLoading({ isDataLoading: false, hasError: false });\n      } else {\n        setLoading({ isDataLoading: false, hasError: true });\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    loadData(selectedTab);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='card'>\n        {/* Nav tabs */}\n        <ul className='nav nav-tabs profile-tab' role='tablist'>\n          {LEARNER_HISTORY_TABS.map(({ name, title }) => (\n            <li className='nav-item' key={selectedTab + '.' + name}>\n              <a\n                className={`nav-link ${selectedTab === name && 'active'}`}\n                data-toggle='tab'\n                href='#history'\n                role='tab'\n                onClick={() => onTabClicked(name)}\n              >\n                {title}\n              </a>\n            </li>\n          ))}\n        </ul>\n\n        {/* Tab panes */}\n        <div className='tab-content'>\n          {/*first tab*/}\n\n          <div className='tab-pane active' id='pending' role='tabpanel'>\n            <div className='card-body'>\n              <Table\n                loading={loading.isDataLoading}\n                error={loading.hasError}\n                columns={columns}\n                data={history}\n                title={'Enrollment History'}\n                filterColumn={'status'}\n                filterValue={''}\n                onReload={() => loadData(selectedTab)}\n                disableSearch // Hide search\n                sortableRows // Clicking column header sorts rows accordingly\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Modal size='m' show={modalShow.refund} onHide={() => setModalShow({refund: false})}>\n        <Modal.Header closeButton>\n          <Modal.Title>Refund Payment?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <small style={{color: 'red'}}>Note: Payment Gateway fee of <b>{history[selectedTxn]?.gatewayFees}</b> has been deducted from the total amount to be refunded.</small>\n          <h5 className=\"mt-1\">\n            A total of <b>{toMoneyFormat((history[selectedTxn]?.price - history[selectedTxn]?.totalDiscount - history[selectedTxn]?.gatewayFees), history[selectedTxn]?.currency)}</b> will be refunded to your account.\n            \n          </h5><br />\n          <h5>\n            Please state your reason below:\n          </h5>\n          <div className=\"form-group mt-4\">\n              <textarea defaultValue={reason} className=\"form-control\" rows=\"3\" placeholder=\"Write your reason here ...\" onChange={(e) => setReason(e.target.value)}></textarea>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='link' type='button' onClick={() => setModalShow({refund: false})}>\n            Cancel\n          </Button>\n          <Button\n            variant='info'\n            type='submit'\n            onClick={refundTransaction}\n            disabled={loading.isSubmitLoading === true}\n          >\n            <span\n              style={{ display: loading.isSubmitLoading ? 'inline-block' : 'none' }}\n              class='spinner-border spinner-border-sm btn-load'\n              role='status'\n              aria-hidden='true'\n            />\n            Continue\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='m' show={modalShow.cancel} onHide={() => setModalShow({cancel: false})}>\n        <Modal.Header closeButton>\n          <Modal.Title>Cancel Payment?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Are you sure you want to cancel this payment? Clicking continue will cancel\n            all enrollments related to this transaction.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='link' type='button' onClick={() => setModalShow({cancel: false})}>\n            Cancel\n          </Button>\n          <Button\n            variant='info'\n            type='submit'\n            onClick={cancelTransaction}\n            disabled={loading.isSubmitLoading === true}\n          >\n            <span\n              style={{ display: loading.isSubmitLoading ? 'inline-block' : 'none' }}\n              class='spinner-border spinner-border-sm btn-load'\n              role='status'\n              aria-hidden='true'\n            />\n            Continue\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        size='lg'\n        show={modalShow.verify}\n        backdrop='static'\n        keyboard={false}\n        onHide={() => setModalShow({verify: false})}\n      >\n        <Modal.Header>\n          <Modal.Title>{history[selectedTxn]?.status === PAYMENT_STATUS.PENDING ? 'Verify' : 'Edit'} Payment?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"bank-details\">\n          <form className=\"row\" id=\"verifyForm\">\n            <div className=\"col-12\">\n                <div className=\"card mb-3\">\n                    <div className=\"card-body\">\n                        {loading.errorPayment && <div className=\"alert alert-warning text-center text m-t-10 ml-0 mr-0\" style={{ fontSize: 10 }}>\n                          <i class=\"fas fa-times float-right\" style={{ cursor: 'pointer' }} onClick={() => setLoading(prevState => ({...prevState, errorPayment: false, loadingPayment: false}))}></i>\n                          <span className=\"font-weight-bold\" style={{ fontSize: 12 }}>\n                              Something went wrong.\n                          </span>\n                          <br />\n                          {loading.errorMessage ? loading.errorMessage : 'Please try again later.'}\n                        </div>}\n                        <h6 className=\"modal-title mb-2\" id=\"exampleModalLabel\"><b>Transaction Id: {history[selectedTxn]?.transactionId}</b></h6>\n                        <h6 className=\"modal-title\" id=\"exampleModalLabel\">Bank Name<small style={{color: 'red'}}>*</small></h6>\n                        <div className=\"form-group mb-3\">\n                            <input className=\"form-control\" type=\"text\" name=\"bankName\" defaultValue={paymentDetails.bankName} onChange={(e) => onInputChange(e.target.name, e.target.value)} required/>\n                        </div>\n\n                        <h6 className=\"modal-title\" id=\"exampleModalLabel\">Reference Number<small style={{color: 'red'}}>*</small></h6>\n                        <div className=\"form-group mb-3\">\n                            <input className=\"form-control\" type=\"text\" name=\"referenceNumber\" aria-describedby=\"refHelp\" defaultValue={paymentDetails.referenceNumber} onChange={(e) => onInputChange(e.target.name, e.target.value)} required/>\n                            <small id=\"refHelp\" class=\"form-text text-muted\">Reference Number refers to the number indicated on your deposit slip or payment confirmation.</small>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <h6 className=\"modal-title\" id=\"exampleModalLabel\">Date of Deposit<small style={{color: 'red'}}>*</small></h6>\n                            <div className=\"form-group mb-3\">\n                                <input className=\"form-control\" type=\"date\" name=\"depositDate\" defaultValue={paymentDetails.depositDate} max={maxDate} onChange={(e) => onInputChange(e.target.name, e.target.value)} required/>\n                            </div>\n                          </div>\n                          <div className=\"col\">\n                            <h6 className=\"modal-title\" id=\"exampleModalLabel\">Time of Deposit<small style={{color: 'red'}}>*</small></h6>\n                            <div className=\"form-group mb-3\">\n                                <input className=\"form-control\" type=\"time\" name=\"depositTime\" defaultValue={paymentDetails.depositTime} onChange={(e) => onInputChange(e.target.name, e.target.value)} required/>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <h6 className=\"modal-title\" id=\"exampleModalLabel\">Currency<small style={{color: 'red'}}>*</small></h6>\n                            <div className=\"form-group mb-3\">\n                              <select className=\"form-control\" name=\"currency\" onChange={(e) => onInputChange(e.target.name, e.target.value)} disabled>\n                                  <option value=\"PHP\" selected={history[selectedTxn]?.currency === 'PHP'}>PHP</option>\n                                  <option value=\"USD\" selected={history[selectedTxn]?.currency === 'USD'}>USD</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"col\">\n                            <h6 className=\"modal-title\" id=\"exampleModalLabel\">Amount<small style={{color: 'red'}}>*</small></h6>\n                            <div className=\"form-group mb-3\">\n                                <input className=\"form-control\" type=\"number\" name=\"amount\" min=\"1\" defaultValue={paymentDetails.amount} onChange={(e) => onInputChange(e.target.name, e.target.value)} required/>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                          <div className=\"col-6\">\n                            <h6 className=\"modal-title mb-3\">Proof of Payment<small style={{color: 'red'}}>*</small></h6>\n                            <div className=\"ml-3\">\n                              <label className=\"lms-input-label\">\n                                Upload a thumbnail image\n                              </label>\n                              <br />\n                              <label className=\"lms-input-sublabel\">\n                                Image size: not more than 3MB\n                                <br />\n                                Image formats: jpg, png, jpeg\n                                <br />\n                                Accepted file formats: jpg, png, jpeg\n                                <br />\n                              </label>\n                            </div>\n                            <div className=\"ml-3\">\n                              <button className=\"btn btn-info btn-block\" type=\"button\" onClick={() => uploaderRef.current.click()} disabled={loading.loadingPayment}>\n                                Upload\n                              </button>\n                              <input\n                                name=\"upload\"\n                                ref={uploaderRef}\n                                type=\"file\"\n                                accept=\".png, .jpg, .jpeg\"\n                                style={{ display: \"none\" }}\n                                onChange={onAttachImage}/>\n                            </div>\n                          </div>\n                          <div className=\"col-6\" style={{textAlign:\"center\"}}>\n                            <img\n                              id=\"imageFile\"\n                              src={paymentDetails.photo ? paymentDetails.photo : \"/assets/images/image-placeholder.jpg\"}\n                              alt=\"thumbnail\"\n                              className=\"img-fluid\"\n                              style={{ maxHeight: \"200px\" }}\n                            />\n                          </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='primary' type=\"button\" onClick={verifyPayment} disabled={loading.loadingPayment}>\n            <span\n              style={{ display: loading.loadingPayment ? 'inline-block' : 'none' }}\n              className='spinner-border spinner-border-sm btn-load'\n              role='status'\n              aria-hidden='true'\n              />\n            {history[selectedTxn]?.status === PAYMENT_STATUS.PENDING ? 'Proceed' : 'Update'}\n          </Button>\n          <Button variant='secondary' onClick={() => onClose()} disabled={loading.loadingPayment}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}