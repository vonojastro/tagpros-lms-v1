{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/common/Form/AutoSubmit/index.jsx\";\nimport React from 'react';\nimport { FormSpy } from 'react-final-form';\nimport diff from 'object-diff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AutoSave extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.save = async () => {\n      var _Object$keys;\n\n      if (this.promise) {\n        await this.promise;\n      }\n\n      const {\n        values,\n        save\n      } = this.props; // This diff step is totally optional\n\n      const difference = diff(this.state.values, values);\n\n      if ((_Object$keys = Object.keys(difference)) !== null && _Object$keys !== void 0 && _Object$keys.length) {\n        // values have changed\n        this.setState({\n          submitting: true,\n          values\n        });\n        this.promise = save(difference);\n        await this.promise;\n        delete this.promise;\n        this.setState({\n          submitting: false\n        });\n      }\n    };\n\n    this.state = {\n      values: props.values,\n      submitting: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = setTimeout(this.save, this.props.debounce);\n  }\n\n  render() {\n    // This component doesn't have to render anything, but it can render\n    // submitting state.\n    return this.state.submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitting\",\n      children: \"Submitting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this);\n  }\n\n} // Make a HOC\n// This is not the only way to accomplish auto-save, but it does let us:\n// - Use built-in React lifecycle methods to listen for changes\n// - Maintain state of when we are submitting\n// - Render a message when submitting\n// - Pass in debounce and save props nicely\n// eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default (props => /*#__PURE__*/_jsxDEV(FormSpy, { ...props,\n  subscription: {\n    values: true\n  },\n  component: AutoSave\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/common/Form/AutoSubmit/index.jsx"],"names":["React","FormSpy","diff","AutoSave","Component","constructor","props","save","promise","values","difference","state","Object","keys","length","setState","submitting","componentWillReceiveProps","nextProps","timeout","clearTimeout","setTimeout","debounce","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,IAZmB,GAYZ,YAAY;AAAA;;AACjB,UAAI,KAAKC,OAAT,EAAkB;AAChB,cAAM,KAAKA,OAAX;AACD;;AACD,YAAM;AAAEC,QAAAA,MAAF;AAAUF,QAAAA;AAAV,UAAmB,KAAKD,KAA9B,CAJiB,CAMjB;;AACA,YAAMI,UAAU,GAAGR,IAAI,CAAC,KAAKS,KAAL,CAAWF,MAAZ,EAAoBA,MAApB,CAAvB;;AACA,0BAAIG,MAAM,CAACC,IAAP,CAAYH,UAAZ,CAAJ,yCAAI,aAAyBI,MAA7B,EAAqC;AACnC;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE,IAAd;AAAoBP,UAAAA;AAApB,SAAd;AACA,aAAKD,OAAL,GAAeD,IAAI,CAACG,UAAD,CAAnB;AACA,cAAM,KAAKF,OAAX;AACA,eAAO,KAAKA,OAAZ;AACA,aAAKO,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KA5BkB;;AAEjB,SAAKL,KAAL,GAAa;AAAEF,MAAAA,MAAM,EAAEH,KAAK,CAACG,MAAhB;AAAwBO,MAAAA,UAAU,EAAE;AAApC,KAAb;AACD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAI,KAAKC,OAAT,EAAkB;AAChBC,MAAAA,YAAY,CAAC,KAAKD,OAAN,CAAZ;AACD;;AACD,SAAKA,OAAL,GAAeE,UAAU,CAAC,KAAKd,IAAN,EAAY,KAAKD,KAAL,CAAWgB,QAAvB,CAAzB;AACD;;AAoBDC,EAAAA,MAAM,GAAG;AACP;AACA;AACA,WACE,KAAKZ,KAAL,CAAWK,UAAX,iBAAyB;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD3B;AAGD;;AArCoC,C,CAwCvC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAeV,KAAK,iBAClB,QAAC,OAAD,OAAaA,KAAb;AAAoB,EAAA,YAAY,EAAE;AAAEG,IAAAA,MAAM,EAAE;AAAV,GAAlC;AAAoD,EAAA,SAAS,EAAEN;AAA/D;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import React from 'react'\nimport { FormSpy } from 'react-final-form'\nimport diff from 'object-diff'\n\nclass AutoSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { values: props.values, submitting: false }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.timeout) {\n      clearTimeout(this.timeout)\n    }\n    this.timeout = setTimeout(this.save, this.props.debounce)\n  }\n\n  save = async () => {\n    if (this.promise) {\n      await this.promise\n    }\n    const { values, save } = this.props\n\n    // This diff step is totally optional\n    const difference = diff(this.state.values, values)\n    if (Object.keys(difference)?.length) {\n      // values have changed\n      this.setState({ submitting: true, values })\n      this.promise = save(difference)\n      await this.promise\n      delete this.promise\n      this.setState({ submitting: false })\n    }\n  }\n\n  render() {\n    // This component doesn't have to render anything, but it can render\n    // submitting state.\n    return (\n      this.state.submitting && <div className=\"submitting\">Submitting...</div>\n    )\n  }\n}\n\n// Make a HOC\n// This is not the only way to accomplish auto-save, but it does let us:\n// - Use built-in React lifecycle methods to listen for changes\n// - Maintain state of when we are submitting\n// - Render a message when submitting\n// - Pass in debounce and save props nicely\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default props => (\n  <FormSpy {...props} subscription={{ values: true }} component={AutoSave} />\n)\n"]},"metadata":{},"sourceType":"module"}