{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/UsersSelector/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { CheckboxArrayControl, InputControl, InputLabel } from 'components/common/Form/Inputs';\nimport useValidationSchema from 'hooks/use-validation-schema';\nimport { Form } from 'react-final-form';\nimport { ACCOUNT_STATUS, APPLICATION_STATUS, USER_CODES } from 'utils/constants';\nimport _ from 'lodash';\nimport { api } from 'api';\nimport styled from 'styled-components';\nimport usersSelectorSchema from '../../validators/usersSelector';\nimport { Button, Spinner } from 'react-bootstrap';\nimport AutoSubmit from 'components/common/Form/AutoSubmit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n`;\n_c = InputWrapper;\nconst Inputs = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  /* grid-template-: 20rem 10rem 10rem; */\n  gap: 2rem;\n  select {\n    width: 100%;\n  }\n`;\n_c2 = Inputs;\nconst StyledForm = styled.form`\n  display: grid;\n  grid-template-rows: auto min-content;\n  /* overflow-y: auto; */\n`;\n_c3 = StyledForm;\nconst SearchInput = styled.div`\n  display: grid;\n  grid-template-rows: min-content min-content;\n  @media (min-width: 700px) {\n    grid-template-columns: 1fr 200px;\n    grid-template-rows: 1fr;\n  }\n\n  gap: 20px;\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 2;\n`;\n_c4 = SearchInput;\n\nconst UsersSelector = _ref => {\n  _s();\n\n  let {\n    onChange,\n    selectedEmails,\n    onLoadingChange\n  } = _ref;\n\n  const handleSubmit = async values => {\n    onLoadingChange(true);\n\n    try {\n      var _values$NAME, _r$data$map, _r$data;\n\n      const r = await api.get('/accounts', {\n        params: { ...values,\n          NAME: (_values$NAME = values.NAME) !== null && _values$NAME !== void 0 && _values$NAME.length ? `%${values.NAME}%` : undefined\n        }\n      });\n      onChange((_r$data$map = (_r$data = r.data).map) === null || _r$data$map === void 0 ? void 0 : _r$data$map.call(_r$data, v => ({ ...v,\n        IS_CHECKED: selectedEmails.includes(v.EMAIL_ADD)\n      })));\n    } catch (error) {\n      throw error;\n    } finally {\n      onLoadingChange(false);\n    }\n  };\n\n  const validate = useValidationSchema(usersSelectorSchema);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    validate: validate,\n    onSubmit: handleSubmit,\n    render: _ref2 => {\n      let {\n        handleSubmit,\n        submitting\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(StyledForm, {\n        className: \"form-material\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(AutoSubmit, {\n          save: handleSubmit,\n          debounce: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          children: [/*#__PURE__*/_jsxDEV(InputControl, {\n            name: \"NAME\",\n            placeholder: \"Enter email, first name, or last name...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outline-info\",\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'min-content min-content',\n              justifyContent: 'center',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            disabled: submitting,\n            children: [submitting && /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              label: 'Account Type'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n            children: /*#__PURE__*/_jsxDEV(CheckboxArrayControl, {\n              name: 'USER_CODE',\n              options: Object.keys(USER_CODES).map(key => ({\n                value: key,\n                label: USER_CODES[key] === 'Educ' ? 'Education' : USER_CODES[key]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            label: 'Account Status'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n            children: /*#__PURE__*/_jsxDEV(CheckboxArrayControl, {\n              name: 'STATUS',\n              options: Object.keys(ACCOUNT_STATUS).map(key => ({\n                label: _.startCase(_.lowerCase(key)),\n                value: ACCOUNT_STATUS[key]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            label: 'Application Status - School Leader'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n            children: /*#__PURE__*/_jsxDEV(CheckboxArrayControl, {\n              name: 'SCHOOL_DISTRICT_APPLICATION_STATUS',\n              options: Object.keys(APPLICATION_STATUS).map(key => ({\n                label: _.startCase(_.lowerCase(key)),\n                value: APPLICATION_STATUS[key]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            label: 'Application Status - Teacher'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n            children: /*#__PURE__*/_jsxDEV(CheckboxArrayControl, {\n              name: 'TEACHER_APPLICATION_STATUS',\n              options: Object.keys(APPLICATION_STATUS).map(key => ({\n                label: _.startCase(_.lowerCase(key)),\n                value: APPLICATION_STATUS[key]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersSelector, \"tjn0xVIj13hB1HfYcj2GKFsoL8Q=\", false, function () {\n  return [useValidationSchema];\n});\n\n_c5 = UsersSelector;\nexport default UsersSelector;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"Inputs\");\n$RefreshReg$(_c3, \"StyledForm\");\n$RefreshReg$(_c4, \"SearchInput\");\n$RefreshReg$(_c5, \"UsersSelector\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/UsersSelector/index.jsx"],"names":["CheckboxArrayControl","InputControl","InputLabel","useValidationSchema","Form","ACCOUNT_STATUS","APPLICATION_STATUS","USER_CODES","_","api","styled","usersSelectorSchema","Button","Spinner","AutoSubmit","InputWrapper","div","Inputs","StyledForm","form","SearchInput","UsersSelector","onChange","selectedEmails","onLoadingChange","handleSubmit","values","r","get","params","NAME","length","undefined","data","map","v","IS_CHECKED","includes","EMAIL_ADD","error","validate","submitting","display","gridTemplateColumns","justifyContent","alignItems","gap","Object","keys","key","value","label","startCase","lowerCase"],"mappings":";;;AAAA,SAEEA,oBAFF,EAGEC,YAHF,EAIEC,UAJF,QAKO,+BALP;AAMA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,EAA6CC,UAA7C,QAA+D,iBAA/D;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;AACA,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAI;AAChC;AACA;AACA,CAHA;KAAMD,Y;AAIN,MAAME,MAAM,GAAGP,MAAM,CAACM,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,M;AASN,MAAMC,UAAU,GAAGR,MAAM,CAACS,IAAK;AAC/B;AACA;AACA;AACA,CAJA;MAAMD,U;AAON,MAAME,WAAW,GAAGV,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMI,W;;AAcN,MAAMC,aAAa,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,cAAZ;AAA4BC,IAAAA;AAA5B,GAAkD;;AACvE,QAAMC,YAAY,GAAG,MAAMC,MAAN,IAAgB;AACnCF,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AAAA;;AACF,YAAMG,CAAC,GAAG,MAAMlB,GAAG,CAACmB,GAAJ,CAAQ,WAAR,EAAqB;AACnCC,QAAAA,MAAM,EAAE,EAAE,GAAGH,MAAL;AAAaI,UAAAA,IAAI,EAAE,gBAAAJ,MAAM,CAACI,IAAP,sDAAaC,MAAb,GAAuB,IAAGL,MAAM,CAACI,IAAK,GAAtC,GAA2CE;AAA9D;AAD2B,OAArB,CAAhB;AAGAV,MAAAA,QAAQ,gBACN,WAAAK,CAAC,CAACM,IAAF,EAAOC,GADD,gDACN,0BAAaC,CAAC,KAAK,EAAE,GAAGA,CAAL;AAAQC,QAAAA,UAAU,EAAEb,cAAc,CAACc,QAAf,CAAwBF,CAAC,CAACG,SAA1B;AAApB,OAAL,CAAd,CADM,CAAR;AAGD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACd,YAAMA,KAAN;AACD,KATD,SASU;AACRf,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAdD;;AAgBA,QAAMgB,QAAQ,GAAGrC,mBAAmB,CAACQ,mBAAD,CAApC;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAE6B,QADZ;AAEE,IAAA,QAAQ,EAAEf,YAFZ;AAGE,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEA,QAAAA,YAAF;AAAgBgB,QAAAA;AAAhB,OAAD;AAAA,0BACN,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAsC,QAAA,QAAQ,EAAEhB,YAAhD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,YAAlB;AAAgC,UAAA,QAAQ,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA,kCACE,QAAC,YAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAC,cAFV;AAGE,YAAA,KAAK,EAAE;AACLiB,cAAAA,OAAO,EAAE,MADJ;AAELC,cAAAA,mBAAmB,EAAE,yBAFhB;AAGLC,cAAAA,cAAc,EAAE,QAHX;AAILC,cAAAA,UAAU,EAAE,QAJP;AAKLC,cAAAA,GAAG,EAAE;AALA,aAHT;AAUE,YAAA,QAAQ,EAAEL,UAVZ;AAAA,uBAYGA,UAAU,iBAAI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,QAAnB;AAA4B,cAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAZjB,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAwBE,QAAC,MAAD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,YAAD;AAAA,mCACE,QAAC,oBAAD;AACE,cAAA,IAAI,EAAE,WADR;AAEE,cAAA,OAAO,EAAEM,MAAM,CAACC,IAAP,CAAYzC,UAAZ,EAAwB2B,GAAxB,CAA4Be,GAAG,KAAK;AAC3CC,gBAAAA,KAAK,EAAED,GADoC;AAE3CE,gBAAAA,KAAK,EAAE5C,UAAU,CAAC0C,GAAD,CAAV,KAAoB,MAApB,GAA6B,WAA7B,GAA2C1C,UAAU,CAAC0C,GAAD;AAFjB,eAAL,CAA/B;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAaE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE,QAAC,YAAD;AAAA,mCACE,QAAC,oBAAD;AACE,cAAA,IAAI,EAAE,QADR;AAEE,cAAA,OAAO,EAAEF,MAAM,CAACC,IAAP,CAAY3C,cAAZ,EAA4B6B,GAA5B,CAAgCe,GAAG,KAAK;AAC/CE,gBAAAA,KAAK,EAAE3C,CAAC,CAAC4C,SAAF,CAAY5C,CAAC,CAAC6C,SAAF,CAAYJ,GAAZ,CAAZ,CADwC;AAE/CC,gBAAAA,KAAK,EAAE7C,cAAc,CAAC4C,GAAD;AAF0B,eAAL,CAAnC;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAdF,eAuBE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAwBE,QAAC,YAAD;AAAA,mCACE,QAAC,oBAAD;AACE,cAAA,IAAI,EAAE,oCADR;AAEE,cAAA,OAAO,EAAEF,MAAM,CAACC,IAAP,CAAY1C,kBAAZ,EAAgC4B,GAAhC,CAAoCe,GAAG,KAAK;AACnDE,gBAAAA,KAAK,EAAE3C,CAAC,CAAC4C,SAAF,CAAY5C,CAAC,CAAC6C,SAAF,CAAYJ,GAAZ,CAAZ,CAD4C;AAEnDC,gBAAAA,KAAK,EAAE5C,kBAAkB,CAAC2C,GAAD;AAF0B,eAAL,CAAvC;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAiCE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAjCF,eAkCE,QAAC,YAAD;AAAA,mCACE,QAAC,oBAAD;AACE,cAAA,IAAI,EAAE,4BADR;AAEE,cAAA,OAAO,EAAEF,MAAM,CAACC,IAAP,CAAY1C,kBAAZ,EAAgC4B,GAAhC,CAAoCe,GAAG,KAAK;AACnDE,gBAAAA,KAAK,EAAE3C,CAAC,CAAC4C,SAAF,CAAY5C,CAAC,CAAC6C,SAAF,CAAYJ,GAAZ,CAAZ,CAD4C;AAEnDC,gBAAAA,KAAK,EAAE5C,kBAAkB,CAAC2C,GAAD;AAF0B,eAAL,CAAvC;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,UADF;AAgFD,CAnGD;;GAAM5B,a;UAiBalB,mB;;;MAjBbkB,a;AAoGN,eAAeA,aAAf","sourcesContent":["import {\n  \n  CheckboxArrayControl,\n  InputControl,\n  InputLabel\n} from 'components/common/Form/Inputs';\nimport useValidationSchema from 'hooks/use-validation-schema';\nimport { Form } from 'react-final-form';\nimport { ACCOUNT_STATUS, APPLICATION_STATUS, USER_CODES } from 'utils/constants';\nimport _ from 'lodash';\nimport { api } from 'api';\nimport styled from 'styled-components';\nimport usersSelectorSchema from '../../validators/usersSelector';\nimport { Button, Spinner } from 'react-bootstrap';\nimport AutoSubmit from 'components/common/Form/AutoSubmit';\nconst InputWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n`;\nconst Inputs = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  /* grid-template-: 20rem 10rem 10rem; */\n  gap: 2rem;\n  select {\n    width: 100%;\n  }\n`;\nconst StyledForm = styled.form`\n  display: grid;\n  grid-template-rows: auto min-content;\n  /* overflow-y: auto; */\n`;\n\n\nconst SearchInput = styled.div`\n  display: grid;\n  grid-template-rows: min-content min-content;\n  @media (min-width: 700px) {\n    grid-template-columns: 1fr 200px;\n    grid-template-rows: 1fr;\n  }\n\n  gap: 20px;\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 2;\n`;\nconst UsersSelector = ({ onChange, selectedEmails, onLoadingChange }) => {\n  const handleSubmit = async values => {\n    onLoadingChange(true);\n    try {\n      const r = await api.get('/accounts', {\n        params: { ...values, NAME: values.NAME?.length ? `%${values.NAME}%` : undefined }\n      });\n      onChange(\n        r.data.map?.(v => ({ ...v, IS_CHECKED: selectedEmails.includes(v.EMAIL_ADD) }))\n      );\n    } catch (error) {\n      throw error;\n    } finally {\n      onLoadingChange(false);\n    }\n  };\n\n  const validate = useValidationSchema(usersSelectorSchema);\n\n  return (\n    <Form\n      validate={validate}\n      onSubmit={handleSubmit}\n      render={({ handleSubmit, submitting }) => (\n        <StyledForm className='form-material' onSubmit={handleSubmit}>\n          <AutoSubmit save={handleSubmit} debounce={1000} />\n          <SearchInput>\n            <InputControl\n              name='NAME'\n              placeholder='Enter email, first name, or last name...'\n            />\n            <Button\n              type='submit'\n              variant='outline-info'\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'min-content min-content',\n                justifyContent: 'center',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}\n              disabled={submitting}\n            >\n              {submitting && <Spinner animation='border' size='sm' />}\n              <div>Search</div>\n            </Button>\n          </SearchInput>\n\n          <Inputs>\n            <div className='mt-5'>\n              <InputLabel label={'Account Type'} />\n            </div>\n            <InputWrapper>\n              <CheckboxArrayControl\n                name={'USER_CODE'}\n                options={Object.keys(USER_CODES).map(key => ({\n                  value: key,\n                  label: USER_CODES[key] === 'Educ' ? 'Education' : USER_CODES[key]\n                }))}\n              />\n            </InputWrapper>\n            <InputLabel label={'Account Status'} />\n            <InputWrapper>\n              <CheckboxArrayControl\n                name={'STATUS'}\n                options={Object.keys(ACCOUNT_STATUS).map(key => ({\n                  label: _.startCase(_.lowerCase(key)),\n                  value: ACCOUNT_STATUS[key]\n                }))}\n              />\n            </InputWrapper>\n            <InputLabel label={'Application Status - School Leader'} />\n            <InputWrapper>\n              <CheckboxArrayControl\n                name={'SCHOOL_DISTRICT_APPLICATION_STATUS'}\n                options={Object.keys(APPLICATION_STATUS).map(key => ({\n                  label: _.startCase(_.lowerCase(key)),\n                  value: APPLICATION_STATUS[key]\n                }))}\n              />\n            </InputWrapper>\n            <InputLabel label={'Application Status - Teacher'} />\n            <InputWrapper>\n              <CheckboxArrayControl\n                name={'TEACHER_APPLICATION_STATUS'}\n                options={Object.keys(APPLICATION_STATUS).map(key => ({\n                  label: _.startCase(_.lowerCase(key)),\n                  value: APPLICATION_STATUS[key]\n                }))}\n              />\n            </InputWrapper>\n          </Inputs>\n\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n          {/* <button type='submit'>submit</button> */}\n        </StyledForm>\n      )}\n    />\n  );\n};\nexport default UsersSelector;\n"]},"metadata":{},"sourceType":"module"}