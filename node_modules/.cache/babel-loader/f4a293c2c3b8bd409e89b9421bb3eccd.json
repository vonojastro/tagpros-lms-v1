{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport monitorReducersEnhancer from \"./enhancers/monitorReducers\";\nimport loggerMiddleware from \"./middleware/logger\";\nimport rootReducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport { persistReducer } from \"redux-persist\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\", \"learners\"] // only navigation will be persisted\n\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composeEnhancers = (process.env.NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n  const composedEnhancers = composeEnhancers(...enhancers);\n  const store = createStore(persistedReducer, preloadedState, composedEnhancers);\n  return store;\n}","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/configureStore.js"],"names":["applyMiddleware","compose","createStore","thunkMiddleware","monitorReducersEnhancer","loggerMiddleware","rootReducer","storage","persistReducer","persistConfig","key","whitelist","persistedReducer","configureStore","preloadedState","middlewares","middlewareEnhancer","enhancers","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composedEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,uBAAP,MAAoC,6BAApC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBH,EAAAA,OAFoB;AAGpBI,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,UAAT,CAHS,CAGa;;AAHb,CAAtB;AAKA,MAAMC,gBAAgB,GAAGJ,cAAc,CAACC,aAAD,EAAgBH,WAAhB,CAAvC;AAEA,eAAe,SAASO,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,QAAMC,WAAW,GAAG,CAACV,gBAAD,EAAmBF,eAAnB,CAApB;AACA,QAAMa,kBAAkB,GAAGhB,eAAe,CAAC,GAAGe,WAAJ,CAA1C;AAEA,QAAME,SAAS,GAAG,CAACD,kBAAD,EAAqBZ,uBAArB,CAAlB;AACA,QAAMc,gBAAgB,GACpB,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACGC,MAAM,CAACC,oCADV,GAEG,IAFJ,KAEatB,OAHf;AAIA,QAAMuB,iBAAiB,GAAGN,gBAAgB,CAAC,GAAGD,SAAJ,CAA1C;AAEA,QAAMQ,KAAK,GAAGvB,WAAW,CAACU,gBAAD,EAAmBE,cAAnB,EAAmCU,iBAAnC,CAAzB;AAEA,SAAOC,KAAP;AACD","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport monitorReducersEnhancer from \"./enhancers/monitorReducers\";\nimport loggerMiddleware from \"./middleware/logger\";\nimport rootReducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\", \"learners\"], // only navigation will be persisted\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composeEnhancers =\n    (process.env.NODE_ENV === \"development\"\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : null) || compose;\n  const composedEnhancers = composeEnhancers(...enhancers);\n\n  const store = createStore(persistedReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}