{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = rgb;\n\nvar _reduceHexValue = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_reduceHexValue\"));\n\nvar _numberToHex = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_numberToHex\"));\n\nvar _errors = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_errors\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgb(255, 205, 100),\n *   background: rgb({ red: 255, green: 205, blue: 100 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgb(255, 205, 100)};\n *   background: ${rgb({ red: 255, green: 205, blue: 100 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffcd64\";\n *   background: \"#ffcd64\";\n * }\n */\n\n\nfunction rgb(value, green, blue) {\n  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {\n    return (0, _reduceHexValue[\"default\"])(\"#\" + (0, _numberToHex[\"default\"])(value) + (0, _numberToHex[\"default\"])(green) + (0, _numberToHex[\"default\"])(blue));\n  } else if (typeof value === 'object' && green === undefined && blue === undefined) {\n    return (0, _reduceHexValue[\"default\"])(\"#\" + (0, _numberToHex[\"default\"])(value.red) + (0, _numberToHex[\"default\"])(value.green) + (0, _numberToHex[\"default\"])(value.blue));\n  }\n\n  throw new _errors[\"default\"](6);\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/node_modules/polished/lib/color/rgb.js"],"names":["exports","__esModule","rgb","_reduceHexValue","_interopRequireDefault","require","_numberToHex","_errors","obj","value","green","blue","undefined","red","module","default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,GAArB;;AAEA,IAAIC,eAAe,GAAG,aAAaC,sBAAsB,EAAE,aAAaC,OAAO,CAAC,oCAAD,CAAtB,CAAzD;;AAEA,IAAIC,YAAY,GAAG,aAAaF,sBAAsB,EAAE,aAAaC,OAAO,CAAC,iCAAD,CAAtB,CAAtD;;AAEA,IAAIE,OAAO,GAAG,aAAaH,sBAAsB,EAAE,aAAaC,OAAO,CAAC,4BAAD,CAAtB,CAAjD;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACP,UAAX,GAAwBO,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,GAAT,CAAaO,KAAb,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAI,OAAOF,KAAP,KAAiB,QAAjB,IAA6B,OAAOC,KAAP,KAAiB,QAA9C,IAA0D,OAAOC,IAAP,KAAgB,QAA9E,EAAwF;AACtF,WAAO,CAAC,GAAGR,eAAe,CAAC,SAAD,CAAnB,EAAgC,MAAM,CAAC,GAAGG,YAAY,CAAC,SAAD,CAAhB,EAA6BG,KAA7B,CAAN,GAA4C,CAAC,GAAGH,YAAY,CAAC,SAAD,CAAhB,EAA6BI,KAA7B,CAA5C,GAAkF,CAAC,GAAGJ,YAAY,CAAC,SAAD,CAAhB,EAA6BK,IAA7B,CAAlH,CAAP;AACD,GAFD,MAEO,IAAI,OAAOF,KAAP,KAAiB,QAAjB,IAA6BC,KAAK,KAAKE,SAAvC,IAAoDD,IAAI,KAAKC,SAAjE,EAA4E;AACjF,WAAO,CAAC,GAAGT,eAAe,CAAC,SAAD,CAAnB,EAAgC,MAAM,CAAC,GAAGG,YAAY,CAAC,SAAD,CAAhB,EAA6BG,KAAK,CAACI,GAAnC,CAAN,GAAgD,CAAC,GAAGP,YAAY,CAAC,SAAD,CAAhB,EAA6BG,KAAK,CAACC,KAAnC,CAAhD,GAA4F,CAAC,GAAGJ,YAAY,CAAC,SAAD,CAAhB,EAA6BG,KAAK,CAACE,IAAnC,CAA5H,CAAP;AACD;;AAED,QAAM,IAAIJ,OAAO,CAAC,SAAD,CAAX,CAAuB,CAAvB,CAAN;AACD;;AAEDO,MAAM,CAACd,OAAP,GAAiBA,OAAO,CAACe,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = rgb;\n\nvar _reduceHexValue = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_reduceHexValue\"));\n\nvar _numberToHex = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_numberToHex\"));\n\nvar _errors = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_errors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgb(255, 205, 100),\n *   background: rgb({ red: 255, green: 205, blue: 100 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgb(255, 205, 100)};\n *   background: ${rgb({ red: 255, green: 205, blue: 100 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffcd64\";\n *   background: \"#ffcd64\";\n * }\n */\nfunction rgb(value, green, blue) {\n  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {\n    return (0, _reduceHexValue[\"default\"])(\"#\" + (0, _numberToHex[\"default\"])(value) + (0, _numberToHex[\"default\"])(green) + (0, _numberToHex[\"default\"])(blue));\n  } else if (typeof value === 'object' && green === undefined && blue === undefined) {\n    return (0, _reduceHexValue[\"default\"])(\"#\" + (0, _numberToHex[\"default\"])(value.red) + (0, _numberToHex[\"default\"])(value.green) + (0, _numberToHex[\"default\"])(value.blue));\n  }\n\n  throw new _errors[\"default\"](6);\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}