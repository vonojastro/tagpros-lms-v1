{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Mailing/index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ControlledEditor, InputControl, InputLabel } from 'components/common/Form/Inputs';\nimport { Form } from 'react-final-form';\nimport styled from 'styled-components';\nimport { Fragment, useEffect, useState } from 'react';\nimport draftToHtml from 'draftjs-to-html';\nimport { convertToRaw } from 'draft-js';\nimport { Button, Card, Modal, Spinner } from 'react-bootstrap';\nimport UsersSelector from 'components/UsersSelector';\nimport UsersTable from 'components/UsersTable';\nimport _ from 'lodash';\nimport { ArrowLeftCircle, Mail, X } from 'react-feather';\nimport { FieldArray } from 'react-final-form-arrays';\nimport arrayMutators from 'final-form-arrays';\nimport { OnChange } from 'react-final-form-listeners';\nimport useValidationSchema from 'hooks/use-validation-schema';\nimport schema from '../../../../validators/admin-mailing';\nimport { api } from 'api';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  body {\n    overflow: hidden; /* Hide scrollbars */\n  }\n  color: black !important;\n  display: grid;\n  @media (min-width: 1425px) {\n    grid-template-columns: auto 1fr;\n    .submit-btn {\n      width: 25%;\n      margin-left: auto;\n    }\n  }\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  height: 100%;\n`;\n_c = Wrapper;\nconst StyledForm = styled.form`\n  width: 100%;\n  height: min(100%, 800px);\n  display: grid;\n  grid-template-rows: min-content 1fr min-content;\n`;\n_c2 = StyledForm;\nconst emailsSentColumns = [{\n  name: 'Sent to',\n  cell: row => {\n    // console.info(row.TO)\n    let v = '';\n\n    for (let i = 0; i < 3; ++i) {\n      if (i === row.TO.length) break;\n      if (i === 0) v = row.TO[i];else v = `${v}, \\n${row.TO[i]}`;\n    }\n\n    const remaining = row.TO.length - v.split(',').length;\n    if (remaining) v = `${v} \\n\\nand ${remaining} other${remaining > 1 ? 's' : ''}.`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      children: v\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this);\n  },\n  wrap: true\n}, {\n  name: 'Subject',\n  selector: row => row.SUBJECT,\n  sortable: true,\n  wrap: true\n}, {\n  name: 'Date sent',\n  selector: row => row.CREATED_DATETIME,\n  format: row => new Date(row.CREATED_DATETIME).toLocaleString([], {\n    day: '2-digit',\n    year: '2-digit',\n    month: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  }),\n  sortable: true,\n  wrap: true\n}]; // const EmailContentPreview = ({ subject, content }) => {\n//   const [show, setShow] = useState(false);\n//   const handleClose = () => setShow(false);\n//   useEffect(() => {\n//     if (!!content) setShow(true);\n//   }, [!!content]);\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title>{subject}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body dangerouslySetInnerHTML={{ __html: content }} />\n//       <Modal.Footer />\n//     </Modal>\n//   );\n// };\n\nconst ModalWrapper = styled.span`\n  .modal-width {\n    max-width: 80vw !important;\n  }\n`;\n_c3 = ModalWrapper;\n\nconst EmailsSentButton = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  const loadData = () => {\n    setLoading(true);\n    api.get('/admin/mail').then(_ref => {\n      let {\n        data\n      } = _ref;\n      return setData(data);\n    }).finally(() => setLoading(false));\n  };\n\n  const handleShow = async () => {\n    loadData();\n    setShow(true);\n  }; // const [activeEmailContent, setActiveEmailContent] = useState(null);\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-info\",\n      type: \"button\",\n      className: \"ml-auto\",\n      size: \"sm\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(Mail, {\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), \"Emails sent\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        dialogClassName: \"modal-width\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Emails sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(DataTable // onRowClicked={setActiveEmailContent}\n          , {\n            progressPending: loading,\n            keyField: \"ID\",\n            columns: emailsSentColumns,\n            pagination: true,\n            data: data,\n            progressComponent: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              role: \"status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailsSentButton, \"APzPNjewz6t5KB5qx0TYfGpNssA=\");\n\n_c4 = EmailsSentButton;\n\nfunction AdminMailing() {\n  _s2();\n\n  const [usersLoaded, handleUsersLoadedChange] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [to, setTo] = useState([]);\n\n  const setChecked = n => {\n    const newValues = usersLoaded.map(e => ({ ...e,\n      IS_CHECKED: !!n.find(EMAIL_ADD => EMAIL_ADD === e.EMAIL_ADD)\n    }));\n    handleUsersLoadedChange(newValues);\n  };\n\n  const validate = useValidationSchema(schema);\n\n  const submit = async (_ref2, form) => {\n    let {\n      html,\n      to,\n      subject\n    } = _ref2;\n    const parsedHtml = draftToHtml(convertToRaw(html.getCurrentContent()));\n\n    try {\n      await toast.promise(api.post('/admin/mail', {\n        html: parsedHtml,\n        to,\n        subject\n      }), {\n        pending: 'Sending...',\n        success: 'Email Sent',\n        error: 'Server error'\n      });\n      window.location.reload(); // force reload wyswyg editor // temp\n      // form.reset({ subject: '', to: [] });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    var _document$querySelect;\n\n    // document.body.scrollTop = document.documentElement.scrollTop = 0;\n    // document.querySelector('body').style.overflow = 'hidden';\n    (_document$querySelect = document.querySelector('iframe[style*=\"position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; border: medium none; z-index: 2147483647;\"] ')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.remove();\n  }, []);\n  const [step, setStep] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      height: 'calc(100vh - 245px)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n        style: { ...(step === 1 && {\n            display: 'none'\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflowY: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(UsersSelector, {\n            onChange: handleUsersLoadedChange,\n            selectedEmails: to,\n            onLoadingChange: setUsersLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(EmailsSentButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UsersTable, {\n            data: usersLoaded,\n            to: to,\n            handleSelectedRowsChange: _ref3 => {\n              let {\n                selectedRows\n              } = _ref3;\n              setTo(selectedRows.map(_ref4 => {\n                let {\n                  EMAIL_ADD\n                } = _ref4;\n                return EMAIL_ADD;\n              }));\n            },\n            progressPending: usersLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submit-btn\",\n          type: \"submit\",\n          variant: \"outline-info\",\n          onClick: () => setStep(1),\n          disabled: !to.length,\n          children: \"Compose email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowY: 'auto',\n          height: '100%',\n          ...(step === 0 && {\n            display: 'none'\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          style: {\n            borderRadius: 99999\n          },\n          variant: \"info\",\n          onClick: () => {\n            setStep(0);\n          },\n          className: \"d-flex justify-content-center align-items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeftCircle, {\n            size: 25,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 13\n            },\n            children: \"Select recipients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          initialValuesEqual: (a, b) => _.isEqual(a, b),\n          initialValues: {\n            to\n          },\n          mutators: { ...arrayMutators\n          },\n          validate: validate,\n          onSubmit: submit,\n          subscription: {\n            initialValues: true,\n            values: true,\n            invalid: true,\n            submitting: true,\n            submitSucceeded: true\n          },\n          render: _ref5 => {\n            var _values$html, _values$html$getCurre;\n\n            let {\n              handleSubmit,\n              values,\n              invalid,\n              submitting\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(StyledForm, {\n              onSubmit: handleSubmit,\n              className: \"form-material\",\n              children: [/*#__PURE__*/_jsxDEV(OnChange, {\n                name: \"to\",\n                children: value => {\n                  setChecked(value);\n                  if (!value.length) setStep(0);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                name: \"to\",\n                render: _ref6 => {\n                  var _fields$value;\n\n                  let {\n                    fields\n                  } = _ref6;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minHeight: 100,\n                      background: 'whitesmoke',\n                      padding: '1rem',\n                      maxHeight: 224,\n                      overflowY: 'auto',\n                      display: 'grid',\n                      gridTemplateRows: 'min-content 1fr min-content 1fr',\n                      gap: '1rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      label: \"Recipients\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n                        gap: '1.5rem'\n                      },\n                      children: fields === null || fields === void 0 ? void 0 : (_fields$value = fields.value) === null || _fields$value === void 0 ? void 0 : _fields$value.map((EMAIL_ADD, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'grid',\n                          alignItems: 'center',\n                          gridTemplateColumns: '20ch min-content',\n                          gap: 10\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-truncate font-14\",\n                          children: EMAIL_ADD\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 334,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          size: \"sm\",\n                          variant: \"light\",\n                          onClick: () => fields.remove(i),\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 15,\n                            color: \"red\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 340,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 29\n                        }, this)]\n                      }, EMAIL_ADD, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 27\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n                      name: 'subject',\n                      label: \"Subject\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ControlledEditor, {\n                name: \"html\",\n                placeholder: \"Write something...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"md\",\n                style: {\n                  marginTop: 200,\n                  whiteSpace: 'nowrap'\n                },\n                className: \"ml-auto col col-xl-2 mb-3\",\n                type: \"submit\",\n                value: \"Send\",\n                disabled: !((_values$html = values.html) !== null && _values$html !== void 0 && (_values$html$getCurre = _values$html.getCurrentContent()) !== null && _values$html$getCurre !== void 0 && _values$html$getCurre.hasText()) || invalid || submitting,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AdminMailing, \"usm9tGbdQmlTfYKfgtsXGIBI1ac=\", false, function () {\n  return [useValidationSchema];\n});\n\n_c5 = AdminMailing;\nexport default AdminMailing;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"StyledForm\");\n$RefreshReg$(_c3, \"ModalWrapper\");\n$RefreshReg$(_c4, \"EmailsSentButton\");\n$RefreshReg$(_c5, \"AdminMailing\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Mailing/index.jsx"],"names":["ControlledEditor","InputControl","InputLabel","Form","styled","Fragment","useEffect","useState","draftToHtml","convertToRaw","Button","Card","Modal","Spinner","UsersSelector","UsersTable","_","ArrowLeftCircle","Mail","X","FieldArray","arrayMutators","OnChange","useValidationSchema","schema","api","toast","DataTable","Wrapper","div","StyledForm","form","emailsSentColumns","name","cell","row","v","i","TO","length","remaining","split","whiteSpace","wrap","selector","SUBJECT","sortable","CREATED_DATETIME","format","Date","toLocaleString","day","year","month","hour","minute","ModalWrapper","span","EmailsSentButton","show","setShow","data","setData","loading","setLoading","handleClose","loadData","get","then","finally","handleShow","AdminMailing","usersLoaded","handleUsersLoadedChange","usersLoading","setUsersLoading","to","setTo","setChecked","n","newValues","map","e","IS_CHECKED","find","EMAIL_ADD","validate","submit","html","subject","parsedHtml","getCurrentContent","promise","post","pending","success","error","window","location","reload","document","querySelector","remove","step","setStep","height","display","overflowY","selectedRows","borderRadius","fontSize","a","b","isEqual","initialValues","values","invalid","submitting","submitSucceeded","handleSubmit","value","fields","minHeight","background","padding","maxHeight","gridTemplateRows","gap","gridTemplateColumns","alignItems","marginTop","hasText"],"mappings":"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","sourcesContent":["import {\n  ControlledEditor,\n  InputControl,\n  InputLabel\n} from 'components/common/Form/Inputs';\nimport { Form } from 'react-final-form';\nimport styled from 'styled-components';\nimport { Fragment, useEffect, useState } from 'react';\nimport draftToHtml from 'draftjs-to-html';\nimport { convertToRaw } from 'draft-js';\nimport { Button, Card, Modal, Spinner } from 'react-bootstrap';\nimport UsersSelector from 'components/UsersSelector';\nimport UsersTable from 'components/UsersTable';\nimport _ from 'lodash';\nimport { ArrowLeftCircle, Mail, X } from 'react-feather';\nimport { FieldArray } from 'react-final-form-arrays';\nimport arrayMutators from 'final-form-arrays';\nimport { OnChange } from 'react-final-form-listeners';\nimport useValidationSchema from 'hooks/use-validation-schema';\nimport schema from '../../../../validators/admin-mailing';\nimport { api } from 'api';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component';\n\nconst Wrapper = styled.div`\n  body {\n    overflow: hidden; /* Hide scrollbars */\n  }\n  color: black !important;\n  display: grid;\n  @media (min-width: 1425px) {\n    grid-template-columns: auto 1fr;\n    .submit-btn {\n      width: 25%;\n      margin-left: auto;\n    }\n  }\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  height: 100%;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%;\n  height: min(100%, 800px);\n  display: grid;\n  grid-template-rows: min-content 1fr min-content;\n`;\nconst emailsSentColumns = [\n  {\n    name: 'Sent to',\n    cell: row => {\n      // console.info(row.TO)\n      let v = '';\n      for (let i = 0; i < 3; ++i) {\n        if (i === row.TO.length) break;\n        if (i === 0) v = row.TO[i];\n        else v = `${v}, \\n${row.TO[i]}`;\n      }\n      const remaining = row.TO.length - v.split(',').length;\n      if (remaining) v = `${v} \\n\\nand ${remaining} other${remaining > 1 ? 's' : ''}.`;\n      return <div style={{ whiteSpace: 'pre-wrap' }}>{v}</div>;\n    },\n    wrap: true\n  },\n  {\n    name: 'Subject',\n    selector: row => row.SUBJECT,\n    sortable: true,\n    wrap: true\n  },\n  {\n    name: 'Date sent',\n    selector: row => row.CREATED_DATETIME,\n    format: row =>\n      new Date(row.CREATED_DATETIME).toLocaleString([], {\n        day: '2-digit',\n        year: '2-digit',\n        month: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n    sortable: true,\n    wrap: true\n  }\n];\n// const EmailContentPreview = ({ subject, content }) => {\n//   const [show, setShow] = useState(false);\n//   const handleClose = () => setShow(false);\n\n//   useEffect(() => {\n//     if (!!content) setShow(true);\n//   }, [!!content]);\n\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title>{subject}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body dangerouslySetInnerHTML={{ __html: content }} />\n//       <Modal.Footer />\n//     </Modal>\n//   );\n// };\nconst ModalWrapper = styled.span`\n  .modal-width {\n    max-width: 80vw !important;\n  }\n`;\nconst EmailsSentButton = () => {\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const handleClose = () => setShow(false);\n  const loadData = () => {\n    setLoading(true);\n    api\n      .get('/admin/mail')\n      .then(({ data }) => setData(data))\n      .finally(() => setLoading(false));\n  };\n  const handleShow = async () => {\n    loadData();\n    setShow(true);\n  };\n  // const [activeEmailContent, setActiveEmailContent] = useState(null);\n  return (\n    <Fragment>\n      <Button\n        variant='outline-info'\n        type='button'\n        className='ml-auto'\n        size='sm'\n        onClick={handleShow}\n      >\n        <Mail className='mr-2' />\n        Emails sent\n      </Button>\n      <ModalWrapper>\n        <Modal show={show} onHide={handleClose} dialogClassName='modal-width'>\n          <Modal.Header closeButton>\n            <Modal.Title>Emails sent</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <DataTable\n              // onRowClicked={setActiveEmailContent}\n              progressPending={loading}\n              keyField='ID'\n              columns={emailsSentColumns}\n              pagination\n              data={data}\n              progressComponent={<Spinner animation='border' role='status' />}\n            />\n          </Modal.Body>\n          <Modal.Footer />\n        </Modal>\n      </ModalWrapper>\n      {/* <EmailContentPreview\n        subject={activeEmailContent?.SUBJECT}\n        content={activeEmailContent?.HTML}\n      /> */}\n    </Fragment>\n  );\n};\nfunction AdminMailing() {\n  const [usersLoaded, handleUsersLoadedChange] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n\n  const [to, setTo] = useState([]);\n\n  const setChecked = n => {\n    const newValues = usersLoaded.map(e => ({\n      ...e,\n      IS_CHECKED: !!n.find(EMAIL_ADD => EMAIL_ADD === e.EMAIL_ADD)\n    }));\n    handleUsersLoadedChange(newValues);\n  };\n  const validate = useValidationSchema(schema);\n\n  const submit = async ({ html, to, subject }, form) => {\n    const parsedHtml = draftToHtml(convertToRaw(html.getCurrentContent()));\n    try {\n      await toast.promise(\n        api.post('/admin/mail', {\n          html: parsedHtml,\n          to,\n          subject\n        }),\n        {\n          pending: 'Sending...',\n          success: 'Email Sent',\n          error: 'Server error'\n        }\n      );\n      window.location.reload() // force reload wyswyg editor // temp\n      // form.reset({ subject: '', to: [] });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    // document.body.scrollTop = document.documentElement.scrollTop = 0;\n    // document.querySelector('body').style.overflow = 'hidden';\n    document\n      .querySelector(\n        'iframe[style*=\"position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; border: medium none; z-index: 2147483647;\"] '\n      )\n      ?.remove();\n  }, []);\n\n  const [step, setStep] = useState(0);\n\n  return (\n    <Card\n      style={{\n        height: 'calc(100vh - 245px)'\n      }}\n    >\n      <Card.Body>\n        <Wrapper\n          style={{\n            ...(step === 1 && { display: 'none' })\n          }}\n        >\n          <div style={{ overflowY: 'auto' }}>\n            <UsersSelector\n              onChange={handleUsersLoadedChange}\n              selectedEmails={to}\n              onLoadingChange={setUsersLoading}\n            />\n          </div>\n          <div style={{ overflowY: 'auto' }}>\n            <div className='d-flex align-items-center'>\n              <EmailsSentButton />\n            </div>\n            <UsersTable\n              data={usersLoaded}\n              to={to}\n              handleSelectedRowsChange={({ selectedRows }) => {\n                setTo(selectedRows.map(({ EMAIL_ADD }) => EMAIL_ADD));\n              }}\n              progressPending={usersLoading}\n            />\n          </div>\n          <div />\n          <Button\n            className='submit-btn'\n            type='submit'\n            variant='outline-info'\n            onClick={() => setStep(1)}\n            disabled={!to.length}\n          >\n            Compose email\n          </Button>\n        </Wrapper>\n        {/* {step === 1 && ( */}\n        <div\n          style={{\n            overflowY: 'auto',\n            height: '100%',\n            ...(step === 0 && { display: 'none' })\n          }}\n        >\n          <Button\n            type='button'\n            style={{ borderRadius: 99999 }}\n            variant='info'\n            onClick={() => {\n              setStep(0);\n            }}\n            className='d-flex justify-content-center align-items-center mb-2'\n          >\n            <ArrowLeftCircle size={25} className='mr-2' />\n            <span style={{ fontSize: 13 }}>Select recipients</span>\n          </Button>\n          <Form\n            initialValuesEqual={(a, b) => _.isEqual(a, b)}\n            initialValues={{ to }}\n            mutators={{\n              ...arrayMutators\n            }}\n            validate={validate}\n            onSubmit={submit}\n            subscription={{\n              initialValues: true,\n              values: true,\n              invalid: true,\n              submitting: true,\n              submitSucceeded: true\n            }}\n            render={({ handleSubmit, values, invalid, submitting }) => (\n              <StyledForm onSubmit={handleSubmit} className='form-material'>\n                <OnChange name='to'>\n                  {value => {\n                    setChecked(value);\n                    if (!value.length) setStep(0);\n                  }}\n                </OnChange>\n                {/* <pre>{JSON.stringify(values.to)}</pre> */}\n                <FieldArray\n                  name='to'\n                  render={({ fields }) => (\n                    <div\n                      style={{\n                        minHeight: 100,\n                        background: 'whitesmoke',\n                        padding: '1rem',\n                        maxHeight: 224,\n                        overflowY: 'auto',\n                        display: 'grid',\n                        gridTemplateRows: 'min-content 1fr min-content 1fr',\n                        gap: '1rem'\n                      }}\n                    >\n                      <InputLabel label='Recipients' required />\n                      <div\n                        style={{\n                          display: 'grid',\n                          gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n                          gap: '1.5rem'\n                        }}\n                      >\n                        {fields?.value?.map((EMAIL_ADD, i) => (\n                          <div\n                            style={{\n                              display: 'grid',\n                              alignItems: 'center',\n                              gridTemplateColumns: '20ch min-content',\n                              gap: 10\n                            }}\n                            key={EMAIL_ADD}\n                          >\n                            <div className='text-truncate font-14'>{EMAIL_ADD}</div>\n                            <Button\n                              size='sm'\n                              variant='light'\n                              onClick={() => fields.remove(i)}\n                            >\n                              <X size={15} color='red' />\n                            </Button>\n                          </div>\n                        ))}\n                      </div>\n                      <InputControl name={'subject'} label='Subject' required />\n                    </div>\n                  )}\n                />\n                <ControlledEditor name='html' placeholder='Write something...' />\n                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n                <Button\n                  variant='info'\n                  size='md'\n                  style={{ marginTop: 200, whiteSpace: 'nowrap' }}\n                  className='ml-auto col col-xl-2 mb-3'\n                  type='submit'\n                  value='Send'\n                  disabled={\n                    !values.html?.getCurrentContent()?.hasText() || invalid || submitting\n                  }\n                >\n                  Send\n                </Button>\n              </StyledForm>\n            )}\n          />\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default AdminMailing;\n"]},"metadata":{},"sourceType":"module"}