{"ast":null,"code":"import { api } from \"../api\";\nimport { getSchoolLeadersSuccess, submitSchoolLeaderReviewSuccess } from \"redux/actions/schoolLeader\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nconst SCHOOL_LEADERS_ENDPOINT = '/school-leader';\nexport const getSchoolLeaders = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(SCHOOL_LEADERS_ENDPOINT + \"/all\");\n    dispatch(getSchoolLeadersSuccess(response.data));\n    !!callback && callback(true);\n    console.log(response);\n  } catch (error) {\n    !!callback && callback(false);\n    console.log(\"(getSchoolLeaders) Status:\", error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const submitSchoolLeaderReview = async (dispatch, args, callback) => {\n  try {\n    const response = await api.post(SCHOOL_LEADERS_ENDPOINT + \"/review\", args);\n    dispatch(submitSchoolLeaderReviewSuccess({\n      index: args.index,\n      message: response.data\n    }));\n    callback && callback(true);\n    console.log(response);\n  } catch (error) {\n    callback && callback(false);\n    console.log(\"(submitSchoolLeaderReview) Status:\", error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/schoolLeader.js"],"names":["api","getSchoolLeadersSuccess","submitSchoolLeaderReviewSuccess","onLoadingScreen","offLoadingScreen","SCHOOL_LEADERS_ENDPOINT","getSchoolLeaders","dispatch","callback","response","get","data","console","log","error","submitSchoolLeaderReview","args","post","index","message"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,uBAAT,EAAkCC,+BAAlC,QAAyE,4BAAzE;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,8BAAlD;AAEA,MAAMC,uBAAuB,GAAG,gBAAhC;AAGA,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC7D,MAAI;AACHD,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACA,UAAMM,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQL,uBAAuB,GAAG,MAAlC,CAAvB;AAEAE,IAAAA,QAAQ,CAACN,uBAAuB,CAACQ,QAAQ,CAACE,IAAV,CAAxB,CAAR;AACA,KAAC,CAACH,QAAF,IAAcA,QAAQ,CAAC,IAAD,CAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,GAPD,CAOE,OAAOK,KAAP,EAAc;AACf,KAAC,CAACN,QAAF,IAAcA,QAAQ,CAAC,KAAD,CAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CC,KAA1C;AACAP,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACA,GAXD,SAWU;AACTG,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACA;AACD,CAfM;AAiBP,OAAO,MAAMW,wBAAwB,GAAG,OAAOR,QAAP,EAAiBS,IAAjB,EAAuBR,QAAvB,KAAoC;AAC3E,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACiB,IAAJ,CAASZ,uBAAuB,GAAG,SAAnC,EAA8CW,IAA9C,CAAvB;AACAT,IAAAA,QAAQ,CAACL,+BAA+B,CAAC;AAAEgB,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAAd;AAAqBC,MAAAA,OAAO,EAAEV,QAAQ,CAACE;AAAvC,KAAD,CAAhC,CAAR;AACAH,IAAAA,QAAQ,IAAIA,QAAQ,CAAC,IAAD,CAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,GALD,CAKE,OAAOK,KAAP,EAAc;AACfN,IAAAA,QAAQ,IAAIA,QAAQ,CAAC,KAAD,CAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDC,KAAlD;AACAP,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACA,GATD,SASU;AACTG,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACA;AACD,CAbM","sourcesContent":["import { api } from \"../api\";\nimport { getSchoolLeadersSuccess, submitSchoolLeaderReviewSuccess } from \"redux/actions/schoolLeader\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\"\n\nconst SCHOOL_LEADERS_ENDPOINT = '/school-leader';\n\n\nexport const getSchoolLeaders = async (dispatch, callback) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(SCHOOL_LEADERS_ENDPOINT + \"/all\");\n\n\t\tdispatch(getSchoolLeadersSuccess(response.data));\n\t\t!!callback && callback(true);\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\t!!callback && callback(false);\n\t\tconsole.log(\"(getSchoolLeaders) Status:\", error);\n\t\tdispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const submitSchoolLeaderReview = async (dispatch, args, callback) => {\n\ttry {\n\t\tconst response = await api.post(SCHOOL_LEADERS_ENDPOINT + \"/review\", args);\n\t\tdispatch(submitSchoolLeaderReviewSuccess({ index: args.index, message: response.data }));\n\t\tcallback && callback(true);\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\tcallback && callback(false);\n\t\tconsole.log(\"(submitSchoolLeaderReview) Status:\", error);\n\t\tdispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}