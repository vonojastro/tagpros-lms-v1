{"ast":null,"code":"import { api } from '../api';\nimport { onLoadingScreen, offLoadingScreen } from '../redux/actions/ui-elements';\nimport { getPricingSuccess } from '../redux/actions/pricing';\nconst PRICING_ENDPOINT = '/pricing';\nexport const getAllPricing = async (dispatch, callback, query) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(PRICING_ENDPOINT, {\n      params: query\n    });\n    dispatch(getPricingSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getAllPricing) Status:', error);\n    callback(false);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getActivePricing = async (callback, classType) => {\n  try {\n    const response = await api.get(PRICING_ENDPOINT + `/active/${classType}`); // dispatch(getPricingSuccess(response.data));\n\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getActivePricing) Status:', error);\n    callback(false); // dispatch(offLoadingScreen());\n  }\n};\nexport const getLiveClassPricing = async callback => {\n  try {\n    const response = await api.get(PRICING_ENDPOINT + '/live'); // dispatch(getPricingSuccess(response.data));\n\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getActivePricing) Status:', error);\n    callback(false); // dispatch(offLoadingScreen());\n  }\n};\nexport const getRecordedClassPricing = async callback => {\n  try {\n    const response = await api.get(PRICING_ENDPOINT + '/recorded'); // dispatch(getPricingSuccess(response.data));\n\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getActivePricing) Status:', error);\n    callback(false); // dispatch(offLoadingScreen());\n  }\n};\nexport const savePricing = async args => {\n  try {\n    const response = await api.post(PRICING_ENDPOINT, args);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updatePricing = async args => {\n  try {\n    if (!!args.CREATED_BY) delete args.CREATED_BY;\n    const response = await api.patch(PRICING_ENDPOINT + `/${args.ID}`, args);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const removePricing = async ID => {\n  try {\n    const response = await api.delete(PRICING_ENDPOINT + `/${ID}`);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/pricing.js"],"names":["api","onLoadingScreen","offLoadingScreen","getPricingSuccess","PRICING_ENDPOINT","getAllPricing","dispatch","callback","query","response","get","params","data","error","console","log","getActivePricing","classType","getLiveClassPricing","getRecordedClassPricing","savePricing","args","post","updatePricing","CREATED_BY","patch","ID","removePricing","delete"],"mappings":"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","sourcesContent":["import { api } from '../api';\nimport { onLoadingScreen, offLoadingScreen } from '../redux/actions/ui-elements';\nimport { getPricingSuccess } from '../redux/actions/pricing';\n\nconst PRICING_ENDPOINT = '/pricing';\n\nexport const getAllPricing = async (dispatch, callback, query) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(PRICING_ENDPOINT, { params: query });\n\n    dispatch(getPricingSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getAllPricing) Status:', error);\n    callback(false);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\n\nexport const getActivePricing = async (callback, classType) => {\n  try {\n    const response = await api.get(PRICING_ENDPOINT + `/active/${classType}`);\n    // dispatch(getPricingSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getActivePricing) Status:', error);\n    callback(false);\n    // dispatch(offLoadingScreen());\n  }\n};\n\nexport const getLiveClassPricing = async callback => {\n  try {\n    const response = await api.get(PRICING_ENDPOINT + '/live');\n    // dispatch(getPricingSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getActivePricing) Status:', error);\n    callback(false);\n    // dispatch(offLoadingScreen());\n  }\n};\n\nexport const getRecordedClassPricing = async callback => {\n  try {\n    const response = await api.get(PRICING_ENDPOINT + '/recorded');\n    // dispatch(getPricingSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    console.log('(getActivePricing) Status:', error);\n    callback(false);\n    // dispatch(offLoadingScreen());\n  }\n};\n\nexport const savePricing = async args => {\n  try {\n    const response = await api.post(PRICING_ENDPOINT, args);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updatePricing = async args => {\n  try {\n    if (!!args.CREATED_BY) delete args.CREATED_BY;\n    const response = await api.patch(PRICING_ENDPOINT + `/${args.ID}`, args);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const removePricing = async ID => {\n  try {\n    const response = await api.delete(PRICING_ENDPOINT + `/${ID}`);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}