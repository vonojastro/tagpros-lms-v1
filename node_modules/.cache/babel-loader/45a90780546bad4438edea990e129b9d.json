{"ast":null,"code":"import { TOGGLE_SIDEBAR, TOGGLE_EMAIL_COMPOSER, GET_EMAIL_THREADS, GET_EMAIL_THREADS_ERROR, GET_EMAIL_THREADS_SUCCESS, GET_EMAIL_THREAD, GET_EMAIL_THREAD_ERROR, GET_EMAIL_THREAD_SUCCESS, SET_ACTIVE_DRAFT } from '../actions/mailView';\nconst initialState = {\n  isSidebarExpanded: false,\n  showEmailComposer: false,\n  activeDraft: null,\n  emailThreads: {\n    data: [],\n    get: {\n      loading: true,\n      success: false,\n      error: null\n    }\n  },\n  emailThread: {\n    data: [],\n    get: {\n      loading: true,\n      success: false,\n      error: null\n    }\n  }\n};\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return { ...state,\n        isSidebarExpanded: !state.isSidebarExpanded\n      };\n\n    case TOGGLE_EMAIL_COMPOSER:\n      return { ...state,\n        showEmailComposer: action.truthy ? action.truthy : !state.showEmailComposer\n      };\n\n    case GET_EMAIL_THREADS:\n      return { ...state,\n        emailThreads: { ...state.emailThreads,\n          get: { ...state.emailThreads.get,\n            loading: true\n          }\n        }\n      };\n\n    case GET_EMAIL_THREADS_ERROR:\n      return { ...state,\n        emailThreads: { ...state.emailThreads,\n          get: { ...state.emailThreads.get,\n            error: action.error,\n            loading: false,\n            success: false\n          }\n        }\n      };\n\n    case GET_EMAIL_THREADS_SUCCESS:\n      return { ...state,\n        emailThreads: { ...state.emailThreads,\n          data: action.data,\n          get: {\n            error: null,\n            loading: false,\n            success: true\n          }\n        }\n      };\n\n    case GET_EMAIL_THREAD:\n      return { ...state,\n        emailThread: { ...state.emailThread,\n          get: { ...state.emailThread.get,\n            loading: true\n          }\n        }\n      };\n\n    case GET_EMAIL_THREAD_ERROR:\n      return { ...state,\n        emailThread: { ...state.emailThread,\n          get: { ...state.emailThread.get,\n            error: action.error,\n            loading: false,\n            success: false\n          }\n        }\n      };\n\n    case GET_EMAIL_THREAD_SUCCESS:\n      return { ...state,\n        emailThread: { ...state.emailThread,\n          data: action.data,\n          get: { ...state.emailThread.get,\n            loading: false,\n            success: true\n          }\n        }\n      };\n\n    case SET_ACTIVE_DRAFT:\n      return { ...state,\n        activeDraft: action.activeDraft\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/reducers/mailView.js"],"names":["TOGGLE_SIDEBAR","TOGGLE_EMAIL_COMPOSER","GET_EMAIL_THREADS","GET_EMAIL_THREADS_ERROR","GET_EMAIL_THREADS_SUCCESS","GET_EMAIL_THREAD","GET_EMAIL_THREAD_ERROR","GET_EMAIL_THREAD_SUCCESS","SET_ACTIVE_DRAFT","initialState","isSidebarExpanded","showEmailComposer","activeDraft","emailThreads","data","get","loading","success","error","emailThread","auth","state","action","type","truthy"],"mappings":"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","sourcesContent":["import {\n  TOGGLE_SIDEBAR,\n  TOGGLE_EMAIL_COMPOSER,\n  GET_EMAIL_THREADS,\n  GET_EMAIL_THREADS_ERROR,\n  GET_EMAIL_THREADS_SUCCESS,\n  GET_EMAIL_THREAD,\n  GET_EMAIL_THREAD_ERROR,\n  GET_EMAIL_THREAD_SUCCESS,\n  SET_ACTIVE_DRAFT\n} from '../actions/mailView';\n\nconst initialState = {\n  isSidebarExpanded: false,\n  showEmailComposer: false,\n  activeDraft: null,\n\n  emailThreads: {\n    data: [],\n    get: {\n      loading: true,\n      success: false,\n      error: null\n    }\n  },\n\n  emailThread: {\n    data: [],\n    get: {\n      loading: true,\n      success: false,\n      error: null\n    }\n  }\n};\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return { ...state, isSidebarExpanded: !state.isSidebarExpanded };\n    case TOGGLE_EMAIL_COMPOSER:\n      return {\n        ...state,\n        showEmailComposer: action.truthy ? action.truthy : !state.showEmailComposer\n      };\n    case GET_EMAIL_THREADS:\n      return {\n        ...state,\n        emailThreads: {\n          ...state.emailThreads,\n          get: { ...state.emailThreads.get, loading: true }\n        }\n      };\n    case GET_EMAIL_THREADS_ERROR:\n      return {\n        ...state,\n        emailThreads: {\n          ...state.emailThreads,\n          get: {\n            ...state.emailThreads.get,\n            error: action.error,\n            loading: false,\n            success: false\n          }\n        }\n      };\n    case GET_EMAIL_THREADS_SUCCESS:\n      return {\n        ...state,\n        emailThreads: {\n          ...state.emailThreads,\n          data: action.data,\n          get: {\n            error: null,\n            loading: false,\n            success: true\n          }\n        }\n      };\n\n    case GET_EMAIL_THREAD:\n      return {\n        ...state,\n        emailThread: {\n          ...state.emailThread,\n          get: { ...state.emailThread.get, loading: true }\n        }\n      };\n    case GET_EMAIL_THREAD_ERROR:\n      return {\n        ...state,\n        emailThread: {\n          ...state.emailThread,\n          get: {\n            ...state.emailThread.get,\n            error: action.error,\n            loading: false,\n            success: false\n          }\n        }\n      };\n    case GET_EMAIL_THREAD_SUCCESS:\n      return {\n        ...state,\n        emailThread: {\n          ...state.emailThread,\n          data: action.data,\n          get: {\n            ...state.emailThread.get,\n            loading: false,\n            success: true\n          }\n        }\n      };\n    case SET_ACTIVE_DRAFT:\n      return {\n        ...state,\n        activeDraft: action.activeDraft\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}