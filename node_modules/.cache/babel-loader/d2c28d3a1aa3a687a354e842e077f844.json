{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Pricing/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport Table from 'components/Admin/contents/Table';\nimport Export from '../Export';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPricing, savePricing, updatePricing, removePricing } from 'api/pricing';\nimport { Button, Modal } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport _ from \"lodash\";\nimport { Field, Form } from 'react-final-form';\nimport { Error, InputControl, InputLabel, SelectControl } from 'components/common/Form/Inputs';\nimport { PRICING_FOR_TYPES } from 'utils/constants';\nimport styled from 'styled-components';\nimport useValidationSchema from 'hooks/use-validation-schema';\nimport schema from 'validators/pricing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled.form`\n  display: grid;\n  padding: 1rem;\n  gap: 2rem;\n  select {\n    width: 100%;\n  }\n  color: black;\n  #error-msg {\n    font-size: 13px !important;\n  }\n`;\n_c = StyledForm;\nconst initialValue = {\n  FOR: [],\n  PRICE_CURRENCY: 'USD',\n  PRICE_AMOUNT: null,\n  STATUS: 'active',\n  REMARKS: ''\n};\nexport default function Pricing() {\n  _s();\n\n  const dispatch = useDispatch(); // const [filterValue, setFilterValue] = useState('');\n  // const [filterStatus, setFilterStatus] = useState('');\n  // const [filterCurrency, setFilterCurrency] = useState('');\n  // const [filterColumn, setFilterColumn] = useState('STATUS');\n  // const [sortAmount, setSortAmount] = useState('none');\n\n  const [toggleSortFilter, setToggleSortFilter] = useState({\n    STATUS: false,\n    PRICE_CURRENCY: false\n  });\n  const [errorUpdate, setErrorUpdate] = useState(false);\n  const [errorTable, setErrorTable] = useState(false);\n  const [modalAction, setModalAction] = useState('');\n  const [submitLoading] = useState(false);\n  const [selectedPricing, setSelectedPricing] = useState(initialValue);\n  const validate = useValidationSchema(schema);\n  const pricing = useSelector(state => state.pricing ? state.pricing.getIn(['data', 'pricing']) : []);\n  const loading = useSelector(state => state.uiElements.getIn(['loadingScreen']));\n\n  const loadData = () => {\n    setErrorTable(false);\n    getAllPricing(dispatch, (status, data) => {\n      if (!status) {\n        setErrorTable(true);\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    loadData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const permissions = useSelector(state => state.admin.permissions ? state.admin.permissions : {});\n  let columns = [];\n\n  if (permissions.Pricing === \"readwrite\") {\n    columns = [{\n      Header: 'Pricing List',\n      columns: [{\n        Header: 'No.',\n        Cell: _ref => {\n          let {\n            row\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 32\n          }, this);\n        },\n        disableFilters: true\n      }, {\n        Header: 'Pricing For',\n        accessor: 'FOR',\n        Cell: row => row.value.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'badge ' + getBadge(v),\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)),\n        accessorFilter: 'FOR',\n        filterType: 'multipleSelectPricingFor',\n        columnFilter: true,\n        filter: multiSelectFilterFor // disableFilters: true,\n\n      }, {\n        Header: 'Currency',\n        // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n        accessor: 'PRICE_CURRENCY',\n        accessorFilter: 'PRICE_CURRENCY',\n        filterType: 'multipleSelect',\n        columnFilter: true,\n        filter: multiSelectFilter // disableFilters: true,\n\n      }, {\n        id: 'PRICE_AMOUNT',\n        Header: 'Amount',\n        // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n        accessor: 'PRICE_AMOUNT',\n        accessorFilter: 'PRICE_AMOUNT',\n        filterType: 'sortOnly',\n        columnFilter: true // filter: multiSelectFilter,\n        // disableFilters: true,\n\n      }, {\n        Header: 'Added By',\n        accessor: 'CREATED_BY',\n        accessorFilter: 'CREATED_BY',\n        filterType: 'sortOnly',\n        columnFilter: true // disableFilters: true,\n\n      }, {\n        Header: 'UPDATED_DATETIME',\n        // accessor: d => moment(d.updatedDateTime).format('MM/DD/YYYY hh:mm a'),\n        accessor: 'UPDATED_DATETIME',\n        // disableFilters: true,\n        accessorFilter: 'UPDATED_DATETIME',\n        filterType: 'sortOnly',\n        columnFilter: true,\n        Cell: _ref2 => {\n          let {\n            value\n          } = _ref2;\n          return moment(new Date(value)).format('MM/DD/YYYY hh:mm a');\n        }\n      }, {\n        Header: 'Remarks',\n        accessor: 'REMARKS',\n        accessorFilter: 'REMARKS',\n        filterType: 'sortOnly',\n        columnFilter: true // disableFilters: true,\n\n      }, {\n        id: 'STATUS',\n        Header: 'Status',\n        accessor: 'STATUS',\n        accessorFilter: 'STATUS',\n        filterType: 'multipleSelect',\n        columnFilter: true,\n        filter: multiSelectFilter,\n        Cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'badge ' + getBadge(row.value),\n          children: row.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 26\n        }, this) // disableFilters: true,\n\n      }, {\n        Header: 'Action',\n        accessor: 'action',\n        Cell: _ref3 => {\n          let {\n            row\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-target\": \"#exampleModal\",\n              className: \"btn btn-link\",\n              \"data-toggle\": \"modal\",\n              \"data-original-title\": \"Edit\",\n              onClick: () => onClickAction('edit', row.index),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"ti-marker-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this);\n        },\n        disableFilters: true\n      }]\n    }];\n  } else {\n    columns = [{\n      Header: 'Pricing List',\n      columns: [{\n        Header: 'No.',\n        Cell: _ref4 => {\n          let {\n            row\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 32\n          }, this);\n        },\n        disableFilters: true\n      }, {\n        Header: 'Pricing For',\n        accessor: 'FOR',\n        Cell: row => row.value.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'badge ' + getBadge(v),\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this)),\n        accessorFilter: 'FOR',\n        filterType: 'multipleSelectPricingFor',\n        columnFilter: true,\n        filter: multiSelectFilterFor // disableFilters: true,\n\n      }, {\n        Header: 'Currency',\n        // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n        accessor: 'PRICE_CURRENCY',\n        accessorFilter: 'PRICE_CURRENCY',\n        filterType: 'multipleSelect',\n        columnFilter: true,\n        filter: multiSelectFilter // disableFilters: true,\n\n      }, {\n        id: 'PRICE_AMOUNT',\n        Header: 'Amount',\n        // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n        accessor: 'PRICE_AMOUNT',\n        accessorFilter: 'PRICE_AMOUNT',\n        filterType: 'sortOnly',\n        columnFilter: true // filter: multiSelectFilter,\n        // disableFilters: true,\n\n      }, {\n        Header: 'Added By',\n        accessor: 'CREATED_BY',\n        accessorFilter: 'CREATED_BY',\n        filterType: 'sortOnly',\n        columnFilter: true // disableFilters: true,\n\n      }, {\n        Header: 'UPDATED_DATETIME',\n        // accessor: d => moment(d.updatedDateTime).format('MM/DD/YYYY hh:mm a'),\n        accessor: 'UPDATED_DATETIME',\n        // disableFilters: true,\n        accessorFilter: 'UPDATED_DATETIME',\n        filterType: 'sortOnly',\n        columnFilter: true,\n        Cell: _ref5 => {\n          let {\n            value\n          } = _ref5;\n          return moment(new Date(value)).format('MM/DD/YYYY hh:mm a');\n        }\n      }, {\n        Header: 'Remarks',\n        accessor: 'REMARKS',\n        accessorFilter: 'REMARKS',\n        filterType: 'sortOnly',\n        columnFilter: true // disableFilters: true,\n\n      }, {\n        id: 'STATUS',\n        Header: 'Status',\n        accessor: 'STATUS',\n        accessorFilter: 'STATUS',\n        filterType: 'multipleSelect',\n        columnFilter: true,\n        filter: multiSelectFilter,\n        Cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'badge ' + getBadge(row.value),\n          children: row.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 26\n        }, this) // disableFilters: true,\n\n      }]\n    }];\n  }\n\n  function multiSelectFilter(rows, columnIds, filterValue) {\n    return filterValue.length === 0 ? rows : rows.filter(row => filterValue.includes(String(row.original[columnIds])));\n  }\n\n  function multiSelectFilterFor(rows, columnIds, filterValue) {\n    return filterValue.length === 0 ? rows : rows.filter(row => {\n      let contains = false;\n      filterValue.forEach(item => {\n        if (row.values.FOR.includes(item)) {\n          contains = true;\n        }\n      });\n      return contains;\n    });\n  }\n\n  const getBadge = key => {\n    switch (key) {\n      case 'active':\n        return 'badge-success';\n\n      case 'inactive':\n        return 'badge-secondary';\n\n      default:\n        return 'badge-primary';\n    }\n  };\n\n  const onClickAction = (action, index) => {\n    document.getElementById('updateForm').reset();\n    setModalAction(action);\n\n    if (action === 'edit' || action === 'delete') {\n      setSelectedPricing({ ...pricing[index]\n      });\n    } else {\n      setSelectedPricing({ ...initialValue\n      });\n    }\n  };\n\n  const onClose = reload => {\n    document.getElementById('updateForm').reset();\n    document.getElementById('modal-close').click();\n    setSelectedPricing({ ...initialValue\n    });\n    setErrorUpdate(false);\n    setModalAction('');\n\n    if (reload) {\n      loadData();\n    }\n  };\n\n  const validateMain = async values => {\n    if (_.isEqual(values, selectedPricing)) {\n      return {\n        message: 'No Changes'\n      };\n    }\n\n    return validate(values);\n  };\n\n  const handleSubmit = async values => {\n    const action = values.ID ? 'update' : 'save';\n\n    const isAmountExist = () => {\n      for (let i = 0; i < pricing.length; i++) {\n        if (pricing[i].PRICE_AMOUNT === values.PRICE_AMOUNT && pricing[i].PRICE_CURRENCY === values.PRICE_CURRENCY && _.isEqual(pricing[i].FOR, values.FOR)) return true;\n      }\n\n      return false;\n    };\n\n    if (isAmountExist() === false) {\n      try {\n        await (action === 'update' ? updatePricing(values) : savePricing(values));\n        toast.success(`Pricing has been successfully ${action}d.`);\n        loadData();\n        onClose(true);\n      } catch (error) {\n        toast.error(`Failed to ${action} pricing.`);\n        throw Error(error);\n      }\n    } else {\n      toast.error(`Failed to ${action} pricing. Amount entered already exist for ${values.PRICE_CURRENCY} currency`);\n    }\n  };\n\n  const handleDeletePricing = async () => {\n    try {\n      await removePricing(selectedPricing.ID);\n      toast.success('Pricing has been successfully deleted.');\n      loadData();\n    } catch (error) {\n      toast.error('Failed to delete pricing.');\n    } finally {\n      onClose(true);\n    }\n  }; // const handleFilter = (column, value)=>{\n  //   setFilterColumn(column);\n  //   setFilterValue(value);\n  //   if(column === 'STATUS') setFilterValue([value])\n  //   if(column === 'PRICE_CURRENCY') setFilterCurrency(value)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-aside bg-light-part col\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-style-none\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"box-label\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"admin-table-total\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Total Price List\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: pricing.length\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 409,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"divider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(Export, {\n                      source: 'pricing',\n                      dataSource: pricing\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"divider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"right-aside col-9\",\n                children: [permissions.Pricing === \"readwrite\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"button-fab\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-info\",\n                    \"data-target\": \"#exampleModal\",\n                    \"data-toggle\": \"modal\",\n                    onClick: () => onClickAction('add'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this) : '', /*#__PURE__*/_jsxDEV(Table, {\n                  loading: loading,\n                  error: errorTable,\n                  columns: columns,\n                  data: pricing,\n                  title: 'Pricing' // filterColumn={filterColumn}\n                  // filterValue={filterValue}\n                  ,\n                  onReload: loadData // sortAmount={sortAmount}\n                  ,\n                  toggleSortFilter: toggleSortFilter,\n                  setToggleSortFilter: setToggleSortFilter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade\",\n        id: \"exampleModal\",\n        tabIndex: -1,\n        \"aria-labelledby\": \"exampleModalLabel\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog modal-m\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                id: \"exampleModalLabel\",\n                children: modalAction === 'edit' ? 'Manage Pricing' : 'Add Pricing'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), !!errorUpdate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-warning text-center text m-t-20\",\n              style: {\n                fontSize: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-times float-right\",\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => setErrorUpdate(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-weight-bold\",\n                style: {\n                  fontSize: 12\n                },\n                children: \"Something went wrong.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this), \"Please try again later.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                validate: validateMain,\n                initialValues: selectedPricing,\n                onSubmit: handleSubmit,\n                render: _ref6 => {\n                  let {\n                    handleSubmit,\n                    submitting,\n                    hasValidationErrors,\n                    form: {\n                      reset\n                    }\n                  } = _ref6;\n                  return /*#__PURE__*/_jsxDEV(StyledForm, {\n                    onSubmit: handleSubmit,\n                    id: \"updateForm\",\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(SelectControl, {\n                      options: [{\n                        label: 'USD',\n                        value: 'USD'\n                      }, {\n                        label: 'PHP',\n                        value: 'PHP'\n                      }],\n                      name: \"PRICE_CURRENCY\",\n                      label: 'Currency'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n                      label: 'Amount',\n                      name: 'PRICE_AMOUNT',\n                      required: true,\n                      type: 'number',\n                      format: value => {\n                        try {\n                          const val = parseFloat(value).toFixed(2);\n                          return val;\n                        } catch (error) {\n                          return 0;\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        label: 'This Price is for:'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 585,\n                        columnNumber: 25\n                      }, this), PRICING_FOR_TYPES.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(Field, {\n                          name: \"FOR\",\n                          type: \"checkbox\",\n                          value: value,\n                          component: \"input\",\n                          id: value\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 588,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: value,\n                          children: {\n                            'live-class': 'Live Class',\n                            'scheduled-class': 'Scheduled Class'\n                          }[value]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 595,\n                          columnNumber: 29\n                        }, this)]\n                      }, value, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 27\n                      }, this)), /*#__PURE__*/_jsxDEV(Error, {\n                        name: \"FOR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 606,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 23\n                    }, this), !!(selectedPricing !== null && selectedPricing !== void 0 && selectedPricing.ID) && /*#__PURE__*/_jsxDEV(Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(SelectControl, {\n                        options: [{\n                          label: 'Active',\n                          value: 'active'\n                        }, {\n                          label: 'Inactive',\n                          value: 'inactive'\n                        }],\n                        name: \"STATUS\",\n                        label: 'Status'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n                        label: 'Remarks',\n                        name: 'REMARKS'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"modal-footer\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        id: \"modal-close\",\n                        type: \"button\",\n                        className: \"btn btn-secondary\",\n                        onClick: reset,\n                        \"data-dismiss\": \"modal\",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 622,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        style: {\n                          cursor: submitting && 'not-allowed'\n                        },\n                        className: \"btn btn-primary\",\n                        disabled: hasValidationErrors,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            display: submitting ? 'inline-block' : 'none'\n                          },\n                          class: \"spinner-border spinner-border-sm btn-load\",\n                          role: \"status\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 637,\n                          columnNumber: 27\n                        }, this), \"Submit\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"s\",\n        show: modalAction === 'delete',\n        onHide: () => setModalAction(''),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Delete Pricing?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Are you sure you want to delete this pricing?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            type: \"button\",\n            onClick: () => setModalAction(''),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            type: \"submit\",\n            onClick: handleDeletePricing,\n            disabled: submitLoading === true,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: submitLoading ? 'inline-block' : 'none'\n              },\n              class: \"spinner-border spinner-border-sm btn-load\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), \"Continue\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pricing, \"nxysWFfuZgtWN8L92ImR3775TF0=\", false, function () {\n  return [useDispatch, useValidationSchema, useSelector, useSelector, useSelector];\n});\n\n_c2 = Pricing;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"Pricing\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Pricing/index.jsx"],"names":["React","Fragment","Table","Export","useState","useDispatch","useSelector","getAllPricing","savePricing","updatePricing","removePricing","Button","Modal","toast","moment","_","Field","Form","Error","InputControl","InputLabel","SelectControl","PRICING_FOR_TYPES","styled","useValidationSchema","schema","StyledForm","form","initialValue","FOR","PRICE_CURRENCY","PRICE_AMOUNT","STATUS","REMARKS","Pricing","dispatch","toggleSortFilter","setToggleSortFilter","errorUpdate","setErrorUpdate","errorTable","setErrorTable","modalAction","setModalAction","submitLoading","selectedPricing","setSelectedPricing","validate","pricing","state","getIn","loading","uiElements","loadData","status","data","useEffect","permissions","admin","columns","Header","Cell","row","index","disableFilters","accessor","value","map","v","getBadge","accessorFilter","filterType","columnFilter","filter","multiSelectFilterFor","multiSelectFilter","id","Date","format","display","onClickAction","rows","columnIds","filterValue","length","includes","String","original","contains","forEach","item","values","key","action","document","getElementById","reset","onClose","reload","click","validateMain","isEqual","message","handleSubmit","ID","isAmountExist","i","success","error","handleDeletePricing","fontSize","cursor","submitting","hasValidationErrors","label","val","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Table from 'components/Admin/contents/Table';\nimport Export from '../Export';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPricing, savePricing, updatePricing, removePricing } from 'api/pricing';\nimport { Button, Modal } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport _ from \"lodash\";\nimport { Field, Form } from 'react-final-form';\nimport {\n  Error,\n  InputControl,\n  InputLabel,\n  SelectControl\n} from 'components/common/Form/Inputs';\nimport { PRICING_FOR_TYPES } from 'utils/constants';\nimport styled from 'styled-components';\nimport useValidationSchema from 'hooks/use-validation-schema';\nimport schema from 'validators/pricing';\n\nconst StyledForm = styled.form`\n  display: grid;\n  padding: 1rem;\n  gap: 2rem;\n  select {\n    width: 100%;\n  }\n  color: black;\n  #error-msg {\n    font-size: 13px !important;\n  }\n`;\nconst initialValue = {\n  FOR: [],\n  PRICE_CURRENCY: 'USD',\n  PRICE_AMOUNT: null,\n  STATUS: 'active',\n  REMARKS: '',\n};\n\nexport default function Pricing() {\n  const dispatch = useDispatch();\n  // const [filterValue, setFilterValue] = useState('');\n  // const [filterStatus, setFilterStatus] = useState('');\n  // const [filterCurrency, setFilterCurrency] = useState('');\n  // const [filterColumn, setFilterColumn] = useState('STATUS');\n  // const [sortAmount, setSortAmount] = useState('none');\n  const [toggleSortFilter, setToggleSortFilter] = useState({\n    STATUS: false, PRICE_CURRENCY: false\n  });\n  const [errorUpdate, setErrorUpdate] = useState(false);\n  const [errorTable, setErrorTable] = useState(false);\n  const [modalAction, setModalAction] = useState('');\n  const [submitLoading] = useState(false);\n  const [selectedPricing, setSelectedPricing] = useState(initialValue);\n  const validate = useValidationSchema(schema);\n  const pricing = useSelector(state =>\n    state.pricing ? state.pricing.getIn(['data', 'pricing']) : []\n  );\n  \n  const loading = useSelector(state => state.uiElements.getIn(['loadingScreen']));\n\n  const loadData = () => {\n    setErrorTable(false);\n\n    getAllPricing(\n      dispatch,\n      (status, data) => {\n        if (!status) {\n          setErrorTable(true);\n        }\n      },\n    );\n  };\n\n  React.useEffect(() => {\n    loadData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const permissions = useSelector(state =>\n    state.admin.permissions ? state.admin.permissions : {}\n  );\n  let columns = [];\n  if (permissions.Pricing === \"readwrite\") {\n    columns = [\n      {\n        Header: 'Pricing List',\n        columns: [\n          {\n            Header: 'No.',\n            Cell: ({ row }) => <div>{row.index + 1}</div>,\n            disableFilters: true,\n          },\n          {\n            Header: 'Pricing For',\n            accessor: 'FOR',\n            Cell: row =>\n              row.value.map(v => (\n                <div>\n                  <div className={'badge ' + getBadge(v)}>{v}</div>\n                </div>\n              )),\n            accessorFilter: 'FOR',\n            filterType: 'multipleSelectPricingFor',\n            columnFilter: true,\n            filter: multiSelectFilterFor,\n              // disableFilters: true,\n          },\n          {\n            Header: 'Currency',\n            // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n            accessor: 'PRICE_CURRENCY',\n            accessorFilter: 'PRICE_CURRENCY',\n            filterType: 'multipleSelect',\n            columnFilter: true,\n            filter: multiSelectFilter,\n            // disableFilters: true,\n          },\n          {\n            id: 'PRICE_AMOUNT',\n            Header: 'Amount',\n            // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n            accessor: 'PRICE_AMOUNT',\n            accessorFilter: 'PRICE_AMOUNT',\n            filterType: 'sortOnly',\n            columnFilter: true,\n            // filter: multiSelectFilter,\n            // disableFilters: true,\n          },\n          {\n            Header: 'Added By',\n            accessor: 'CREATED_BY',\n            accessorFilter: 'CREATED_BY',\n            filterType: 'sortOnly',\n            columnFilter: true,\n            // disableFilters: true,\n          },\n          {\n            Header: 'UPDATED_DATETIME',\n            // accessor: d => moment(d.updatedDateTime).format('MM/DD/YYYY hh:mm a'),\n            accessor: 'UPDATED_DATETIME',\n            // disableFilters: true,\n            accessorFilter: 'UPDATED_DATETIME',\n            filterType: 'sortOnly',\n            columnFilter: true,\n            Cell: ({value})=>{ return moment(new Date(value)).format('MM/DD/YYYY hh:mm a')}\n          },\n          {\n            Header: 'Remarks',\n            accessor: 'REMARKS',\n            accessorFilter: 'REMARKS',\n            filterType: 'sortOnly',\n            columnFilter: true\n            // disableFilters: true,\n          },\n          {\n            id: 'STATUS',\n            Header: 'Status',\n            accessor: 'STATUS',\n            accessorFilter: 'STATUS',\n            filterType: 'multipleSelect',\n            columnFilter: true,\n            filter: multiSelectFilter,\n            Cell: row => <div className={'badge ' + getBadge(row.value)}>{row.value}</div>,\n            // disableFilters: true,\n          },\n          {\n            Header: 'Action',\n            accessor: 'action',\n            Cell: ({ row }) => (\n              <div style={{ display: 'flex' }}>\n                <button\n                  data-target='#exampleModal'\n                  className='btn btn-link'\n                  data-toggle='modal'\n                  data-original-title='Edit'\n                  onClick={() => onClickAction('edit', row.index)}\n                >\n                  <i className='ti-marker-alt' />\n                </button>\n                {/* <button\n                  className='btn btn-link'\n                  onClick={() => onClickAction('delete', row.index)}\n                >\n                  <i className='fas fa-trash' style={{ color: 'red' }} />\n                </button> */}\n              </div>\n            ),\n            disableFilters: true,\n          }\n        ]\n      }\n    ];\n  } else {\n    columns = [\n      {\n        Header: 'Pricing List',\n        columns: [\n          {\n            Header: 'No.',\n            Cell: ({ row }) => <div>{row.index + 1}</div>,\n            disableFilters: true,\n          },\n          {\n            Header: 'Pricing For',\n            accessor: 'FOR',\n            Cell: row =>\n              row.value.map(v => (\n                <div>\n                  <div className={'badge ' + getBadge(v)}>{v}</div>\n                </div>\n              )),\n            accessorFilter: 'FOR',\n            filterType: 'multipleSelectPricingFor',\n            columnFilter: true,\n            filter: multiSelectFilterFor,\n              // disableFilters: true,\n          },\n          {\n            Header: 'Currency',\n            // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n            accessor: 'PRICE_CURRENCY',\n            accessorFilter: 'PRICE_CURRENCY',\n            filterType: 'multipleSelect',\n            columnFilter: true,\n            filter: multiSelectFilter,\n            // disableFilters: true,\n          },\n          {\n            id: 'PRICE_AMOUNT',\n            Header: 'Amount',\n            // accessor: d => `${d.PRICE_CURRENCY} ${d.PRICE_AMOUNT}`,\n            accessor: 'PRICE_AMOUNT',\n            accessorFilter: 'PRICE_AMOUNT',\n            filterType: 'sortOnly',\n            columnFilter: true,\n            // filter: multiSelectFilter,\n            // disableFilters: true,\n          },\n          {\n            Header: 'Added By',\n            accessor: 'CREATED_BY',\n            accessorFilter: 'CREATED_BY',\n            filterType: 'sortOnly',\n            columnFilter: true,\n            // disableFilters: true,\n          },\n          {\n            Header: 'UPDATED_DATETIME',\n            // accessor: d => moment(d.updatedDateTime).format('MM/DD/YYYY hh:mm a'),\n            accessor: 'UPDATED_DATETIME',\n            // disableFilters: true,\n            accessorFilter: 'UPDATED_DATETIME',\n            filterType: 'sortOnly',\n            columnFilter: true,\n            Cell: ({value})=>{ return moment(new Date(value)).format('MM/DD/YYYY hh:mm a')}\n          },\n          {\n            Header: 'Remarks',\n            accessor: 'REMARKS',\n            accessorFilter: 'REMARKS',\n            filterType: 'sortOnly',\n            columnFilter: true\n            // disableFilters: true,\n          },\n          {\n            id: 'STATUS',\n            Header: 'Status',\n            accessor: 'STATUS',\n            accessorFilter: 'STATUS',\n            filterType: 'multipleSelect',\n            columnFilter: true,\n            filter: multiSelectFilter,\n            Cell: row => <div className={'badge ' + getBadge(row.value)}>{row.value}</div>,\n            // disableFilters: true,\n          },\n        ]\n      }\n    ];\n  }\n  \n  function multiSelectFilter(rows, columnIds, filterValue) {\n    return filterValue.length === 0\n      ? rows\n      : rows.filter((row) =>\n          filterValue.includes(String(row.original[columnIds])),\n        );\n  }\n  function multiSelectFilterFor(rows, columnIds, filterValue) {\n    return filterValue.length === 0\n      ? rows\n      : rows.filter((row) =>\n          {\n            let contains = false;\n            filterValue.forEach(item=>{\n              if(row.values.FOR.includes(item)){\n                contains = true;\n              }\n            })\n            return contains;\n          }\n        );\n  }\n  const getBadge = key => {\n    switch (key) {\n      case 'active':\n        return 'badge-success';\n      case 'inactive':\n        return 'badge-secondary';\n      default:\n        return 'badge-primary';\n    }\n  };\n  const onClickAction = (action, index) => {\n    document.getElementById('updateForm').reset();\n    setModalAction(action);\n    if (action === 'edit' || action === 'delete') {\n      setSelectedPricing({\n        ...pricing[index]\n      });\n    } else {\n      setSelectedPricing({ ...initialValue });\n    }\n  };\n\n  const onClose = reload => {\n    document.getElementById('updateForm').reset();\n    document.getElementById('modal-close').click();\n\n    setSelectedPricing({ ...initialValue });\n    setErrorUpdate(false);\n    setModalAction('');\n\n    if (reload) {\n      loadData();\n    }\n  };\n  const validateMain = async (values)=>{\n    if(_.isEqual(values, selectedPricing)){\n      return {message: 'No Changes'}\n    }\n    return  validate(values);\n  }\n  const handleSubmit = async values => {\n    const action = values.ID ? 'update' : 'save';\n      const isAmountExist = ()=>{\n        for(let i = 0; i < pricing.length ; i++){\n          if((pricing[i].PRICE_AMOUNT === values.PRICE_AMOUNT) && \n          (pricing[i].PRICE_CURRENCY === values.PRICE_CURRENCY && \n            _.isEqual(pricing[i].FOR, values.FOR)))return true;\n        }\n        return false;\n      }\n      if(isAmountExist() === false){\n        try {\n          await (action === 'update' ? updatePricing(values) : savePricing(values));\n          toast.success(`Pricing has been successfully ${action}d.`);\n          loadData();\n          onClose(true);\n        } catch (error) {\n          toast.error(`Failed to ${action} pricing.`);\n          throw Error(error);\n        }\n      }else{\n        toast.error(`Failed to ${action} pricing. Amount entered already exist for ${values.PRICE_CURRENCY} currency`);\n      }\n  };\n\n  const handleDeletePricing = async () => {\n    try {\n      await removePricing(selectedPricing.ID);\n      toast.success('Pricing has been successfully deleted.');\n      loadData();\n    } catch (error) {\n      toast.error('Failed to delete pricing.');\n    } finally {\n      onClose(true);\n    }\n  };\n\n  // const handleFilter = (column, value)=>{\n  //   setFilterColumn(column);\n  //   setFilterValue(value);\n  //   if(column === 'STATUS') setFilterValue([value])\n  //   if(column === 'PRICE_CURRENCY') setFilterCurrency(value)\n  // }\n\n  return (\n    <Fragment>\n      <div>\n        <div className='row'>\n          <div className='col-12'>\n            <div className='card'>\n              {/* <!-- .left-right-aside-column--> */}\n              <div className='row'>\n                {/* <!-- .left-aside-column--> */}\n                <div className='left-aside bg-light-part col'>\n                  <ul className='list-style-none'>\n                    <li className='box-label'>\n                      {/* <a href='#!'>\n                        Total Price List <span>{pricing.length}</span>\n                      </a> */}\n                      <div className=\"admin-table-total\">\n                        <h5>\n                            Total Price List \n                        </h5>\n                        <span>{pricing.length}</span>\n                      </div>\n                    </li>\n                    <li className='divider' />\n                    <li>\n                      <Export source={'pricing'} dataSource={pricing} />\n                    </li>\n                    <li className='divider' />\n                    {/* <li>\n                      <b>Filter</b>\n                    </li> */}\n\n                    {/* <li>\n                      <div className='col'>\n                        <label className='row'>Status</label>\n                        <select\n                          value={filterValue}\n                          onChange={e => setFilterValue(e.target.value)}\n                          className='form-control row'\n                        >\n                          <option value=''>All</option>\n                          <option value='active'>Active</option>\n                          <option value='inactive'>Inactive</option>\n                        </select>\n                      </div>\n                    </li> */}\n                    {/* <li>\n                        <div className=\"form-inline align-self-end\">\n                            <label className=\"pr-2\">Status</label>\n                            <select value={filterStatus} onChange={(e) => handleFilter('STATUS', e.target.value)} className=\"form-control w-auto\">\n                                <option value=\"\">All</option>\n                                <option value=\"active\">Active</option>\n                                <option value=\"inactive\">Inactive</option>\n                            </select>\n                        </div>\n                    </li>\n                    <li style={{marginTop: '10px'}}>\n                        <div className=\"form-inline align-self-end\">\n                            <label className=\"pr-2\">Currency</label>\n                            <select value={filterCurrency} onChange={(e) => handleFilter('PRICE_CURRENCY', e.target.value)} className=\"form-control w-auto\">\n                                <option value=\"\">All</option>\n                                <option value=\"USD\">USD</option>\n                                <option value=\"PHP\">PHP</option>\n                            </select>\n                        </div>\n                    </li>\n                    <li className='divider' />\n                    <li>\n                      <b>Sort</b>\n                    </li>\n                    <li>\n                        <div className=\"form-inline align-self-end\">\n                            <label className=\"pr-2\">Amount</label>\n                            <select value={sortAmount} onChange={(e) => setSortAmount(e.target.value)} className=\"form-control w-auto\">\n                                <option value=\"none\">None</option>\n                                <option value=\"asc\">Low to High</option>\n                                <option value=\"desc\">High to Low</option>\n                            </select>\n                        </div>\n                    </li>\n                    <li className='divider' /> */}\n                  </ul>\n                </div>\n                {/* <!-- /.left-aside-column--> */}\n                <div className='right-aside col-9'>\n                  {\n                    permissions.Pricing === \"readwrite\" ?\n                    <div className='button-fab'>\n                    <button\n                      type='button'\n                      className='btn btn-info'\n                      data-target='#exampleModal'\n                      data-toggle='modal'\n                      onClick={() => onClickAction('add')}\n                    >\n                      <i className='fas fa-plus' />\n                    </button>\n                    </div> : ''\n                  }\n                  \n                  <Table\n                    loading={loading}\n                    error={errorTable}\n                    columns={columns}\n                    data={pricing}\n                    title={'Pricing'}\n                    // filterColumn={filterColumn}\n                    // filterValue={filterValue}\n                    onReload={loadData}\n                    // sortAmount={sortAmount}\n                    toggleSortFilter={toggleSortFilter}\n                    setToggleSortFilter={setToggleSortFilter}\n                  />\n                </div>\n                {/* <!-- /.left-right-aside-column--> */}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Modal */}\n        <div\n          className='modal fade'\n          id='exampleModal'\n          tabIndex={-1}\n          aria-labelledby='exampleModalLabel'\n          aria-hidden='true'\n        >\n          <div className='modal-dialog modal-m'>\n            <div className='modal-content'>\n              <div className='modal-header'>\n                <h5 className='modal-title' id='exampleModalLabel'>\n                  {modalAction === 'edit' ? 'Manage Pricing' : 'Add Pricing'}\n                </h5>\n                <button\n                  type='button'\n                  className='close'\n                  data-dismiss='modal'\n                  aria-label='Close'\n                >\n                  <span aria-hidden='true'>×</span>\n                </button>\n              </div>\n              {!!errorUpdate && (\n                <div\n                  className='alert alert-warning text-center text m-t-20'\n                  style={{ fontSize: 10 }}\n                >\n                  <i\n                    class='fas fa-times float-right'\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => setErrorUpdate(false)}\n                  />\n                  <span className='font-weight-bold' style={{ fontSize: 12 }}>\n                    Something went wrong.\n                  </span>\n                  <br />\n                  Please try again later.\n                </div>\n              )}\n              <div className='modal-body'>\n                {/* <button class=\"btn btn-primary\" type=\"submit\">Submit form</button> */}\n                <Form\n                  validate={validateMain}\n                  initialValues={selectedPricing}\n                  onSubmit={handleSubmit}\n                  render={({\n                    handleSubmit,\n                    submitting,\n                    hasValidationErrors,\n                    form: { reset }\n                  }) => (\n                    <StyledForm onSubmit={handleSubmit} id='updateForm' className='row'>\n                      <SelectControl\n                        options={[\n                          { label: 'USD', value: 'USD' },\n                          { label: 'PHP', value: 'PHP' }\n                        ]}\n                        name='PRICE_CURRENCY'\n                        label={'Currency'}\n                      />\n                      <InputControl\n                        label={'Amount'}\n                        name={'PRICE_AMOUNT'}\n                        required\n                        type={'number'}\n                        format={value => {\n                          try {\n                            const val = parseFloat(value).toFixed(2);\n                            return val;\n                          } catch (error) {\n                            return 0;\n                          }\n                        }}\n                      />\n                      <div>\n                        <InputLabel label={'This Price is for:'} />\n                        {PRICING_FOR_TYPES.map(value => (\n                          <div key={value}>\n                            <Field\n                              name='FOR'\n                              type='checkbox'\n                              value={value}\n                              component='input'\n                              id={value}\n                            />\n                            <label htmlFor={value}>\n                              {\n                                {\n                                  'live-class': 'Live Class',\n                                  'scheduled-class': 'Scheduled Class'\n                                }[value]\n                              } \n                            </label>\n                          </div>\n                        ))}\n\n                        <Error name='FOR' />\n                      </div>\n                      {!!selectedPricing?.ID && (\n                        <Fragment>\n                          <SelectControl\n                            options={[\n                              { label: 'Active', value: 'active' },\n                              { label: 'Inactive', value: 'inactive' }\n                            ]}\n                            name='STATUS'\n                            label={'Status'}\n                          />\n                          <InputControl label={'Remarks'} name={'REMARKS'} />\n                        </Fragment>\n                      )}\n                      <div className='modal-footer'>\n                        <button\n                          id='modal-close'\n                          type='button'\n                          className='btn btn-secondary'\n                          onClick={reset}\n                          data-dismiss='modal'\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type='submit'\n                          style={{ cursor: submitting && 'not-allowed' }}\n                          className='btn btn-primary'\n                          disabled={hasValidationErrors}\n                        >\n                          <span\n                            style={{ display: submitting ? 'inline-block' : 'none' }}\n                            class='spinner-border spinner-border-sm btn-load'\n                            role='status'\n                            aria-hidden='true'\n                          />\n                          Submit\n                        </button>\n                      </div>\n                    </StyledForm>\n                  )}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal size='s' show={modalAction === 'delete'} onHide={() => setModalAction('')}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Pricing?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h5>Are you sure you want to delete this pricing?</h5>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='link' type='button' onClick={() => setModalAction('')}>\n              Cancel\n            </Button>\n            <Button\n              variant='info'\n              type='submit'\n              onClick={handleDeletePricing}\n              disabled={submitLoading === true}\n            >\n              <span\n                style={{ display: submitLoading ? 'inline-block' : 'none' }}\n                class='spinner-border spinner-border-sm btn-load'\n                role='status'\n                aria-hidden='true'\n              />\n              Continue\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}