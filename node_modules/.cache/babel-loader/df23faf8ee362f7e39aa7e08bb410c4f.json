{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Surveillance/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport Table from \"components/Admin/contents/Table\";\nimport dayjs from \"dayjs\";\nimport './index.css';\nimport { getSurveillanceData } from \"api/admin\";\nimport { toast } from 'react-toastify';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport default function Configurations() {\n  _s();\n\n  var _selectedClass$VIDEO_;\n\n  const dispatch = useDispatch(); // const toastLoading = React.useRef(null);\n  // toastLoading.current = toast('ðŸ¦„ Wow so easy!', {\n  //     position: \"top-right\",\n  //     autoClose: 5000,\n  //     hideProgressBar: false,\n  //     closeOnClick: true,\n  //     pauseOnHover: true,\n  //     draggable: true,\n  //     progress: undefined,\n  //     });\n\n  const now = new Date();\n  const [selectedDate, setSelectedDate] = useState({\n    month: now.getMonth(),\n    date: now.getDate(),\n    year: now.getFullYear()\n  });\n  const calendarRef = useRef(null);\n  const [errorData, setErrorData] = useState({\n    surveillance: false,\n    constants: false\n  });\n  const [hideFilter, setHideFilter] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"Completed\");\n  const [clickedEvent, setClickedEvent] = useState({\n    isSelected: false,\n    date: null,\n    classes: []\n  });\n  const [surveillance, setSurveillance] = useState([]);\n  const [totalClasses, setTotalClasses] = useState({\n    completed: 0,\n    ongoing: 0\n  });\n  const [selectedClass, setSelectedClass] = useState({}); // const loading = useSelector((state) => state.uiElements.getIn(['loadingScreen']));\n\n  const [toggleSortFilter, setToggleSortFilter] = useState({});\n  const columns = [{\n    Header: \"asds\",\n    id: 'surveillanceTable',\n    columns: [// {n    //     id: \"checkbox\",\n    //     accessor: \"\",\n    //     Cell: ({ row }) => {\n    //         return (\n    //             <div>\n    //                 <div className=\"checkbox checkbox-info\">\n    //                     <input type=\"checkbox\" id={`check-${row.index}`} name = {`check-${row.index}`}/>\n    //                     <label htmlFor={`check-${row.index}`}></label>\n    //                 </div>\n    //             </div>\n    //         );\n    //     },\n    //     Header: x => {\n    //         return (\n    //             <div>\n    //                 <div className=\"checkbox checkbox-info\">\n    //                     <input type=\"checkbox\" id=\"all\"/>\n    //                     <label className=\"mb-0\" htmlFor=\"all\"></label>\n    //                 </div>\n    //             </div>\n    //         );\n    //     },\n    //     sortable: false,\n    //     width: 45\n    // },\n    {\n      Header: 'No.',\n      accessor: 'status',\n      Cell: _ref => {\n        let {\n          row\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: row.index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this);\n      }\n    }, {\n      Header: 'Title',\n      accessorFilter: 'Title',\n      filterType: 'sortOnly',\n      columnFilter: true,\n      accessor: d => `${d.TITLE} ${d.SESSION ? `- Session ${d.SESSION}` : ''}`\n    }, {\n      Header: 'Time',\n      accessorFilter: 'Time',\n      filterType: 'sortOnly',\n      columnFilter: true,\n      accessor: d => d.CLASS_TYPE === 'CLT002' ? `${dayjs(d.TBL_LMS_CLASS_SCHEDULED.START_TIME, \"HH:mm:ss\").format('hh:mm A')} - ${dayjs(d.TBL_LMS_CLASS_SCHEDULED.END_TIME, \"HH:mm:ss\").format('hh:mm A')}` : ''\n    }, {\n      Header: 'Teacher',\n      accessorFilter: 'Teacher',\n      filterType: 'sortOnly',\n      columnFilter: true,\n      accessor: d => `${d.TEACHER.LAST_NAME}, ${d.TEACHER.FIRST_NAME}`\n    }, {\n      Header: 'No. of Learners',\n      accessorFilter: 'No_of_Learners',\n      filterType: 'sortOnly',\n      columnFilter: true,\n      accessor: d => d.TBL_LMS_CLASS_ENROLLMENTs ? d.TBL_LMS_CLASS_ENROLLMENTs.length : ''\n    }, {\n      Header: 'Action',\n      accessor: 'action',\n      Cell: _ref2 => {\n        var _clickedEvent$classes;\n\n        let {\n          row\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-toggle\": \"tooltip\",\n            title: !clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link ? 'No Recordings Found' : 'Download Recording',\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: `btn btn-link ${!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link ? 'disabled' : ''}`,\n              role: \"button\",\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              href: (_clickedEvent$classes = clickedEvent.classes[row.index].VIDEO_RECORDING) === null || _clickedEvent$classes === void 0 ? void 0 : _clickedEvent$classes.link,\n              \"aria-disabled\": (!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link).toString(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-toggle\": \"tooltip\",\n            title: !clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link ? 'No Recordings Found' : 'View Recording',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-target\": \"#surveillanceModal\",\n              className: \"btn btn-link\",\n              \"data-toggle\": \"modal\",\n              \"data-original-title\": \"View\",\n              onClick: () => handleClickView(row.index),\n              disabled: !clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-eye\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this);\n      }\n    }]\n  }];\n\n  const loadData = async argDate => {\n    let total = 0;\n    setErrorData({\n      surveillance: false\n    });\n    await toast.promise(getSurveillanceData(dispatch, {\n      month: parseInt(argDate.month) + 1,\n      year: argDate.year,\n      classStatus: 'CSTAT011'\n    }, (status, data) => {\n      if (status) {\n        const survData = data.data.map(item => {\n          // { title: \"1 class\", start: \"YYYY-MM-DD\", allDay: true }\n          total = total + item.classes.length;\n          const event = {\n            title: `${item.classes.length} ${item.classes.length > 1 ? 'sessions' : 'session'}`,\n            start: item.date,\n            allDay: true,\n            color: \"#dc3545\",\n            borderColor: '#117bff',\n            backgroundColor: '#117bff',\n            classes: item.classes\n          };\n          return event;\n        });\n        setSurveillance(survData);\n        setTotalClasses(prevState => ({ ...prevState,\n          completed: total\n        }));\n      } else {\n        setErrorData({\n          surveillance: true\n        });\n      }\n    }), {\n      success: 'Classes successfully loaded.',\n      pending: 'Please wait while classes are loading...',\n      error: 'Error loading classes. Please try again.'\n    }, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 900\n    });\n  };\n\n  const customDisplay = _ref3 => {\n    let {\n      event,\n      el\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      placement: \"right\",\n      delay: {\n        show: 50,\n        hide: 200\n      },\n      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 22\n      }, this),\n      style: {\n        cursor: 'pointer'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"2px 0\",\n          overflow: \"hidden\",\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexGrow: \"1\",\n            flexShrink: \"1\",\n            minWidth: \"0\",\n            overflow: \"hidden\",\n            fontWeight: \"bold\",\n            paddingLeft: \"10px\"\n          },\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }, this);\n  };\n\n  const goToDate = event => {\n    const objDate = { ...selectedDate\n    };\n\n    if (event) {\n      const name = event.target.name;\n      objDate[name] = event.target.value;\n      setSelectedDate(prevState => ({ ...prevState,\n        [name]: event.target.value\n      }));\n      loadData(objDate);\n    }\n\n    const calendarApi = calendarRef.current.getApi();\n    const strDate = `${objDate.year}-${parseInt(objDate.month) + 1}-${objDate.date}`;\n    const dte = new Date(strDate);\n    calendarApi.gotoDate(dte);\n  };\n\n  const handleEventClick = info => {\n    const event = info.event;\n    const eventDate = dayjs(event.start).format('YYYY-MM-DD');\n    const {\n      classes\n    } = surveillance.find(item => item.start === eventDate);\n    setClickedEvent({\n      isSelected: true,\n      date: dayjs(event.start).format('MMM DD, YYYY'),\n      classes\n    });\n  };\n\n  const handleClickNav = () => {\n    setClickedEvent({\n      isSelected: false,\n      date: null,\n      classes: []\n    });\n    setTimeout(() => {\n      goToDate();\n    }, 300);\n  };\n\n  const handleClickView = index => {\n    setSelectedClass(clickedEvent.classes[index]);\n  };\n\n  const onClose = () => {\n    setSelectedClass({});\n  };\n\n  React.useEffect(() => {\n    loadData(selectedDate); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"surveillance-module\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-aside bg-light-part col\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `row ${!hideFilter ? 'justify-content-end' : 'justify-content-center'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-link\",\n                    \"data-toggle\": \"tooltip\",\n                    title: `${!hideFilter ? 'Minimize Filter Section' : 'Expand Filter Section'}`,\n                    onClick: () => setHideFilter(!hideFilter),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas ${!hideFilter ? 'fa-minus-square' : 'fa-expand-alt'}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this), !hideFilter && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-style-none\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"box-label\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      \"data-toggle\": \"tab\",\n                      href: \"#ongoing-classes\",\n                      style: {\n                        pointerEvents: 'none'\n                      },\n                      children: [\"Total Ongoing Classes \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: totalClasses.ongoing\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 71\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"divider m-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"box-label\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      \"data-toggle\": \"tab\",\n                      href: \"#completed-classes\",\n                      style: {\n                        pointerEvents: 'none'\n                      },\n                      children: [\"Total Completed Classes \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: totalClasses.completed\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 73\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `right-aside ${!hideFilter ? 'col-9' : 'col-11'} surveillance`,\n                children: [!clickedEvent.isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"nav nav-pills nav-fill\",\n                    role: \"tablist\",\n                    id: \"surveillance-nav-pills\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"nav-item m-1\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"nav-link btn btn-info btn-outline-info p-1 disabled\",\n                        id: \"ongoing-tab\",\n                        \"data-toggle\": \"tab\",\n                        href: \"#ongoing-classes\",\n                        role: \"tab\",\n                        onClick: () => setActiveTab('Ongoing'),\n                        \"aria-controls\": \"ongoing-classes\",\n                        \"aria-selected\": \"false\",\n                        children: \"Ongoing Classes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"nav-item m-1\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"nav-link btn btn-outline-info active p-1\",\n                        id: \"completed-tab\",\n                        \"data-toggle\": \"tab\",\n                        href: \"#completed-classes\",\n                        role: \"tab\",\n                        onClick: () => setActiveTab('Completed'),\n                        \"aria-controls\": \"completed-classes\",\n                        \"aria-selected\": \"true\",\n                        children: \"Completed Classes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tab-content mt-3\",\n                    id: \"myTabContent\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tab-pane fade\",\n                      id: \"ongoing-classes\",\n                      role: \"tabpanel\",\n                      \"aria-labelledby\": \"ongoing-tab\",\n                      children: \"Ongoing\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tab-pane fade show active\",\n                      id: \"completed-classes\",\n                      role: \"tabpanel\",\n                      \"aria-labelledby\": \"completed-tab\",\n                      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n                        height: 700,\n                        aspectRatio: 1.95,\n                        plugins: [dayGridPlugin, interactionPlugin],\n                        customButtons: {\n                          monthSelect: {\n                            text: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"form-group\",\n                              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                                title: \"Select Month\",\n                                className: \"custom-select\",\n                                name: \"month\",\n                                defaultValue: selectedDate.month,\n                                onChange: e => goToDate(e),\n                                children: months.map((monthName, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: idx,\n                                  disabled: idx < now.getMonth() - 2 || idx > now.getMonth(),\n                                  children: `${monthName} ${selectedDate.year}`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 331,\n                                  columnNumber: 106\n                                }, this))\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 330,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 329,\n                              columnNumber: 63\n                            }, this),\n                            click: function (e) {// const calendarAPI = calendarRef.current.getApi();\n                              // console.log('monthSelect',calendarAPI.getDate());\n                            }\n                          } // yearSelect:  {\n                          //     text: <div className=\"form-group\">\n                          //         <select className=\"custom-select\" name=\"year\" defaultValue={selectedDate.year} onChange={(e) => goToDate(e)}>\n                          //             {(function (rows, i, len) {\n                          //                 while (++i <= len) {\n                          //                     rows.push(<option value={i}>{i}</option>)\n                          //                 }\n                          //                 return rows;\n                          //             })([], 2018, ((new Date()).getFullYear()+10))}\n                          //         </select>\n                          //     </div>,\n                          //     click: function (e) {}\n                          // }\n\n                        },\n                        headerToolbar: {\n                          right: '',\n                          center: 'monthSelect',\n                          left: ''\n                        },\n                        events: surveillance,\n                        ref: calendarRef,\n                        initialView: \"dayGridMonth\",\n                        themeSystem: 'bootstrap',\n                        nowIndicator: true // dateClick={handleEventAdd}\n                        ,\n                        eventClick: e => handleEventClick(e),\n                        eventContent: customDisplay // validRange={} \n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 66\n                }, this), clickedEvent.isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                      className: \"breadcrumb\",\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"breadcrumb-item\",\n                        role: \"button\",\n                        onClick: handleClickNav,\n                        children: [activeTab, \" Class\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"breadcrumb-item active\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: clickedEvent.date\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 88\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 376,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Table, {\n                    loading: false,\n                    error: errorData.constants,\n                    columns: columns,\n                    data: clickedEvent.classes,\n                    title: \"\",\n                    toggleSortFilter: toggleSortFilter,\n                    setToggleSortFilter: setToggleSortFilter // title={<button className=\"btn btn-info\">Download</button>}\n                    ,\n                    onReload: loadData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"surveillanceModal\",\n        tabIndex: -1,\n        \"aria-labelledby\": \"surveillanceModal\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog modal-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                id: \"surveillanceModalLabel\",\n                children: [selectedClass.TITLE, selectedClass.SESSION && /*#__PURE__*/_jsxDEV(\"small\", {\n                  style: {\n                    display: 'block'\n                  },\n                  children: [\"Session \", selectedClass.SESSION]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                onClick: () => onClose(),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                url: (_selectedClass$VIDEO_ = selectedClass.VIDEO_RECORDING) === null || _selectedClass$VIDEO_ === void 0 ? void 0 : _selectedClass$VIDEO_.link,\n                controls: true,\n                width: '100%',\n                height: '100%'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Configurations, \"00e05APqZaMParbP+V3vZ01UN40=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Configurations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Configurations\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Surveillance/index.jsx"],"names":["React","Fragment","useState","useRef","useDispatch","FullCalendar","dayGridPlugin","interactionPlugin","OverlayTrigger","Tooltip","Table","dayjs","getSurveillanceData","toast","ReactPlayer","months","Configurations","dispatch","now","Date","selectedDate","setSelectedDate","month","getMonth","date","getDate","year","getFullYear","calendarRef","errorData","setErrorData","surveillance","constants","hideFilter","setHideFilter","activeTab","setActiveTab","clickedEvent","setClickedEvent","isSelected","classes","setSurveillance","totalClasses","setTotalClasses","completed","ongoing","selectedClass","setSelectedClass","toggleSortFilter","setToggleSortFilter","columns","Header","id","accessor","Cell","row","index","accessorFilter","filterType","columnFilter","d","TITLE","SESSION","CLASS_TYPE","TBL_LMS_CLASS_SCHEDULED","START_TIME","format","END_TIME","TEACHER","LAST_NAME","FIRST_NAME","TBL_LMS_CLASS_ENROLLMENTs","length","display","VIDEO_RECORDING","link","toString","handleClickView","loadData","argDate","total","promise","parseInt","classStatus","status","data","survData","map","item","event","title","start","allDay","color","borderColor","backgroundColor","prevState","success","pending","error","position","POSITION","TOP_RIGHT","autoClose","customDisplay","el","show","hide","cursor","alignItems","padding","overflow","flexGrow","flexShrink","minWidth","fontWeight","paddingLeft","goToDate","objDate","name","target","value","calendarApi","current","getApi","strDate","dte","gotoDate","handleEventClick","info","eventDate","find","handleClickNav","setTimeout","onClose","useEffect","pointerEvents","monthSelect","text","e","monthName","idx","click","right","center","left"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FullCalendar  from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from '@fullcalendar/interaction';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport Table from \"components/Admin/contents/Table\";\nimport dayjs from \"dayjs\";\nimport './index.css';\nimport { getSurveillanceData } from \"api/admin\";\nimport { toast } from 'react-toastify';\nimport ReactPlayer from 'react-player';\n\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nexport default function Configurations() {\n    const dispatch = useDispatch();\n    // const toastLoading = React.useRef(null);\n    // toastLoading.current = toast('ðŸ¦„ Wow so easy!', {\n    //     position: \"top-right\",\n    //     autoClose: 5000,\n    //     hideProgressBar: false,\n    //     closeOnClick: true,\n    //     pauseOnHover: true,\n    //     draggable: true,\n    //     progress: undefined,\n    //     });\n    const now = new Date();\n    const [selectedDate, setSelectedDate]=useState({\n        month: now.getMonth(),\n        date: now.getDate(),\n        year: now.getFullYear()\n    });\n    const calendarRef = useRef(null);\n\n    const [errorData, setErrorData] = useState({surveillance: false, constants: false});\n    const [hideFilter, setHideFilter] = useState(false);\n    const [activeTab, setActiveTab] = useState(\"Completed\");\n    const [clickedEvent, setClickedEvent] = useState({isSelected: false, date: null, classes: []});\n    const [surveillance, setSurveillance] = useState([]);\n    const [totalClasses, setTotalClasses] = useState({completed: 0, ongoing: 0});\n    const [selectedClass, setSelectedClass] = useState({});\n\n    // const loading = useSelector((state) => state.uiElements.getIn(['loadingScreen']));\n    const [toggleSortFilter, setToggleSortFilter] = useState({});\n    const columns = [{\n        Header: \"asds\",\n        id: 'surveillanceTable',\n        columns: [\n            // {n            //     id: \"checkbox\",\n            //     accessor: \"\",\n            //     Cell: ({ row }) => {\n            //         return (\n            //             <div>\n            //                 <div className=\"checkbox checkbox-info\">\n            //                     <input type=\"checkbox\" id={`check-${row.index}`} name = {`check-${row.index}`}/>\n            //                     <label htmlFor={`check-${row.index}`}></label>\n            //                 </div>\n            //             </div>\n            //         );\n            //     },\n            //     Header: x => {\n            //         return (\n            //             <div>\n            //                 <div className=\"checkbox checkbox-info\">\n            //                     <input type=\"checkbox\" id=\"all\"/>\n            //                     <label className=\"mb-0\" htmlFor=\"all\"></label>\n            //                 </div>\n            //             </div>\n            //         );\n            //     },\n            //     sortable: false,\n            //     width: 45\n              \n            // },\n            {\n                Header: 'No.', accessor: 'status',\n                Cell: ({ row }) => (\n                    <div>{row.index + 1}</div>\n                ),\n            },\n            {\n                Header: 'Title',\n                accessorFilter: 'Title',\n                filterType: 'sortOnly',\n                columnFilter: true,\n                accessor: d => `${d.TITLE} ${d.SESSION ? `- Session ${d.SESSION }`: ''}`,\n            },\n            {\n                Header: 'Time',\n                accessorFilter: 'Time',\n                filterType: 'sortOnly',\n                columnFilter: true,\n                accessor: d => d.CLASS_TYPE==='CLT002' ? `${dayjs(d.TBL_LMS_CLASS_SCHEDULED.START_TIME, \"HH:mm:ss\").format('hh:mm A')} - ${dayjs(d.TBL_LMS_CLASS_SCHEDULED.END_TIME, \"HH:mm:ss\").format('hh:mm A')}` : '',\n            },\n            {\n                Header: 'Teacher',\n                accessorFilter: 'Teacher',\n                filterType: 'sortOnly',\n                columnFilter: true,\n                accessor: d => `${d.TEACHER.LAST_NAME}, ${d.TEACHER.FIRST_NAME}`,\n            },\n            {\n                Header: 'No. of Learners',\n                accessorFilter: 'No_of_Learners',\n                filterType: 'sortOnly',\n                columnFilter: true,\n                accessor: d => d.TBL_LMS_CLASS_ENROLLMENTs ? d.TBL_LMS_CLASS_ENROLLMENTs.length : '',\n            },\n            {\n                Header: 'Action',\n                accessor: 'action',\n\n                Cell: ({ row }) => (\n                    <div style={{ display: 'flex' }}>\n                        <div data-toggle=\"tooltip\" title={(!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link) ? 'No Recordings Found' : 'Download Recording'}>\n                            <a\n                                className={`btn btn-link ${(!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link) ? 'disabled' : ''}`}\n                                role=\"button\"\n                                target=\"_blank\"\n                                rel='noreferrer'   \n                                href={clickedEvent.classes[row.index].VIDEO_RECORDING?.link}      \n                                aria-disabled={(!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link).toString()}\n                            >\n                                <i className=\"fas fa-download\"></i>\n                            </a>\n                        </div>\n                        <div data-toggle=\"tooltip\" title={(!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link) ? 'No Recordings Found' : 'View Recording'}>\n                            <button\n                                data-target=\"#surveillanceModal\"\n                                className=\"btn btn-link\"\n                                data-toggle=\"modal\"\n                                data-original-title=\"View\"\n                                onClick={() => handleClickView(row.index)}\n                                disabled={!clickedEvent.classes[row.index].VIDEO_RECORDING || !clickedEvent.classes[row.index].VIDEO_RECORDING.link}\n                            >\n                                <i className=\"fas fa-eye\"></i>\n                            </button>\n                        </div>\n                    </div>\n                ),\n            },\n        ],\n    }];\n\n    const loadData = async (argDate) => {\n        let total = 0;\n        setErrorData({surveillance: false});\n        await toast.promise(\n            getSurveillanceData(dispatch, {month: parseInt(argDate.month)+1, year: argDate.year, classStatus: 'CSTAT011'}, (status, data) => {\n                if(status){\n                    const survData = data.data.map((item) => {\n                        // { title: \"1 class\", start: \"YYYY-MM-DD\", allDay: true }\n                        total = total + item.classes.length;\n                        const event = {\n                            title: `${item.classes.length} ${item.classes.length > 1 ? 'sessions' : 'session'}`,\n                            start: item.date,\n                            allDay: true,\n                            color: \"#dc3545\",\n                            borderColor: '#117bff',\n                            backgroundColor: '#117bff',\n                            classes: item.classes\n                        }\n    \n                        return event;\n                    });\n                    setSurveillance(survData);\n                    setTotalClasses(prevState => ({...prevState, completed: total}));\n                }else{\n                    setErrorData({surveillance: true});\n                }\n    \n            }),\n            {\n              success: 'Classes successfully loaded.',\n              pending: 'Please wait while classes are loading...',\n              error: 'Error loading classes. Please try again.'\n            },\n            { position: toast.POSITION.TOP_RIGHT, autoClose: 900 }\n        );\n        \n    }\n\n    const customDisplay = ({ event, el }) => {\n        return (\n          <OverlayTrigger\n            placement=\"right\"\n            delay={{ show: 50, hide: 200 }}\n            overlay={<Tooltip>{event.title}</Tooltip>}\n            style={{cursor: 'pointer'}}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                padding: \"2px 0\",\n                overflow: \"hidden\",\n                cursor: 'pointer'\n              }}\n            >\n             \n              <div\n                style={{\n                  flexGrow: \"1\",\n                  flexShrink: \"1\",\n                  minWidth: \"0\",\n                  overflow: \"hidden\",\n                  fontWeight: \"bold\",\n                  paddingLeft: \"10px\"\n                }}\n              >\n                {event.title}\n              </div>\n            </div>\n          </OverlayTrigger>\n        );\n    };\n\n    const goToDate = (event) => {\n        const objDate = { ...selectedDate };\n        if(event){\n            const name = event.target.name;\n            objDate[name] = event.target.value;\n            setSelectedDate(prevState => ({\n                ...prevState,\n                [name]:event.target.value\n            }));\n\n            loadData(objDate);\n        }\n        \n        const calendarApi = calendarRef.current.getApi();\n        const strDate = `${objDate.year}-${parseInt(objDate.month)+1}-${objDate.date}`\n        const dte = new Date(strDate);\n        calendarApi.gotoDate(dte);\n    }\n\n    const handleEventClick = (info) => {\n        const event = info.event;\n        const eventDate = dayjs(event.start).format('YYYY-MM-DD');\n        const { classes } = surveillance.find((item) => item.start === eventDate);\n        setClickedEvent({isSelected: true, date: dayjs(event.start).format('MMM DD, YYYY'), classes});\n    }\n\n    const handleClickNav = () => {\n        setClickedEvent({isSelected: false, date: null, classes: []});\n        setTimeout(() => {\n            goToDate();\n        }, 300);\n    }\n\n    const handleClickView = (index) => {\n        setSelectedClass(clickedEvent.classes[index]);\n    }\n\n    const onClose = () => {\n        setSelectedClass({});\n    }\n\n    React.useEffect(() => {\n        loadData(selectedDate);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Fragment>\n            <div id=\"surveillance-module\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/* <!-- .left-right-aside-column--> */}\n                            <div className=\"row\">\n                                {/* <!-- /.left-aside-column--> */}\n                                <div className=\"left-aside bg-light-part col\">\n                                    <div className={`row ${!hideFilter ? 'justify-content-end' : 'justify-content-center'}`}>\n                                        <button className=\"btn btn-link\" data-toggle=\"tooltip\" title={`${!hideFilter ? 'Minimize Filter Section' : 'Expand Filter Section'}`} onClick={() => setHideFilter(!hideFilter)}>\n                                            <i className={`fas ${!hideFilter ? 'fa-minus-square' : 'fa-expand-alt'}`}></i>\n                                        </button>\n                                    </div>\n                                    {!hideFilter && <ul className=\"list-style-none\">\n                                        <li className=\"box-label\">\n                                            <a data-toggle=\"tab\" href=\"#ongoing-classes\" style={{pointerEvents:'none'}}>\n                                                Total Ongoing Classes <span>{totalClasses.ongoing}</span>\n                                            </a>\n                                        </li>\n\n                                        <li className=\"divider m-0\"></li>\n\n                                        <li className=\"box-label\">\n                                            <a data-toggle=\"tab\" href=\"#completed-classes\" style={{pointerEvents:'none'}}>\n                                                Total Completed Classes <span>{totalClasses.completed}</span>\n                                            </a>\n                                        </li>\n                                        \n                                    </ul>}\n                                </div>\n                                <div className={`right-aside ${!hideFilter ? 'col-9' : 'col-11'} surveillance`}>\n                                    {/* <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\">\n                                        Single toggle\n                                    </button> */}\n                                    {!clickedEvent.isSelected && <div>\n                                        <ul className=\"nav nav-pills nav-fill\" role=\"tablist\" id=\"surveillance-nav-pills\">\n                                            <li className=\"nav-item m-1\" >\n                                                <a className=\"nav-link btn btn-info btn-outline-info p-1 disabled\"\n                                                    id=\"ongoing-tab\" data-toggle=\"tab\" href=\"#ongoing-classes\" role=\"tab\" \n                                                    onClick={() => setActiveTab('Ongoing')}\n                                                    aria-controls=\"ongoing-classes\" aria-selected=\"false\">Ongoing Classes \n                                                </a>\n                                            </li>\n                                            <li className=\"nav-item m-1\">\n                                                <a className=\"nav-link btn btn-outline-info active p-1\"\n                                                    id=\"completed-tab\" data-toggle=\"tab\" href=\"#completed-classes\" role=\"tab\" \n                                                    onClick={() => setActiveTab('Completed')}\n                                                    aria-controls=\"completed-classes\" aria-selected=\"true\">Completed Classes</a>\n                                            </li>\n                                        </ul>\n                                        <div className=\"tab-content mt-3\" id=\"myTabContent\">\n                                            <div className=\"tab-pane fade\" id=\"ongoing-classes\" role=\"tabpanel\" aria-labelledby=\"ongoing-tab\">\n                                                Ongoing\n                                            </div>\n                                            <div className=\"tab-pane fade show active\" id=\"completed-classes\" role=\"tabpanel\" aria-labelledby=\"completed-tab\">\n                                                <FullCalendar\n                                                    height={700}\n                                                    aspectRatio={1.95}\n                                                    plugins={[dayGridPlugin, interactionPlugin]}\n                                                    customButtons={{\n                                                        monthSelect: {\n                                                        text: <div className=\"form-group\">\n                                                                    <select title=\"Select Month\" className=\"custom-select\" name=\"month\" defaultValue={selectedDate.month} onChange={(e) => goToDate(e)}>\n                                                                        {months.map((monthName, idx) => (<option value={idx} disabled={idx<now.getMonth()-2 || idx>now.getMonth()}>{`${monthName} ${selectedDate.year}`}</option>))}\n                                                                        {/* {months.map((monthName, idx) => (<option value={idx}>{`${monthName} ${selectedDate.year}`}</option>))} */}\n                                                                    </select>\n                                                                </div>,\n                                                        click: function (e) {\n                                                            // const calendarAPI = calendarRef.current.getApi();\n                                                            // console.log('monthSelect',calendarAPI.getDate());\n                                                        }\n                                                        },\n                                                        // yearSelect:  {\n                                                        //     text: <div className=\"form-group\">\n                                                        //         <select className=\"custom-select\" name=\"year\" defaultValue={selectedDate.year} onChange={(e) => goToDate(e)}>\n                                                        //             {(function (rows, i, len) {\n                                                        //                 while (++i <= len) {\n                                                        //                     rows.push(<option value={i}>{i}</option>)\n                                                        //                 }\n                                                        //                 return rows;\n                                                        //             })([], 2018, ((new Date()).getFullYear()+10))}\n                                                        //         </select>\n                                                        //     </div>,\n                                                        //     click: function (e) {}\n                                                        // }\n                                                    }}\n                                                    headerToolbar={{\n                                                        right: '',\n                                                        center: 'monthSelect',\n                                                        left: ''\n                                                    }}\n                                                    events={surveillance}\n                                                    ref={calendarRef}\n                                                    initialView=\"dayGridMonth\"\n                                                    themeSystem={'bootstrap'}\n                                                    nowIndicator={true}\n                                                    // dateClick={handleEventAdd}\n                                                    eventClick={(e) => handleEventClick(e)}\n                                                    eventContent={customDisplay}\n                                                    // validRange={} \n                                                    />\n                                            </div>\n                                        </div>\n                                    </div>}\n                                    {clickedEvent.isSelected && <div>\n                                        <div className=\"mb-4\">\n                                            <ol className=\"breadcrumb\">\n                                                <li className=\"breadcrumb-item\" role=\"button\" onClick={handleClickNav}>{activeTab} Class</li>\n                                                <li className=\"breadcrumb-item active\"><span>{clickedEvent.date}</span></li>\n                                            </ol>\n                                        </div>\n                                        <Table \n                                            loading={false} \n                                            error={errorData.constants} \n                                            columns={columns} \n                                            data={clickedEvent.classes} \n                                            title={\"\"}\n                                            toggleSortFilter={toggleSortFilter}\n                                            setToggleSortFilter={setToggleSortFilter}\n                                            // title={<button className=\"btn btn-info\">Download</button>}\n                                            onReload={loadData}\n                                            />\n                                    </div>}\n                                </div>\n                                    \n                                {/* <!-- /.left-right-aside-column--> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                { /* MODAL */}\n                <div\n                className=\"modal\"\n                id=\"surveillanceModal\"\n                tabIndex={-1}\n                aria-labelledby=\"surveillanceModal\"\n                aria-hidden=\"true\"\n                >\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"surveillanceModalLabel\">\n                                    {selectedClass.TITLE}\n                                    {selectedClass.SESSION && <small style={{display:'block'}}>Session {selectedClass.SESSION}</small>}\n                                </h5>\n                                <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={() => onClose()}\n                                >\n                                <span aria-hidden=\"true\">Ã—</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <ReactPlayer\n                                    url={selectedClass.VIDEO_RECORDING?.link} \n                                    controls width={'100%'} height={'100%'} />     \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}