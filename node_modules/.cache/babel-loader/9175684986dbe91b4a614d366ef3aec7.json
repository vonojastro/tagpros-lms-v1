{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useFreshTick } from \"./useFreshTick\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nimport { warning } from \"./warning\";\n/**\n *  useGlobalObjectEventListener hook\n *\n *  A react hook to an event listener to a global object\n *\n * @param {Window|Document} globalObject The global object to add event onto\n * @param {string} eventName The event to track\n * @param {Function} callback The callback to be called on event\n * @param {ListenerOptions} listenerOptions The options to be passed to the event listener\n * @param {boolean} when Should the event listener be active\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n * @returns {undefined}\n */\n\nfunction useGlobalObjectEventListener(globalObject, eventName, callback, listenerOptions, when, isLayoutEffect) {\n  if (listenerOptions === void 0) {\n    listenerOptions = {};\n  }\n\n  if (when === void 0) {\n    when = true;\n  }\n\n  if (isLayoutEffect === void 0) {\n    isLayoutEffect = false;\n  }\n\n  var freshCallback = useFreshTick(callback);\n  var useEffectToRun = isLayoutEffect ? useIsomorphicEffect : useEffect;\n  useEffectToRun(function () {\n    warning(typeof globalObject !== \"undefined\", \"[useGlobalObjectEventListener]: Cannot attach event handlers to undefined.\");\n\n    if (typeof globalObject !== \"undefined\" && when) {\n      globalObject.addEventListener(eventName, freshCallback, listenerOptions);\n      return function () {\n        globalObject.removeEventListener(eventName, freshCallback, listenerOptions);\n      };\n    }\n\n    return function () {};\n  }, [eventName, listenerOptions]);\n}\n\nexport { useGlobalObjectEventListener };","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/node_modules/rooks/dist/esm/hooks/useGlobalObjectEventListener.js"],"names":["useEffect","useFreshTick","useIsomorphicEffect","warning","useGlobalObjectEventListener","globalObject","eventName","callback","listenerOptions","when","isLayoutEffect","freshCallback","useEffectToRun","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,4BAAT,CAAsCC,YAAtC,EAAoDC,SAApD,EAA+DC,QAA/D,EAAyEC,eAAzE,EAA0FC,IAA1F,EAAgGC,cAAhG,EAAgH;AAC5G,MAAIF,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAAEA,IAAAA,eAAe,GAAG,EAAlB;AAAuB;;AACzD,MAAIC,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,IAAAA,IAAI,GAAG,IAAP;AAAc;;AACrC,MAAIC,cAAc,KAAK,KAAK,CAA5B,EAA+B;AAAEA,IAAAA,cAAc,GAAG,KAAjB;AAAyB;;AAC1D,MAAIC,aAAa,GAAGV,YAAY,CAACM,QAAD,CAAhC;AACA,MAAIK,cAAc,GAAGF,cAAc,GAAGR,mBAAH,GAAyBF,SAA5D;AACAY,EAAAA,cAAc,CAAC,YAAY;AACvBT,IAAAA,OAAO,CAAC,OAAOE,YAAP,KAAwB,WAAzB,EAAsC,4EAAtC,CAAP;;AACA,QAAI,OAAOA,YAAP,KAAwB,WAAxB,IAAuCI,IAA3C,EAAiD;AAC7CJ,MAAAA,YAAY,CAACQ,gBAAb,CAA8BP,SAA9B,EAAyCK,aAAzC,EAAwDH,eAAxD;AACA,aAAO,YAAY;AACfH,QAAAA,YAAY,CAACS,mBAAb,CAAiCR,SAAjC,EAA4CK,aAA5C,EAA2DH,eAA3D;AACH,OAFD;AAGH;;AACD,WAAO,YAAY,CAAG,CAAtB;AACH,GATa,EASX,CAACF,SAAD,EAAYE,eAAZ,CATW,CAAd;AAUH;;AACD,SAASJ,4BAAT","sourcesContent":["import { useEffect } from \"react\";\nimport { useFreshTick } from \"./useFreshTick\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nimport { warning } from \"./warning\";\n/**\n *  useGlobalObjectEventListener hook\n *\n *  A react hook to an event listener to a global object\n *\n * @param {Window|Document} globalObject The global object to add event onto\n * @param {string} eventName The event to track\n * @param {Function} callback The callback to be called on event\n * @param {ListenerOptions} listenerOptions The options to be passed to the event listener\n * @param {boolean} when Should the event listener be active\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n * @returns {undefined}\n */\nfunction useGlobalObjectEventListener(globalObject, eventName, callback, listenerOptions, when, isLayoutEffect) {\n    if (listenerOptions === void 0) { listenerOptions = {}; }\n    if (when === void 0) { when = true; }\n    if (isLayoutEffect === void 0) { isLayoutEffect = false; }\n    var freshCallback = useFreshTick(callback);\n    var useEffectToRun = isLayoutEffect ? useIsomorphicEffect : useEffect;\n    useEffectToRun(function () {\n        warning(typeof globalObject !== \"undefined\", \"[useGlobalObjectEventListener]: Cannot attach event handlers to undefined.\");\n        if (typeof globalObject !== \"undefined\" && when) {\n            globalObject.addEventListener(eventName, freshCallback, listenerOptions);\n            return function () {\n                globalObject.removeEventListener(eventName, freshCallback, listenerOptions);\n            };\n        }\n        return function () { };\n    }, [eventName, listenerOptions]);\n}\nexport { useGlobalObjectEventListener };\n"]},"metadata":{},"sourceType":"module"}