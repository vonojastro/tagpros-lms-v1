{"ast":null,"code":"/*\nCopyright (c) Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n/**\n * For aria and other attributes like htmlFor, we often need\n * to attach identifiers to elements. Making `id` a required\n * prop in our components shifts this burden to our customers\n * but it's nice to try to automatically provide these unique\n * ids when possible.\n *\n * Generating unique IDs that match across server/client renders\n * is a hard problem that doesn't have any perfect solutions\n * currently [1] [2]. UUIDs/Math.random will never match, whereas\n * auto-incrementing IDs may work if server and client render\n * exactly the same DOM, so that's what we'll use here. If this\n * is insufficient for users they can apply ids manually.\n *\n * One other technique that we can use internally is to do a\n * setState in componentDidMount or something similar, so that\n * these ids are only used client-side, but this could of course\n * have perf implications.\n *\n * [1] https://github.com/facebook/react/issues/5867\n * [2] https://github.com/reactjs/rfcs/pull/32/files\n */\nvar id = 0;\nexport default function getBuiId() {\n  return \"bui-\".concat(++id);\n}","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/node_modules/baseui/esm/utils/get-bui-id.js"],"names":["id","getBuiId","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,EAAE,GAAG,CAAT;AACA,eAAe,SAASC,QAAT,GAAoB;AACjC,SAAO,OAAOC,MAAP,CAAc,EAAEF,EAAhB,CAAP;AACD","sourcesContent":["/*\nCopyright (c) Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n/**\n * For aria and other attributes like htmlFor, we often need\n * to attach identifiers to elements. Making `id` a required\n * prop in our components shifts this burden to our customers\n * but it's nice to try to automatically provide these unique\n * ids when possible.\n *\n * Generating unique IDs that match across server/client renders\n * is a hard problem that doesn't have any perfect solutions\n * currently [1] [2]. UUIDs/Math.random will never match, whereas\n * auto-incrementing IDs may work if server and client render\n * exactly the same DOM, so that's what we'll use here. If this\n * is insufficient for users they can apply ids manually.\n *\n * One other technique that we can use internally is to do a\n * setState in componentDidMount or something similar, so that\n * these ids are only used client-side, but this could of course\n * have perf implications.\n *\n * [1] https://github.com/facebook/react/issues/5867\n * [2] https://github.com/reactjs/rfcs/pull/32/files\n */\nvar id = 0;\nexport default function getBuiId() {\n  return \"bui-\".concat(++id);\n}"]},"metadata":{},"sourceType":"module"}