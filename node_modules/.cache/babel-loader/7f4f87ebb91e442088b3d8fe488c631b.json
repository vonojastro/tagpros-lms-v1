{"ast":null,"code":"import { api } from \"../api\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nimport { getAllAdminAccountsSuccess, saveAdminDetailsSuccess, deleteAdminAccountSuccess, deactivateAdminAccountSuccess, activateAdminAccountSuccess, getAllAdminAccountsFail, saveAdminDetailsFail, deleteAdminAccountFail, deactivateAdminAccountFail, activateAdminAccountFail, validateTokenExpiredSuccess, validateTokenExpiredFail, saveAdminPasswordSuccess, saveAdminPasswordFail, resetPassLinkSuccess, resetPassLinkFail } from \"../redux/actions/admin\";\nimport { getModulePermissionsSuccess } from \"redux/actions/auth\";\nconst ADMIN_ENDPOINT = \"/admin\";\nexport const getAllAdminAccounts = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/getAllAdminAccounts\");\n    dispatch(getAllAdminAccountsSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(getAllAdminAccountsFail(error));\n    console.log(\"(getAllAdminAccounts) Status:\", error);\n    callback(false);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const saveAdminDetails = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/saveAdminDetails\", args);\n    dispatch(saveAdminDetailsSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(saveAdminDetailsFail(error));\n    console.log(\"(saveAdminDetails) Status:\", error);\n    callback(false, error);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const deleteAdminAccount = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/deleteAdminAccount\", args);\n    dispatch(deleteAdminAccountSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(deleteAdminAccountFail(error));\n    console.log(\"(deleteAdminAccount) Status:\", error);\n    callback(false);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const deactivateAdminAccount = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/deactivateAdminAccount\", args);\n    dispatch(deactivateAdminAccountSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(deactivateAdminAccountFail(error));\n    console.log(\"(deactivateAdminAccount) Status:\", error);\n    callback(false);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const activateAdminAccount = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/activateAdminAccount\", args);\n    dispatch(activateAdminAccountSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(activateAdminAccountFail(error));\n    console.log(\"(activateAdminAccount) Status:\", error);\n    callback(false);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const validateTokenExpired = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/validateTokenExpired\", args);\n    dispatch(validateTokenExpiredSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(validateTokenExpiredFail(error));\n    console.log(\"(validateTokenExpired) Status:\", error);\n    callback(false);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const saveAdminPassword = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const credentials = {\n      newPassword: args.newPassword,\n      confirmPassword: args.confirmPassword\n    };\n    const response = await api.post(ADMIN_ENDPOINT + \"/saveAdminPassword\", credentials, {\n      headers: {\n        Authorization: \"Bearer \" + args.token\n      }\n    });\n    dispatch(saveAdminPasswordSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(saveAdminPasswordFail(error));\n    console.log(\"(saveAdminPassword) Status:\", error);\n    callback(false, error);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const resetPassLink = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/resendPasswordChangeLink\", args);\n    dispatch(resetPassLinkSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(resetPassLinkFail(error));\n    console.log(\"(resetPassLink) Status:\", error);\n    callback(false);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getSurveillanceData = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/getSurveillanceCalendarData\", args);\n    callback(true, response.data);\n  } catch (error) {\n    console.log(\"(getSurveillanceData) Status:\", error);\n    callback(false);\n    dispatch(offLoadingScreen());\n    throw error;\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getAllModulePermission = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(ADMIN_ENDPOINT + \"/permissions\");\n    dispatch(getModulePermissionsSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    console.log(\"(getAllModulePermission) Status:\", error);\n    callback(false);\n    dispatch(offLoadingScreen());\n    throw error;\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const updateModulePermission = async (dispatch, args, callback) => {\n  try {\n    // dispatch(onLoadingScreen());\n    const response = await api.post(ADMIN_ENDPOINT + \"/permissions\", args);\n    callback(true, response.data);\n  } catch (error) {\n    console.log(\"(updateModulePermission) Status:\", error);\n    callback(false); // dispatch(offLoadingScreen());\n\n    throw error;\n  } finally {// dispatch(offLoadingScreen());\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/admin.js"],"names":["api","onLoadingScreen","offLoadingScreen","getAllAdminAccountsSuccess","saveAdminDetailsSuccess","deleteAdminAccountSuccess","deactivateAdminAccountSuccess","activateAdminAccountSuccess","getAllAdminAccountsFail","saveAdminDetailsFail","deleteAdminAccountFail","deactivateAdminAccountFail","activateAdminAccountFail","validateTokenExpiredSuccess","validateTokenExpiredFail","saveAdminPasswordSuccess","saveAdminPasswordFail","resetPassLinkSuccess","resetPassLinkFail","getModulePermissionsSuccess","ADMIN_ENDPOINT","getAllAdminAccounts","dispatch","callback","response","post","data","error","console","log","saveAdminDetails","args","deleteAdminAccount","deactivateAdminAccount","activateAdminAccount","validateTokenExpired","saveAdminPassword","credentials","newPassword","confirmPassword","headers","Authorization","token","resetPassLink","getSurveillanceData","getAllModulePermission","get","updateModulePermission"],"mappings":"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","sourcesContent":["import { api } from \"../api\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nimport {\n    getAllAdminAccountsSuccess,\n    saveAdminDetailsSuccess,\n    deleteAdminAccountSuccess,\n    deactivateAdminAccountSuccess,\n    activateAdminAccountSuccess,\n    getAllAdminAccountsFail,\n    saveAdminDetailsFail,\n    deleteAdminAccountFail,\n    deactivateAdminAccountFail,\n    activateAdminAccountFail,\n\tvalidateTokenExpiredSuccess,\n\tvalidateTokenExpiredFail,\n\tsaveAdminPasswordSuccess,\n\tsaveAdminPasswordFail,\n\tresetPassLinkSuccess,\n\tresetPassLinkFail\n} from \"../redux/actions/admin\";\nimport { getModulePermissionsSuccess } from \"redux/actions/auth\";\n\nconst ADMIN_ENDPOINT = \"/admin\";\n\n\nexport const getAllAdminAccounts = async (dispatch, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/getAllAdminAccounts\");\n\n\t\tdispatch(getAllAdminAccountsSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(getAllAdminAccountsFail(error));\n\t\tconsole.log(\"(getAllAdminAccounts) Status:\", error);\n\t\tcallback(false);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const saveAdminDetails = async (dispatch, args, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/saveAdminDetails\", args);\n\n\t\tdispatch(saveAdminDetailsSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(saveAdminDetailsFail(error));\n\n\t\tconsole.log(\"(saveAdminDetails) Status:\", error);\n\t\tcallback(false,error);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const deleteAdminAccount = async (dispatch, args, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/deleteAdminAccount\", args);\n\n\t\tdispatch(deleteAdminAccountSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(deleteAdminAccountFail(error));\n\n\t\tconsole.log(\"(deleteAdminAccount) Status:\", error);\n\t\tcallback(false);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const deactivateAdminAccount = async (dispatch, args, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/deactivateAdminAccount\", args);\n\n\t\tdispatch(deactivateAdminAccountSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(deactivateAdminAccountFail(error));\n\n\t\tconsole.log(\"(deactivateAdminAccount) Status:\", error);\n\t\tcallback(false);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const activateAdminAccount = async (dispatch, args, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/activateAdminAccount\", args);\n\n\t\tdispatch(activateAdminAccountSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(activateAdminAccountFail(error));\n\n\t\tconsole.log(\"(activateAdminAccount) Status:\", error);\n\t\tcallback(false);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const validateTokenExpired = async (dispatch, args, callback) =>{\n\ttry {\n        dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/validateTokenExpired\", args);\n\n\t\tdispatch(validateTokenExpiredSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(validateTokenExpiredFail(error));\n\n\t\tconsole.log(\"(validateTokenExpired) Status:\", error);\n\t\tcallback(false);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const saveAdminPassword = async (dispatch, args, callback) =>{\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst credentials = {newPassword: args.newPassword, confirmPassword: args.confirmPassword}\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/saveAdminPassword\", credentials, {\n\t\t\theaders: { Authorization: \"Bearer \" + args.token },\n\t\t  });\n\n\t\tdispatch(saveAdminPasswordSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(saveAdminPasswordFail(error));\n\t\tconsole.log(\"(saveAdminPassword) Status:\", error);\n\t\tcallback(false, error);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const resetPassLink = async (dispatch, args, callback) =>{\n\ttry {\n        dispatch(onLoadingScreen());\n\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/resendPasswordChangeLink\", args);\n\n\t\tdispatch(resetPassLinkSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(resetPassLinkFail(error));\n\n\t\tconsole.log(\"(resetPassLink) Status:\", error);\n\t\tcallback(false);\n\t}\n    finally{\n        dispatch(offLoadingScreen());\n    }\n};\n\nexport const getSurveillanceData = async (dispatch, args, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/getSurveillanceCalendarData\", args);\n\n\t\tcallback(true, response.data);\n\t} catch (error) {\n\t\tconsole.log(\"(getSurveillanceData) Status:\", error);\n\t\tcallback(false);\n        dispatch(offLoadingScreen());\n\t\tthrow error;\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getAllModulePermission = async (dispatch, callback) => {\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.get(ADMIN_ENDPOINT + \"/permissions\");\n\t\tdispatch(getModulePermissionsSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n\t\tconsole.log(\"(getAllModulePermission) Status:\", error);\n\t\tcallback(false);\n        dispatch(offLoadingScreen());\n\t\tthrow error;\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const updateModulePermission = async (dispatch, args, callback) => {\n\ttry {\n        // dispatch(onLoadingScreen());\n\t\tconst response = await api.post(ADMIN_ENDPOINT + \"/permissions\", args);\n\t\tcallback(true, response.data);\n\t} catch (error) {\n\t\tconsole.log(\"(updateModulePermission) Status:\", error);\n\t\tcallback(false);\n        // dispatch(offLoadingScreen());\n\t\tthrow error;\n\t} finally {\n\t\t// dispatch(offLoadingScreen());\n\t}\n};"]},"metadata":{},"sourceType":"module"}