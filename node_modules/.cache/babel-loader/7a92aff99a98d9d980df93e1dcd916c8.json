{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/MailView/Topbar/SearchInput/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport styled from 'styled-components';\nimport { getAllEmailThreadsByUser } from 'api/emailMessaging';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: grid;\n  grid: 1fr / auto-flow auto 1fr;\n  align-items: center;\n  gap: 0.2rem;\n`;\n_c = Wrapper;\nexport default function SearchInput(_ref) {\n  _s();\n\n  let {\n    left\n  } = _ref;\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    if (!items.length) getAllEmailThreadsByUser(undefined).then(setItems).catch(err => {\n      console.log(err);\n    });\n  }, [items.length]);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n      items: items,\n      resultStringKeyName: \"mailSubject\",\n      onSelect: _ref2 => {\n        let {\n          threadId\n        } = _ref2;\n        return navigate(`/mail/view/${threadId}`);\n      },\n      fuseOptions: {\n        keys: ['mailSubject', 'sender']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchInput, \"papWTAKSAwy/1ZE91WRBuhffg8w=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = SearchInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"SearchInput\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/MailView/Topbar/SearchInput/index.jsx"],"names":["React","useEffect","useState","ReactSearchAutocomplete","styled","getAllEmailThreadsByUser","useNavigate","Wrapper","div","SearchInput","left","items","setItems","length","undefined","then","catch","err","console","log","navigate","threadId","keys"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA;KAAMD,O;AAON,eAAe,SAASE,WAAT,OAA6B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,KAAK,CAACE,MAAX,EACER,wBAAwB,CAACS,SAAD,CAAxB,CACGC,IADH,CACQH,QADR,EAEGI,KAFH,CAESC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAJH;AAKH,GAPQ,EAON,CAACN,KAAK,CAACE,MAAP,CAPM,CAAT;AAQA,QAAMO,QAAQ,GAAGd,WAAW,EAA5B;AACA,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA,gBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,uBAAD;AACE,MAAA,KAAK,EAAEC,KADT;AAEE,MAAA,mBAAmB,EAAC,aAFtB;AAGE,MAAA,QAAQ,EAAE;AAAA,YAAC;AAAEU,UAAAA;AAAF,SAAD;AAAA,eAAkBD,QAAQ,CAAE,cAAaC,QAAS,EAAxB,CAA1B;AAAA,OAHZ;AAIE,MAAA,WAAW,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAC,aAAD,EAAgB,QAAhB;AAAR;AAJf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtBuBb,W;UAULH,W;;;MAVKG,W","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport styled from 'styled-components';\nimport { getAllEmailThreadsByUser } from 'api/emailMessaging';\nimport { useNavigate } from 'react-router';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid: 1fr / auto-flow auto 1fr;\n  align-items: center;\n  gap: 0.2rem;\n`;\n\nexport default function SearchInput({left}) {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    if (!items.length)\n      getAllEmailThreadsByUser(undefined)\n        .then(setItems)\n        .catch(err => {\n          console.log(err);\n        });\n  }, [items.length]);\n  const navigate = useNavigate();\n  return (\n    <Wrapper>\n      <div>{left}</div>\n      <ReactSearchAutocomplete\n        items={items}\n        resultStringKeyName='mailSubject'\n        onSelect={({ threadId }) => navigate(`/mail/view/${threadId}`)}\n        fuseOptions={{ keys: ['mailSubject', 'sender'] }}\n      />\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}