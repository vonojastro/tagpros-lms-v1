{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nexport const normalizedDayAvialability = value => {\n  if (!value) {\n    return [];\n  }\n\n  const normalizedDays = value.split(\",\").map(day => {\n    const capitalLetter = day[0].toUpperCase();\n    let label = `${capitalLetter}${day.slice(1, day.length)}`;\n    return {\n      value: day,\n      label\n    };\n  });\n  return normalizedDays;\n};\nexport const flattenDayAvailability = value => {\n  let defaultValue = '';\n\n  if (Array.isArray(value) && value.length) {\n    const normalizedDays = value.map(day => day.value).join(\",\");\n    defaultValue = normalizedDays;\n  }\n\n  return defaultValue;\n};\nexport default {\n  normalizedDayAvialability,\n  flattenDayAvailability\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/CreateClass/service.js"],"names":["normalizedDayAvialability","value","normalizedDays","split","map","day","capitalLetter","toUpperCase","label","slice","length","flattenDayAvailability","defaultValue","Array","isArray","join"],"mappings":"AAAA;AACA,OAAO,MAAMA,yBAAyB,GAAIC,KAAD,IAAW;AAEhD,MAAI,CAACA,KAAL,EAAY;AACR,WAAO,EAAP;AACH;;AAED,QAAMC,cAAc,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAsBC,GAAD,IAAS;AACjD,UAAMC,aAAa,GAAGD,GAAG,CAAC,CAAD,CAAH,CAAOE,WAAP,EAAtB;AACA,QAAIC,KAAK,GAAI,GAAEF,aAAc,GAAED,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaJ,GAAG,CAACK,MAAjB,CAAyB,EAAxD;AACA,WAAO;AAAET,MAAAA,KAAK,EAAEI,GAAT;AAAcG,MAAAA;AAAd,KAAP;AACH,GAJsB,CAAvB;AAMA,SAAON,cAAP;AACH,CAbM;AAeP,OAAO,MAAMS,sBAAsB,GAAIV,KAAD,IAAW;AAC7C,MAAIW,YAAY,GAAG,EAAnB;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcb,KAAd,KAAwBA,KAAK,CAACS,MAAlC,EAA0C;AACtC,UAAMR,cAAc,GAAGD,KAAK,CAACG,GAAN,CAAWC,GAAD,IAASA,GAAG,CAACJ,KAAvB,EAA8Bc,IAA9B,CAAmC,GAAnC,CAAvB;AACAH,IAAAA,YAAY,GAAGV,cAAf;AACH;;AAED,SAAOU,YAAP;AACH,CATM;AAWP,eAAe;AAAEZ,EAAAA,yBAAF;AAA6BW,EAAAA;AAA7B,CAAf","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nexport const normalizedDayAvialability = (value) => {\n\n    if (!value) {\n        return [];\n    }\n\n    const normalizedDays = value.split(\",\").map((day) => {\n        const capitalLetter = day[0].toUpperCase();\n        let label = `${capitalLetter}${day.slice(1, day.length)}`;\n        return { value: day, label };\n    });\n\n    return normalizedDays;\n}\n\nexport const flattenDayAvailability = (value) => {\n    let defaultValue = '';\n\n    if (Array.isArray(value) && value.length) {\n        const normalizedDays = value.map((day) => day.value).join(\",\");\n        defaultValue = normalizedDays;\n    }\n\n    return defaultValue\n}\n\nexport default { normalizedDayAvialability, flattenDayAvailability }\n"]},"metadata":{},"sourceType":"module"}