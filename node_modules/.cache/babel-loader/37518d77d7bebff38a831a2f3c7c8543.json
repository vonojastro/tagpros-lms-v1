{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/ResetPassword/ResetPassword.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Modal from '../common/Register/Modal';\nimport Input from '../common/Register/Input';\nimport Button from '../common/Register/Button';\nimport PageLoader from '../common/Register/PageLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet history = createBrowserHistory();\n\nclass ResetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      newPassword: '',\n      confirmPassword: '',\n      isProcessDone: false,\n      isModalOpen: false,\n      errorList: [{\n        newPassword: false\n      }, {\n        confirmPassword: false\n      }] // Add Input(name) fields\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    this.handleValidationList = this.handleValidationList.bind(this);\n    this.onCLickChangePassword = this.onCLickChangePassword.bind(this);\n  }\n\n  isFormValid() {\n    let {\n      errorList\n    } = this.state;\n    let isValid = true;\n    errorList.some(field => {\n      let errorListArray = Object.values(field);\n\n      if (errorListArray.includes(false)) {\n        isValid = false;\n        return true; // stop looping cb function\n      }\n\n      return false;\n    });\n    return isValid;\n  }\n\n  isPageLoaderShow() {\n    if (!this.props.loadingScreen) return false;\n    return true;\n  }\n\n  handleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  isModalShow() {\n    let {\n      isModalOpen\n    } = this.state;\n    let {\n      status,\n      message,\n      loadingScreen\n    } = this.props;\n    if (status === '' && message === '') return false;\n    if (loadingScreen) return false;\n    if (!isModalOpen) return false;\n    return true;\n  }\n\n  isModalSuccess() {\n    var {\n      status\n    } = this.props;\n    if (status === 'error') return false;\n    return true;\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleValidationList(args) {\n    let {\n      name,\n      isValid\n    } = args;\n    this.setState(prevState => ({\n      errorList: prevState.errorList.map(fieldObj => fieldObj.hasOwnProperty(name) ? { ...fieldObj,\n        [name]: isValid\n      } : fieldObj)\n    }));\n  }\n\n  onCLickChangePassword(event) {\n    event.preventDefault();\n    let {\n      token,\n      newPassword\n    } = this.state;\n    this.setState({\n      isProcessDone: true\n    }); //* Set submission done.\n\n    this.handleModal(); //* Open Modal.\n\n    this.props.changePasswordNoCB({\n      token,\n      source: 'forgot',\n      newPassword\n    });\n  }\n\n  redirectToLogin() {\n    if (this.state.isProcessDone && this.props.status === 'success' && !this.state.isModalOpen) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  setEmailAccount() {\n    const pathname = history.location.pathname.split('/');\n    const token = pathname.pop(); //* get token\n\n    this.setState({\n      token: token\n    });\n  }\n\n  renderPageLoad() {\n    return this.isPageLoaderShow() && /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 39\n    }, this);\n  }\n\n  renderModal() {\n    return this.isModalShow() && /*#__PURE__*/_jsxDEV(Modal, {\n      content: {\n        title: 'Password Changed!',\n        message: this.props.message\n      },\n      isSuccess: this.isModalSuccess(),\n      onClose: this.handleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this);\n  }\n\n  clearError() {\n    this.setState({\n      formError: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.renderPageLoad(), this.redirectToLogin(), this.renderModal(), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"wrapper\",\n        className: \"login-register login-sidebar\",\n        style: {\n          backgroundImage: 'url(./assets/images/loginbg01.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-box-left login-box card p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row w-100 h-100\",\n              style: {\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-xl-6 p-3\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"form-horizontal floating-labels\",\n                  id: \"loginform\",\n                  action: \"index.html\",\n                  _lpchecked: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#/\",\n                    className: \"text-center db\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"./assets/images/logo-icon.png\",\n                      alt: \"Home\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"./assets/images/logo-text.png\",\n                      alt: \"Home\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: 'password',\n                    placeholder: 'New Password',\n                    name: 'newPassword',\n                    autoComplete: false,\n                    required: false,\n                    topStyle: 'm-t-40',\n                    handleChange: this.handleChange,\n                    handleValidationList: this.handleValidationList\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: 'password',\n                    placeholder: 'Confirm Password',\n                    name: 'confirmPassword',\n                    autoComplete: false,\n                    required: false,\n                    handleChange: this.handleChange,\n                    password: this.state.newPassword,\n                    handleValidationList: this.handleValidationList\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClickSubmit: this.onCLickChangePassword,\n                    isFormValid: this.isFormValid(),\n                    children: \"Change Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-none d-xl-block col-xl-6\",\n                style: {\n                  backgroundImage: 'url(./assets/images/forgotpass01.png)',\n                  backgroundSize: 'cover',\n                  overflow: 'hidden'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.props.offLoadingScreen(), 100);\n    this.setEmailAccount();\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/ResetPassword/ResetPassword.jsx"],"names":["React","Navigate","createBrowserHistory","Modal","Input","Button","PageLoader","history","ResetPassword","Component","constructor","props","state","token","newPassword","confirmPassword","isProcessDone","isModalOpen","errorList","handleChange","bind","handleModal","handleValidationList","onCLickChangePassword","isFormValid","isValid","some","field","errorListArray","Object","values","includes","isPageLoaderShow","loadingScreen","setState","isModalShow","status","message","isModalSuccess","event","name","value","target","args","prevState","map","fieldObj","hasOwnProperty","preventDefault","changePasswordNoCB","source","redirectToLogin","setEmailAccount","pathname","location","split","pop","renderPageLoad","renderModal","title","clearError","formError","render","backgroundImage","backgroundSize","backgroundPosition","margin","overflow","componentDidMount","setTimeout","offLoadingScreen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport Modal from '../common/Register/Modal';\nimport Input from '../common/Register/Input';\nimport Button from '../common/Register/Button';\nimport PageLoader from '../common/Register/PageLoader';\n\nlet history = createBrowserHistory();\n\nclass ResetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: '',\n      newPassword: '',\n      confirmPassword: '',\n      isProcessDone: false,\n      isModalOpen: false,\n      errorList: [{ newPassword: false }, { confirmPassword: false }], // Add Input(name) fields\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    this.handleValidationList = this.handleValidationList.bind(this);\n    this.onCLickChangePassword = this.onCLickChangePassword.bind(this);\n  }\n\n  isFormValid() {\n    let { errorList } = this.state;\n    let isValid = true;\n\n    errorList.some((field) => {\n      let errorListArray = Object.values(field);\n\n      if (errorListArray.includes(false)) {\n        isValid = false;\n\n        return true; // stop looping cb function\n      }\n\n      return false;\n    });\n\n    return isValid;\n  }\n\n  isPageLoaderShow() {\n    if (!this.props.loadingScreen) return false;\n\n    return true;\n  }\n\n  handleModal() {\n    this.setState({ isModalOpen: !this.state.isModalOpen });\n  }\n\n  isModalShow() {\n    let { isModalOpen } = this.state;\n    let { status, message, loadingScreen } = this.props;\n\n    if (status === '' && message === '') return false;\n\n    if (loadingScreen) return false;\n\n    if (!isModalOpen) return false;\n\n    return true;\n  }\n\n  isModalSuccess() {\n    var { status } = this.props;\n\n    if (status === 'error') return false;\n\n    return true;\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleValidationList(args) {\n    let { name, isValid } = args;\n\n    this.setState((prevState) => ({\n      errorList: prevState.errorList.map((fieldObj) =>\n        fieldObj.hasOwnProperty(name) ? { ...fieldObj, [name]: isValid } : fieldObj\n      ),\n    }));\n  }\n\n  onCLickChangePassword(event) {\n    event.preventDefault();\n    let { token, newPassword } = this.state;\n\n    this.setState({ isProcessDone: true }); //* Set submission done.\n    this.handleModal(); //* Open Modal.\n\n    this.props.changePasswordNoCB({ token, source: 'forgot', newPassword });\n  }\n\n  redirectToLogin() {\n    if (\n      this.state.isProcessDone &&\n      this.props.status === 'success' &&\n      !this.state.isModalOpen\n    ) {\n      return <Navigate to='/login' replace={false} />;\n    }\n  }\n\n  setEmailAccount() {\n    const pathname = history.location.pathname.split('/');\n    const token = pathname.pop(); //* get token\n\n    this.setState({ token: token });\n  }\n\n  renderPageLoad() {\n    return this.isPageLoaderShow() && <PageLoader />;\n  }\n\n  renderModal() {\n    return (\n      this.isModalShow() && (\n        <Modal\n          content={{ title: 'Password Changed!', message: this.props.message }}\n          isSuccess={this.isModalSuccess()}\n          onClose={this.handleModal}\n        />\n      )\n    );\n  }\n\n  clearError() {\n    this.setState({ formError: '' });\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderPageLoad()}\n        {this.redirectToLogin()}\n        {this.renderModal()}\n        <section\n          id='wrapper'\n          className='login-register login-sidebar'\n          style={{\n            backgroundImage: 'url(./assets/images/loginbg01.png)',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        >\n          <div className='login-box-left login-box card p-2'>\n            <div className='card-body'>\n              <div className='row w-100 h-100' style={{ margin: '0 auto' }}>\n                <div className='col-lg-12 col-xl-6 p-3'>\n                  <form\n                    className='form-horizontal floating-labels'\n                    id='loginform'\n                    action='index.html'\n                    _lpchecked='1'\n                  >\n                    <a href='#/' className='text-center db'>\n                      <img src='./assets/images/logo-icon.png' alt='Home' />\n                      <br />\n                      <img src='./assets/images/logo-text.png' alt='Home' />\n                    </a>\n\n                    <Input\n                      type={'password'}\n                      placeholder={'New Password'}\n                      name={'newPassword'}\n                      autoComplete={false}\n                      required={false}\n                      topStyle={'m-t-40'}\n                      handleChange={this.handleChange}\n                      handleValidationList={this.handleValidationList}\n                    />\n\n                    <Input\n                      type={'password'}\n                      placeholder={'Confirm Password'}\n                      name={'confirmPassword'}\n                      autoComplete={false}\n                      required={false}\n                      handleChange={this.handleChange}\n                      password={this.state.newPassword}\n                      handleValidationList={this.handleValidationList}\n                    />\n\n                    <Button\n                      onClickSubmit={this.onCLickChangePassword}\n                      isFormValid={this.isFormValid()}\n                    >\n                      Change Password\n                    </Button>\n                  </form>\n                </div>\n                <div\n                  className='d-none d-xl-block col-xl-6'\n                  style={{\n                    backgroundImage: 'url(./assets/images/forgotpass01.png)',\n                    backgroundSize: 'cover',\n                    overflow: 'hidden',\n                  }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.props.offLoadingScreen(), 100);\n    this.setEmailAccount();\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}