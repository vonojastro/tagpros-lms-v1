{"ast":null,"code":"const logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  let result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/middleware/logger.js"],"names":["logger","store","next","action","console","group","type","info","result","log","getState","groupEnd"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACtCC,EAAAA,OAAO,CAACC,KAAR,CAAcF,MAAM,CAACG,IAArB;AACAF,EAAAA,OAAO,CAACG,IAAR,CAAa,aAAb,EAA4BJ,MAA5B;AACA,MAAIK,MAAM,GAAGN,IAAI,CAACC,MAAD,CAAjB;AACAC,EAAAA,OAAO,CAACK,GAAR,CAAY,YAAZ,EAA0BR,KAAK,CAACS,QAAN,EAA1B;AACAN,EAAAA,OAAO,CAACO,QAAR;AACA,SAAOH,MAAP;AACH,CAPD;;AASA,eAAeR,MAAf","sourcesContent":["const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n}\n\nexport default logger"]},"metadata":{},"sourceType":"module"}