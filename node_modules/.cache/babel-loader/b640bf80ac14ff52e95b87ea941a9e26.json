{"ast":null,"code":"import * as yup from 'yup';\nimport { errorMessage } from './errorMessages';\nconst {\n  empty_field,\n  too_long,\n  too_long_2,\n  too_short,\n  not_email,\n  password_too_short,\n  passwordMismatched,\n  special_char\n} = errorMessage;\nexport default yup.object({\n  firstName: yup.string().matches(/^[aA-zZ\\s]+$/, {\n    message: special_char,\n    excludeEmptyString: true\n  }).required(empty_field).min(2, too_short).max(50, too_long),\n  lastName: yup.string().matches(/^[aA-zZ\\s]+$/, {\n    message: special_char,\n    excludeEmptyString: true\n  }).required(empty_field).min(2, too_short).max(50, too_long),\n  nickname: yup.string().matches(/^[aA-zZ\\s]+$/, {\n    message: special_char,\n    excludeEmptyString: true\n  }).min(2, too_short).max(10, too_long_2),\n  salutaion: yup.string().matches(/^[aA-zZ\\s]+$/, {\n    message: special_char,\n    excludeEmptyString: true\n  }).min(2, too_short).max(10, too_long_2),\n  phone: yup.string().required(empty_field).min(2, too_short).max(50, too_long),\n  email: yup.string().required(empty_field).email(not_email).min(2, too_short).max(100, too_long),\n  password: yup.string().required(empty_field).min(8, password_too_short).max(50, too_long),\n  newPassword: yup.string().required(empty_field).min(8, password_too_short).max(50, too_long),\n  confirmPassword: yup.object({\n    password: yup.string(),\n    value: yup.string().required(empty_field).oneOf([yup.ref('password')], passwordMismatched)\n  })\n});","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/validators/registration.js"],"names":["yup","errorMessage","empty_field","too_long","too_long_2","too_short","not_email","password_too_short","passwordMismatched","special_char","object","firstName","string","matches","message","excludeEmptyString","required","min","max","lastName","nickname","salutaion","phone","email","password","newPassword","confirmPassword","value","oneOf","ref"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,MAAM;AACJC,EAAAA,WADI;AAEJC,EAAAA,QAFI;AAGJC,EAAAA,UAHI;AAIJC,EAAAA,SAJI;AAKJC,EAAAA,SALI;AAMJC,EAAAA,kBANI;AAOJC,EAAAA,kBAPI;AAQJC,EAAAA;AARI,IASFR,YATJ;AAWA,eAAeD,GAAG,CAACU,MAAJ,CAAW;AACxBC,EAAAA,SAAS,EAAEX,GAAG,CACXY,MADQ,GAERC,OAFQ,CAEA,cAFA,EAEgB;AAAEC,IAAAA,OAAO,EAAEL,YAAX;AAAyBM,IAAAA,kBAAkB,EAAE;AAA7C,GAFhB,EAGRC,QAHQ,CAGCd,WAHD,EAIRe,GAJQ,CAIJ,CAJI,EAIDZ,SAJC,EAKRa,GALQ,CAKJ,EALI,EAKAf,QALA,CADa;AAOxBgB,EAAAA,QAAQ,EAAEnB,GAAG,CACVY,MADO,GAEPC,OAFO,CAEC,cAFD,EAEiB;AAAEC,IAAAA,OAAO,EAAEL,YAAX;AAAyBM,IAAAA,kBAAkB,EAAE;AAA7C,GAFjB,EAGPC,QAHO,CAGEd,WAHF,EAIPe,GAJO,CAIH,CAJG,EAIAZ,SAJA,EAKPa,GALO,CAKH,EALG,EAKCf,QALD,CAPc;AAaxBiB,EAAAA,QAAQ,EAAEpB,GAAG,CACVY,MADO,GAEPC,OAFO,CAEC,cAFD,EAEiB;AAAEC,IAAAA,OAAO,EAAEL,YAAX;AAAyBM,IAAAA,kBAAkB,EAAE;AAA7C,GAFjB,EAGPE,GAHO,CAGH,CAHG,EAGAZ,SAHA,EAIPa,GAJO,CAIH,EAJG,EAICd,UAJD,CAbc;AAkBxBiB,EAAAA,SAAS,EAAErB,GAAG,CACXY,MADQ,GAERC,OAFQ,CAEA,cAFA,EAEgB;AAAEC,IAAAA,OAAO,EAAEL,YAAX;AAAyBM,IAAAA,kBAAkB,EAAE;AAA7C,GAFhB,EAGRE,GAHQ,CAGJ,CAHI,EAGDZ,SAHC,EAIRa,GAJQ,CAIJ,EAJI,EAIAd,UAJA,CAlBa;AAuBxBkB,EAAAA,KAAK,EAAEtB,GAAG,CACPY,MADI,GAEJI,QAFI,CAEKd,WAFL,EAGJe,GAHI,CAGA,CAHA,EAGGZ,SAHH,EAIJa,GAJI,CAIA,EAJA,EAIIf,QAJJ,CAvBiB;AA4BxBoB,EAAAA,KAAK,EAAEvB,GAAG,CACPY,MADI,GAEJI,QAFI,CAEKd,WAFL,EAGJqB,KAHI,CAGEjB,SAHF,EAIJW,GAJI,CAIA,CAJA,EAIGZ,SAJH,EAKJa,GALI,CAKA,GALA,EAKKf,QALL,CA5BiB;AAkCxBqB,EAAAA,QAAQ,EAAExB,GAAG,CACVY,MADO,GAEPI,QAFO,CAEEd,WAFF,EAGPe,GAHO,CAGH,CAHG,EAGAV,kBAHA,EAIPW,GAJO,CAIH,EAJG,EAICf,QAJD,CAlCc;AAuCxBsB,EAAAA,WAAW,EAAEzB,GAAG,CACbY,MADU,GAEVI,QAFU,CAEDd,WAFC,EAGVe,GAHU,CAGN,CAHM,EAGHV,kBAHG,EAIVW,GAJU,CAIN,EAJM,EAIFf,QAJE,CAvCW;AA4CxBuB,EAAAA,eAAe,EAAE1B,GAAG,CAACU,MAAJ,CAAW;AAC1Bc,IAAAA,QAAQ,EAAExB,GAAG,CAACY,MAAJ,EADgB;AAE1Be,IAAAA,KAAK,EAAE3B,GAAG,CACPY,MADI,GAEJI,QAFI,CAEKd,WAFL,EAGJ0B,KAHI,CAGE,CAAC5B,GAAG,CAAC6B,GAAJ,CAAQ,UAAR,CAAD,CAHF,EAGyBrB,kBAHzB;AAFmB,GAAX;AA5CO,CAAX,CAAf","sourcesContent":["import * as yup from 'yup';\nimport { errorMessage } from './errorMessages';\nconst {\n  empty_field,\n  too_long,\n  too_long_2,\n  too_short,\n  not_email,\n  password_too_short,\n  passwordMismatched,\n  special_char\n} = errorMessage;\n\nexport default yup.object({\n  firstName: yup\n    .string()\n    .matches(/^[aA-zZ\\s]+$/, { message: special_char, excludeEmptyString: true })\n    .required(empty_field)\n    .min(2, too_short)\n    .max(50, too_long),\n  lastName: yup\n    .string()\n    .matches(/^[aA-zZ\\s]+$/, { message: special_char, excludeEmptyString: true })\n    .required(empty_field)\n    .min(2, too_short)\n    .max(50, too_long),\n  nickname: yup\n    .string()\n    .matches(/^[aA-zZ\\s]+$/, { message: special_char, excludeEmptyString: true })\n    .min(2, too_short)\n    .max(10, too_long_2),\n  salutaion: yup\n    .string()\n    .matches(/^[aA-zZ\\s]+$/, { message: special_char, excludeEmptyString: true })\n    .min(2, too_short)\n    .max(10, too_long_2),\n  phone: yup\n    .string()\n    .required(empty_field)\n    .min(2, too_short)\n    .max(50, too_long),\n  email: yup\n    .string()\n    .required(empty_field)\n    .email(not_email)\n    .min(2, too_short)\n    .max(100, too_long),\n  password: yup\n    .string()\n    .required(empty_field)\n    .min(8, password_too_short)\n    .max(50, too_long),\n  newPassword: yup\n    .string()\n    .required(empty_field)\n    .min(8, password_too_short)\n    .max(50, too_long),\n  confirmPassword: yup.object({\n    password: yup.string(),\n    value: yup\n      .string()\n      .required(empty_field)\n      .oneOf([yup.ref('password')], passwordMismatched)\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}