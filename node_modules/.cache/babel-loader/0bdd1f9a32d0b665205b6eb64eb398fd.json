{"ast":null,"code":"import { api } from \"../../api\";\nexport const FETCH_USER_ERROR = \"FETCH_USER_ERROR\";\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\nexport const FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\";\nexport const SET_SOCIAL_AUTH_TOKEN = \"SET_SOCIAL_AUTH_TOKEN\";\nexport const SET_ACCOUNT_TYPE = \"SET_ACCOUNT_TYPE\";\nexport const SET_LAST_LOGIN = \"SET_LAST_LOGIN\";\nexport const SET_RESET_PASSWORD_VERIFICATION = \"SET_RESET_PASSWORD_VERIFICATION\";\nexport const SET_RESET_PASSWORD_RESPONSE = \"SET_RESET_PASSWORD_RESPONSE\";\nexport const GET_ADMIN_MODULE_PERMISSION_SUCCESS = 'GET_ADMIN_MODULE_PERMISSION_SUCCESS';\nexport function fetchUser() {\n  return async dispatch => {\n    dispatch(fetchUserRequest());\n\n    try {\n      const user = (await api.get(\"/account/me\")).data; // localStorage.setItem('accountId', user.accountId); //temporary fix for missing account ID in class creation\n\n      dispatch(fetchUserSuccess(user));\n    } catch (error) {\n      const payload = {\n        status: error.response ? error.response.status : \"NetworkError\"\n      };\n      dispatch(fetchUserError(payload));\n      dispatch(logOut());\n    }\n  };\n}\nexport function fetchUserRequest() {\n  return {\n    type: FETCH_USER_REQUEST\n  };\n}\nexport function fetchUserError(data) {\n  return {\n    type: FETCH_USER_ERROR,\n    data\n  };\n}\nexport function fetchUserSuccess(data) {\n  return {\n    type: FETCH_USER_SUCCESS,\n    data\n  };\n}\nexport function logOut() {\n  return {\n    type: LOG_OUT\n  };\n}\nexport function setAuthToken(data) {\n  return {\n    type: SET_AUTH_TOKEN,\n    data\n  };\n}\nexport function setSocialAuthToken(data) {\n  return {\n    type: SET_SOCIAL_AUTH_TOKEN,\n    data\n  };\n}\nexport function setAccountType(data) {\n  return {\n    type: SET_ACCOUNT_TYPE,\n    data\n  };\n}\nexport function setLastLogin(data) {\n  return {\n    type: SET_LAST_LOGIN,\n    data\n  };\n}\nexport function setResetPasswordVerification(data) {\n  return {\n    type: SET_RESET_PASSWORD_VERIFICATION,\n    data\n  };\n}\nexport function setResetPasswordResponse(data) {\n  return {\n    type: SET_RESET_PASSWORD_RESPONSE,\n    data\n  };\n}\nexport function getModulePermissionsSuccess(data) {\n  return {\n    type: GET_ADMIN_MODULE_PERMISSION_SUCCESS,\n    data\n  };\n}\n;","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/actions/auth.js"],"names":["api","FETCH_USER_ERROR","FETCH_USER_SUCCESS","FETCH_USER_REQUEST","LOG_OUT","SET_AUTH_TOKEN","SET_SOCIAL_AUTH_TOKEN","SET_ACCOUNT_TYPE","SET_LAST_LOGIN","SET_RESET_PASSWORD_VERIFICATION","SET_RESET_PASSWORD_RESPONSE","GET_ADMIN_MODULE_PERMISSION_SUCCESS","fetchUser","dispatch","fetchUserRequest","user","get","data","fetchUserSuccess","error","payload","status","response","fetchUserError","logOut","type","setAuthToken","setSocialAuthToken","setAccountType","setLastLogin","setResetPasswordVerification","setResetPasswordResponse","getModulePermissionsSuccess"],"mappings":"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","sourcesContent":["import { api } from \"../../api\";\n\nexport const FETCH_USER_ERROR = \"FETCH_USER_ERROR\";\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\nexport const FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\";\nexport const SET_SOCIAL_AUTH_TOKEN = \"SET_SOCIAL_AUTH_TOKEN\";\nexport const SET_ACCOUNT_TYPE = \"SET_ACCOUNT_TYPE\";\nexport const SET_LAST_LOGIN = \"SET_LAST_LOGIN\";\nexport const SET_RESET_PASSWORD_VERIFICATION = \"SET_RESET_PASSWORD_VERIFICATION\";\nexport const SET_RESET_PASSWORD_RESPONSE = \"SET_RESET_PASSWORD_RESPONSE\";\nexport const GET_ADMIN_MODULE_PERMISSION_SUCCESS = 'GET_ADMIN_MODULE_PERMISSION_SUCCESS';\n\nexport function fetchUser() {\n  return async (dispatch) => {\n    dispatch(fetchUserRequest());\n    try {\n      const user = (await api.get(\"/account/me\")).data;\n      \n      // localStorage.setItem('accountId', user.accountId); //temporary fix for missing account ID in class creation\n      dispatch(fetchUserSuccess(user));\n    } catch (error) {\n      const payload = { status: error.response ? error.response.status : \"NetworkError\" };\n      dispatch(fetchUserError(payload));\n      dispatch(logOut());\n    }\n  };\n}\n\nexport function fetchUserRequest() {\n  return { type: FETCH_USER_REQUEST };\n}\n\nexport function fetchUserError(data) {\n  return { type: FETCH_USER_ERROR, data };\n}\n\nexport function fetchUserSuccess(data) {\n  return { type: FETCH_USER_SUCCESS, data };\n}\n\nexport function logOut() {\n  return { type: LOG_OUT };\n}\n\nexport function setAuthToken(data) {\n  return { type: SET_AUTH_TOKEN, data };\n}\n\nexport function setSocialAuthToken(data) {\n  return { type: SET_SOCIAL_AUTH_TOKEN, data };\n}\n\nexport function setAccountType(data) {\n  return { type: SET_ACCOUNT_TYPE, data };\n}\n\nexport function setLastLogin(data) {\n  return { type: SET_LAST_LOGIN, data };\n}\n\nexport function setResetPasswordVerification(data) {\n  return { type: SET_RESET_PASSWORD_VERIFICATION, data };\n}\n\nexport function setResetPasswordResponse(data) {\n  return { type: SET_RESET_PASSWORD_RESPONSE, data };\n}\n\nexport function getModulePermissionsSuccess(data)\n{\n  return { type: GET_ADMIN_MODULE_PERMISSION_SUCCESS, data };\n};"]},"metadata":{},"sourceType":"module"}