{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Table/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport he from \"he\";\nimport { useTable, usePagination, useFilters, useGlobalFilter, useSortBy, useExpanded } from 'react-table';\nimport './index.css';\nimport Tagpi from 'components/common/Tagpi';\nimport ColumnFilter from './Filters/ColumnFilter'; // import { useMemo } from 'react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table(_ref) {\n  _s();\n\n  let {\n    setToggleSortFilter,\n    toggleSortFilter,\n    loading,\n    error,\n    columns,\n    data,\n    title,\n    filterColumn = 'status',\n    filterValue,\n    onReload,\n    renderRowSubComponent,\n    disableSearch,\n    sortableRows,\n    disclaimer,\n    emptyMessage,\n    getRowProps = () => ({})\n  } = _ref;\n  // let dataMemo = useMemo(()=>data, [])\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    visibleColumns,\n    setGlobalFilter,\n    setFilter,\n    // setSortBy,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize,\n      globalFilter\n    }\n  } = useTable({\n    columns,\n    // data: dataMemo,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useGlobalFilter, useFilters, useSortBy, useExpanded, usePagination);\n  React.useEffect(() => {// console.log(globalFilter);\n  }, [globalFilter]); // React.useEffect(() => {\n  //     //check if filter is set to 'ALL'/empty\n  //     if((!!filterValue && filterValue.length > 0) ){\n  //         setFilter(filterColumn, filterValue);\n  //     }\n  //     else setFilter(filterColumn, undefined);\n  //     if(sortAmount === 'none')setSortBy([]);\n  //     if(sortAmount === 'asc')setSortBy([{id: 'PRICE_AMOUNT', desc: false}]);\n  //     if(sortAmount === 'desc')setSortBy([{id: 'PRICE_AMOUNT', desc: true}]);\n  // }, [setFilter, filterValue, filterColumn, sortAmount, setSortBy, filterValueMultiple]);\n\n  React.useEffect(() => {\n    //check if filter is set to 'ALL'/empty\n    if (!!filterValue && (typeof filterValue === 'string' || filterValue instanceof String)) {\n      if (!!filterValue && filterValue.length > 0) {\n        console.log('tru filtervalue: ', filterValue);\n        setFilter(filterColumn, filterValue);\n      } else {\n        console.log('tru filtervalue: ', filterValue);\n        setFilter(filterColumn, undefined);\n      }\n\n      ;\n    }\n  }, [setFilter, filterValue, filterColumn]); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title m-t-10\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), !disableSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-self-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-magnify font-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\",\n            className: \"form-control\",\n            style: {\n              width: \"90%\"\n            },\n            value: globalFilter || \"\",\n            onChange: e => setGlobalFilter(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          // className=\"btn btn-info\" \n          className: \"btn search-button\",\n          onClick: onReload,\n          \"data-toggle\": \"tooltip\",\n          title: \"Refresh Table\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-sync-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 11\n        },\n        children: disclaimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [loading && /*#__PURE__*/_jsxDEV(Tagpi, {\n          type: \"loading\",\n          dataName: title,\n          showSpinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            display: !loading && (!!data && data.length < 1 || !!error) ? 'block' : 'none'\n          },\n          children: [!!data && data.length < 1 && !error && /*#__PURE__*/_jsxDEV(Tagpi, {\n            type: \"noData\",\n            customMessage: !emptyMessage ? null : emptyMessage,\n            dataType: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 67\n          }, this), !!error && /*#__PURE__*/_jsxDEV(Tagpi, {\n            type: \"505\",\n            dataType: \"Configurations\",\n            reload: onReload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive table-height-400px\",\n          style: {\n            display: !loading && !error && !!data && data.length > 0 ? 'block' : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            ...getTableProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: headerGroups[1].headers.map(column =>\n                /*#__PURE__*/\n                // <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                _jsxDEV(\"th\", { ...column.getHeaderProps(sortableRows ? column.getSortByToggleProps() : {}),\n                  // onClick={()=>setToggle(true)}\n                  className: \"tesst\",\n                  children: [column.render('Header'), column.columnFilter !== undefined && column.columnFilter ? /*#__PURE__*/_jsxDEV(ColumnFilter, {\n                    column: column,\n                    toggleSortFilter: toggleSortFilter,\n                    setToggleSortFilter: setToggleSortFilter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 53\n                  }, this) : '', sortableRows && (column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fas fa-sort-down ml-1`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 63\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fas fa-sort-up ml-1`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 63\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fas fa-sort ml-1`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 59\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n              children: page.map((row, i) => {\n                prepareRow(row);\n                return /*#__PURE__*/_jsxDEV(React.Fragment, { ...row.getRowProps(),\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(getRowProps(row)),\n                    children: row.cells.map(cell => {\n                      return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                        children: cell.render(he.decode('Cell'))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 64\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 49\n                  }, this), row.isExpanded ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        backgroundColor: 'rgba(0, 123, 255, 0.44)'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: visibleColumns.length - 1,\n                      children: renderRowSubComponent({\n                        row\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 53\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          style: {\n            display: !loading && !error && !!data && data.length > 0 ? 'block' : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: pageSize,\n                onChange: e => {\n                  setPageSize(Number(e.target.value));\n                },\n                children: [10, 25, 50, 100].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pageSize,\n                  children: [\"Show \", pageSize]\n                }, pageSize, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [pageIndex + 1, \" of \", pageOptions.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link\",\n                onClick: () => gotoPage(0),\n                disabled: !canPreviousPage,\n                children: '<<'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link\",\n                onClick: () => previousPage(),\n                disabled: !canPreviousPage,\n                children: '<'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link\",\n                onClick: () => nextPage(),\n                disabled: !canNextPage,\n                children: '>'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link\",\n                onClick: () => gotoPage(pageCount - 1),\n                disabled: !canNextPage,\n                children: '>>'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"D7nxAMZGU1zfsc6Mmtc18ClLb2A=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/Admin/contents/Table/index.jsx"],"names":["React","he","useTable","usePagination","useFilters","useGlobalFilter","useSortBy","useExpanded","Tagpi","ColumnFilter","Table","setToggleSortFilter","toggleSortFilter","loading","error","columns","data","title","filterColumn","filterValue","onReload","renderRowSubComponent","disableSearch","sortableRows","disclaimer","emptyMessage","getRowProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","visibleColumns","setGlobalFilter","setFilter","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","globalFilter","initialState","useEffect","String","length","console","log","undefined","width","e","target","value","fontSize","display","headers","map","column","getHeaderProps","getSortByToggleProps","render","columnFilter","isSorted","isSortedDesc","row","i","cells","cell","getCellProps","decode","isExpanded","backgroundColor","Number"],"mappings":"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","sourcesContent":["import React from 'react'\nimport he from \"he\";\nimport { useTable, usePagination, useFilters, useGlobalFilter, useSortBy, useExpanded } from 'react-table'\nimport './index.css'\nimport Tagpi from 'components/common/Tagpi';\nimport ColumnFilter from './Filters/ColumnFilter';\n// import { useMemo } from 'react';\n\nexport default function Table({setToggleSortFilter, toggleSortFilter, loading, error, columns, data, title,filterColumn = 'status', filterValue, onReload,  renderRowSubComponent, disableSearch, sortableRows, disclaimer, emptyMessage, getRowProps= () => ({})}) {\n    // let dataMemo = useMemo(()=>data, [])\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        visibleColumns,\n        setGlobalFilter,\n        setFilter,\n        // setSortBy,\n        page, // Instead of using 'rows', we'll use page,\n        // which has only the rows for the active page\n\n        // The rest of these things are super handy, too ;)\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize, globalFilter },\n    } = useTable(\n        {\n            columns,\n            // data: dataMemo,\n            data,\n            initialState: { pageIndex: 0 },\n        },\n        useGlobalFilter,\n        useFilters,\n        useSortBy,\n        useExpanded,\n        usePagination\n    )\n    React.useEffect(() => {\n        // console.log(globalFilter);\n    }, [globalFilter]);\n\n    // React.useEffect(() => {\n    //     //check if filter is set to 'ALL'/empty\n    //     if((!!filterValue && filterValue.length > 0) ){\n    //         setFilter(filterColumn, filterValue);\n    //     }\n    //     else setFilter(filterColumn, undefined);\n    //     if(sortAmount === 'none')setSortBy([]);\n    //     if(sortAmount === 'asc')setSortBy([{id: 'PRICE_AMOUNT', desc: false}]);\n    //     if(sortAmount === 'desc')setSortBy([{id: 'PRICE_AMOUNT', desc: true}]);\n        \n    // }, [setFilter, filterValue, filterColumn, sortAmount, setSortBy, filterValueMultiple]);\n\n    React.useEffect(() => {\n        //check if filter is set to 'ALL'/empty\n        if(!!filterValue && (typeof filterValue === 'string' || filterValue instanceof String)){\n            if((!!filterValue && filterValue.length > 0) ){\n                console.log('tru filtervalue: ', filterValue)\n                setFilter(filterColumn, filterValue);\n            }\n            else {\n                console.log('tru filtervalue: ', filterValue)\n                setFilter(filterColumn, undefined)};\n        }\n    }, [setFilter, filterValue, filterColumn]);\n\n    // Render the UI for your table\n    return (\n        <div>\n            <div className=\"right-page-header\">\n                <div className=\"d-flex\">\n                    <div className=\"mr-auto\">\n                        <h4 className=\"card-title m-t-10\">{title}</h4>\n                       \n                    </div>\n                    \n\n\n{ \n!disableSearch && <div className=\"align-self-end\">\n                        <i className=\"mdi mdi-magnify font-14\"></i>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search\"\n                            className=\"form-control\"\n                            style={{ width: \"90%\" }}\n                            value={globalFilter || \"\"}\n                            onChange={e => setGlobalFilter(e.target.value)}\n                        />\n                    </div>\n }\n\n                    <button \n                    // className=\"btn btn-info\" \n                    className=\"btn search-button\" \n                    onClick = {onReload} data-toggle=\"tooltip\" title=\"Refresh Table\">\n                        <i className=\"fas fa-sync-alt\"></i>\n                    </button>\n                </div>\n                <p style={{fontSize: 11 }}>{disclaimer}</p>\n            </div>\n                <div className=\"row\">\n                    \n                    <div className=\"col-12\">\n                        {loading && <Tagpi type=\"loading\" dataName={title} showSpinner={true} />}\n                        {/* <div className=\"text-center data-loading\" style = {{display: loading ? 'block': 'none'}}>\n                            <div className=\"spinner-border text-primary\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                            <div className=\"loading-text\">Loading {title} ...</div>\n                        </div> */}\n                        <div className=\"text-center\" style = {{display: (!loading && ((!!data && data.length < 1) || !!error)) ? 'block': 'none'}}>\n                        {(!!data && data.length < 1 && !error) && <Tagpi type=\"noData\" customMessage={!emptyMessage ? null : emptyMessage} dataType={title}/>}\n                            {!!error && <Tagpi type=\"505\" dataType=\"Configurations\" reload={onReload}/>}\n                        </div>\n                      \n                        <div className=\"table-responsive table-height-400px\" style = {{display: (!loading && !error && (!!data && data.length > 0)) ? 'block': 'none'}}>\n                            <table className=\"table table-striped\" {...getTableProps()}>\n                                <thead>\n                                    <tr>\n                                        {headerGroups[1].headers.map(column => (\n                                            // <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            <th {...column.getHeaderProps(sortableRows ? column.getSortByToggleProps() : {})} \n                                                // onClick={()=>setToggle(true)}\n                                                className='tesst'\n                                                >\n                                                \n                                                {column.render('Header')}\n                                                {\n                                                    column.columnFilter !== undefined && column.columnFilter\n                                                    ? \n                                                    <ColumnFilter column={column} toggleSortFilter={toggleSortFilter} setToggleSortFilter={setToggleSortFilter} />\n                                                    : ''\n                                                }\n                                                {\n                                                    sortableRows && \n                                                    ( \n                                                        column.isSorted\n                                                        ? \n                                                        column.isSortedDesc\n                                                            ? <i className={`fas fa-sort-down ml-1`} />\n                                                            : <i className={`fas fa-sort-up ml-1`} />\n                                                        : <i className={`fas fa-sort ml-1`} />\n                                                    )\n                                                }\n                                            </th>\n                                        ))}\n                                    </tr>\n                                </thead>\n                                <tbody {...getTableBodyProps()}>\n                                    {page.map((row, i) => {\n                                        prepareRow(row)\n                                        return (\n                                            <React.Fragment {...row.getRowProps()}>\n                                             \n                                                <tr {...row.getRowProps(getRowProps(row))}>\n                                                    {row.cells.map(cell => {\n                                                        return <td {...cell.getCellProps()}>{cell.render(he.decode('Cell'))}</td>\n                                                    })}\n                                                </tr>\n                                                {row.isExpanded ? (\n                                                    <tr>\n                                                        <td style={{backgroundColor: 'rgba(0, 123, 255, 0.44)'}}></td>\n                                                        <td colSpan={visibleColumns.length-1}>\n                                                        {renderRowSubComponent({ row })}\n                                                        </td>\n                                                    </tr>\n                                                ) : null}\n                                            </React.Fragment>\n                                        )\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <div className=\"col-12\" style = {{display: (!loading && !error && (!!data && data.length > 0)) ? 'block': 'none'}}>\n                            {/* <div className=\"pagination\"> */}\n                            <div className=\"d-flex justify-content-between \">\n                                <div className=\"p-2\">\n                                    <select\n                                        value={pageSize}\n                                        onChange={e => {\n                                            setPageSize(Number(e.target.value))\n                                        }}\n                                    >\n                                        {[10, 25, 50, 100].map(pageSize => (\n                                            <option key={pageSize} value={pageSize}>\n                                                Show {pageSize}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"p-2\">\n                                    <span>\n                                        Page{' '}\n                                        <strong>\n                                            {pageIndex + 1} of {pageOptions.length}\n                                        </strong>{' '}\n                                    </span>\n                                </div>\n                                <div className=\"p-2\">\n                                    <button className=\"btn btn-link\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                                        {'<<'}\n                                    </button>{' '}\n                                    <button className=\"btn btn-link\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                                        {'<'}\n                                    </button>{' '}\n                                    <button className=\"btn btn-link\" onClick={() => nextPage()} disabled={!canNextPage}>\n                                        {'>'}\n                                    </button>{' '}\n                                    <button className=\"btn btn-link\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                                        {'>>'}\n                                    </button>{' '}\n\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}