{"ast":null,"code":"import { addLearner as fetchAddLearner, updateLearner as fetchUpdateLearner, deleteLearner as fetchDeleteLearner } from \"../../api/learners\";\nimport { fetchLearners } from \"./learners\";\nexport const ADD_LEARNER = \"ADD_LEARNER\";\nexport const ADD_LEARNER_REQUEST = \"ADD_LEARNER_REQUEST\";\nexport const ADD_LEARNER_ERROR = \"ADD_LEARNER_ERROR\";\nexport const ADD_LEARNER_SUCCESS = \"ADD_LEARNER_SUCCESS\";\nexport const UPDATE_LEARNER = \"UPDATE_LEARNER\";\nexport const UPDATE_LEARNER_REQUEST = \"UPDATE_LEARNER_REQUEST\";\nexport const UPDATE_LEARNER_ERROR = \"UPDATE_LEARNER_ERROR\";\nexport const UPDATE_LEARNER_SUCCESS = \"UPDATE_LEARNER_SUCCESS\";\nexport function addLearner(_ref) {\n  let {\n    values,\n    closeModal,\n    handleSuccess\n  } = _ref;\n  return async dispatch => {\n    try {\n      dispatch(addLearnerRequest());\n      await fetchAddLearner({\n        values\n      });\n      dispatch(addLearnerSuccess());\n      handleSuccess();\n      dispatch(fetchLearners());\n      closeModal();\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n\n      dispatch(addLearnerError(data));\n      return error;\n    }\n  };\n}\nexport function updateLearner(_ref2) {\n  let {\n    values,\n    closeModal,\n    handleSuccess\n  } = _ref2;\n  return async dispatch => {\n    try {\n      dispatch(updateLearnerRequest());\n      await fetchUpdateLearner({\n        values\n      });\n      dispatch(updateLearnerSuccess());\n      dispatch(fetchLearners());\n      handleSuccess();\n      closeModal();\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n\n      dispatch(updateLearnerError(data));\n      return error;\n    }\n  };\n}\nexport function deleteLearner(_ref3) {\n  let {\n    id,\n    closeModal,\n    handleSuccess,\n    handleFailure\n  } = _ref3;\n  return async dispatch => {\n    try {\n      dispatch(updateLearnerRequest());\n      await fetchDeleteLearner(id);\n      dispatch(updateLearnerSuccess());\n      dispatch(fetchLearners());\n      handleSuccess();\n      closeModal();\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n\n      closeModal();\n      handleFailure();\n      return error;\n    }\n  };\n}\nexport function addLearnerRequest(data) {\n  return {\n    type: ADD_LEARNER_REQUEST,\n    data\n  };\n}\nexport function addLearnerError(data) {\n  return {\n    type: ADD_LEARNER_ERROR,\n    data\n  };\n}\nexport function addLearnerSuccess(data) {\n  return {\n    type: ADD_LEARNER_SUCCESS,\n    data\n  };\n}\nexport function updateLearnerRequest(data) {\n  return {\n    type: UPDATE_LEARNER_REQUEST,\n    data\n  };\n}\nexport function updateLearnerError(data) {\n  return {\n    type: UPDATE_LEARNER_ERROR,\n    data\n  };\n}\nexport function updateLearnerSuccess(data) {\n  return {\n    type: UPDATE_LEARNER_SUCCESS,\n    data\n  };\n}","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/actions/learnerInfo.js"],"names":["addLearner","fetchAddLearner","updateLearner","fetchUpdateLearner","deleteLearner","fetchDeleteLearner","fetchLearners","ADD_LEARNER","ADD_LEARNER_REQUEST","ADD_LEARNER_ERROR","ADD_LEARNER_SUCCESS","UPDATE_LEARNER","UPDATE_LEARNER_REQUEST","UPDATE_LEARNER_ERROR","UPDATE_LEARNER_SUCCESS","values","closeModal","handleSuccess","dispatch","addLearnerRequest","addLearnerSuccess","error","data","response","status","request","addLearnerError","updateLearnerRequest","updateLearnerSuccess","updateLearnerError","id","handleFailure","type"],"mappings":"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","sourcesContent":["import {\n  addLearner as fetchAddLearner,\n  updateLearner as fetchUpdateLearner,\n  deleteLearner as fetchDeleteLearner,\n} from \"../../api/learners\";\nimport { fetchLearners } from \"./learners\";\n\nexport const ADD_LEARNER = \"ADD_LEARNER\";\nexport const ADD_LEARNER_REQUEST = \"ADD_LEARNER_REQUEST\";\nexport const ADD_LEARNER_ERROR = \"ADD_LEARNER_ERROR\";\nexport const ADD_LEARNER_SUCCESS = \"ADD_LEARNER_SUCCESS\";\n\nexport const UPDATE_LEARNER = \"UPDATE_LEARNER\";\nexport const UPDATE_LEARNER_REQUEST = \"UPDATE_LEARNER_REQUEST\";\nexport const UPDATE_LEARNER_ERROR = \"UPDATE_LEARNER_ERROR\";\nexport const UPDATE_LEARNER_SUCCESS = \"UPDATE_LEARNER_SUCCESS\";\n\nexport function addLearner({ values, closeModal, handleSuccess }) {\n  return async (dispatch) => {\n    try {\n      dispatch(addLearnerRequest());\n      await fetchAddLearner({ values });\n      dispatch(addLearnerSuccess());\n      handleSuccess()\n      dispatch(fetchLearners());\n      closeModal();\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n      dispatch(addLearnerError(data));\n      return error;\n    }\n  };\n}\n\nexport function updateLearner({ values, closeModal, handleSuccess }) {\n  return async (dispatch) => {\n    try {\n      dispatch(updateLearnerRequest());\n      await fetchUpdateLearner({ values });\n      dispatch(updateLearnerSuccess());\n      dispatch(fetchLearners());\n      handleSuccess();\n      closeModal();\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n      dispatch(updateLearnerError(data));\n      return error;\n    }\n  };\n}\n\nexport function deleteLearner({ id, closeModal, handleSuccess, handleFailure }) {\n  return async (dispatch) => {\n    try {\n      dispatch(updateLearnerRequest());\n      await fetchDeleteLearner(id);\n      dispatch(updateLearnerSuccess());\n      dispatch(fetchLearners());\n      handleSuccess();\n      closeModal();\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n      closeModal();\n      handleFailure();\n\n      return error;\n    }\n  };\n}\n\nexport function addLearnerRequest(data) {\n  return { type: ADD_LEARNER_REQUEST, data };\n}\n\nexport function addLearnerError(data) {\n  return { type: ADD_LEARNER_ERROR, data };\n}\n\nexport function addLearnerSuccess(data) {\n  return { type: ADD_LEARNER_SUCCESS, data };\n}\n\nexport function updateLearnerRequest(data) {\n  return { type: UPDATE_LEARNER_REQUEST, data };\n}\n\nexport function updateLearnerError(data) {\n  return { type: UPDATE_LEARNER_ERROR, data };\n}\n\nexport function updateLearnerSuccess(data) {\n  return { type: UPDATE_LEARNER_SUCCESS, data };\n}\n"]},"metadata":{},"sourceType":"module"}