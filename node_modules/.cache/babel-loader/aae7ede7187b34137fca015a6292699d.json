{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/CreateClass/Uploader/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { s3Config } from \"../../../config\";\nimport S3 from \"aws-s3-pro\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst s3Client = new S3(s3Config);\nexport const Uploader = _ref => {\n  _s();\n\n  let {\n    uploadImage\n  } = _ref;\n  const uploaderRef = useRef();\n\n  const onUpload = async event => {\n    try {\n      const uploadResponse = await s3Client.uploadFile(event.target.files[0]);\n\n      if (uploadResponse.status === 204) {\n        document.getElementById(\"imageSrc\").value = uploadResponse.location;\n        var image = document.getElementById('imageFile');\n        image.src = uploadResponse.location;\n        uploadImage(uploadResponse.location);\n      }\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mt-2\",\n      onClick: () => uploaderRef.current.click(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      // name={name}\n      ref: uploaderRef,\n      type: \"file\",\n      accept: \".jpg, .png, .jpeg\",\n      style: {\n        display: \"none\"\n      },\n      onChange: onUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Uploader, \"TkBBTXOciiLAiRNXNrOIGxwcr60=\");\n\n_c = Uploader;\nexport default Uploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/CreateClass/Uploader/index.jsx"],"names":["React","useRef","s3Config","S3","s3Client","Uploader","uploadImage","uploaderRef","onUpload","event","uploadResponse","uploadFile","target","files","status","document","getElementById","value","location","image","src","error","textAlign","current","click","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;;AACA,MAAMC,QAAQ,GAAG,IAAID,EAAJ,CAAOD,QAAP,CAAjB;AAEA,OAAO,MAAMG,QAAQ,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AACzC,QAAMC,WAAW,GAAGN,MAAM,EAA1B;;AAEA,QAAMO,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChC,QAAI;AACF,YAAMC,cAAc,GAAG,MAAMN,QAAQ,CAACO,UAAT,CAAoBF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB,CAA7B;;AACA,UAAIH,cAAc,CAACI,MAAf,KAA0B,GAA9B,EAAmC;AACjCC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,GAA4CP,cAAc,CAACQ,QAA3D;AACA,YAAIC,KAAK,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAZ;AACAG,QAAAA,KAAK,CAACC,GAAN,GAAYV,cAAc,CAACQ,QAA3B;AACAZ,QAAAA,WAAW,CAACI,cAAc,CAACQ,QAAhB,CAAX;AACD;AACF,KARD,CAQE,OAAOG,KAAP,EAAc,CAAE;AACnB,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAlC;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAMf,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE;AACA,MAAA,GAAG,EAAEjB,WAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,MAAM,EAAC,mBAJT;AAKE,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAE;AAAX,OALT;AAME,MAAA,QAAQ,EAAEjB;AANZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BM;;GAAMH,Q;;KAAAA,Q;AAgCb,eAAeA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\n\nimport { s3Config } from \"../../../config\";\nimport S3 from \"aws-s3-pro\";\nconst s3Client = new S3(s3Config);\n\nexport const Uploader = ({uploadImage}) => {\n  const uploaderRef = useRef();\n \n  const onUpload = async (event) => {\n    try {\n      const uploadResponse = await s3Client.uploadFile(event.target.files[0]);\n      if (uploadResponse.status === 204) {\n        document.getElementById(\"imageSrc\").value = uploadResponse.location;\n        var image = document.getElementById('imageFile');\n        image.src = uploadResponse.location;\n        uploadImage(uploadResponse.location);\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"col-md-12\" style={{textAlign:\"center\"}}>\n      <button className=\"btn btn-info mt-2\" onClick={() => uploaderRef.current.click()}>\n        Upload\n      </button>\n      <input\n        // name={name}\n        ref={uploaderRef}\n        type=\"file\"\n        accept=\".jpg, .png, .jpeg\"\n        style={{ display: \"none\" }}\n        onChange={onUpload}\n      />\n    </div>\n  );\n};\n\nexport default Uploader"]},"metadata":{},"sourceType":"module"}