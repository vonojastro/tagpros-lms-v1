{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/CreateClass/component/ClassMaintenance.jsx\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { Fragment, Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport LiveClass from \"./LiveClass\";\nimport RecordedClass from \"./RecordedClass\";\nimport PopQuizMaintenance from \"./PopQuizMaintenance\";\nimport { Uploader } from \"../Uploader\";\nimport { toast } from 'react-toastify';\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { TimezonePicker } from \"baseui/timezonepicker\";\nimport { SIZE } from \"baseui/input\";\nimport { toMoneyFormat } from 'utils/utils';\nimport { Alert, Modal, Button } from \"react-bootstrap\";\nimport { getActivePricing } from \"api/pricing\";\nimport { api } from \"../../../api\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(customParseFormat); // const DATE_TODAY = dayjs().format(\"YYYY-MM-DD\");\n\nexport class ClassMaintenance extends Component {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.state = {\n      navItems: [],\n      toDashboard: false,\n      accountId: \"\",\n      modalShow: false,\n      payoutModalShow: false,\n      classType: \"\",\n      refCategories: [],\n      // refSubCategories: [],\n      refAgeCategory: [],\n      refSkillLevels: [],\n      values: [],\n      lecture: [],\n      schedule: [],\n      question: [],\n      newClass: {\n        currentClassId: \"\",\n        emailAddress: \"\",\n        title: \"\",\n        description: \"\",\n        thumbnail: \"\",\n        // teaser: '',\n        categoryId: \"\",\n        // subCategoryId: \"\",\n        ageRangeId: \"\",\n        skillLevelId: \"\",\n        classUrl: \"\",\n        currency: \"USD\",\n        price: \"\",\n        learningGoals: \"\",\n        learningMaterials: \"\",\n        externalResources: \"\",\n        // timeCommitment: \"\",\n        saveAsDraft: false,\n        classType: \"CLT002\",\n        lectures: [],\n        // {title, description, videoPath}\n        schedules: {},\n        // {startDate, startTime, endDate, endTime, timezone, min, max}\n        emails: [],\n        passingGrade: \"\",\n        questions: [],\n        status: null,\n        pricingId: null,\n        // enrollmentStartDate: null,\n        // enrollmentEndDate: null,\n        availabilityStartDate: null,\n        availabilityEndDate: null,\n        timezone: \"Asia/Manila\" // {questionContent:string, choices:[choiceContent:string, isAnswer:boolean]}\n\n      },\n      hasDraft: false,\n      redirect: \"\",\n      thumbnailSrc: \"\",\n      thumbnailSource: \"\",\n      // teaserSrc: '',\n      tabNo: 1,\n      dirty: false,\n      submitted: false,\n      startDate: \"\",\n      endDate: \"\",\n      error: \"\",\n      isLiveValid: false,\n      isRecordedValid: false,\n      isExclusiveValid: false,\n      fetchedDataLoading: false,\n      isLoading: false,\n      currentTab: 0,\n      activeTab: 0,\n      pricing: [],\n      minDate: moment(new Date()).add(21, 'days').format('YYYY-MM-DD')\n    };\n    this.allNavItems = [{\n      type: 'details',\n      title: 'Details',\n      classType: ['live', 'recorded']\n    }, {\n      type: 'media',\n      title: 'Thumbnail',\n      classType: ['live', 'recorded']\n    }, {\n      type: 'schedule',\n      title: 'Schedule',\n      classType: ['live', 'recorded']\n    }, {\n      type: 'module',\n      title: 'Modules',\n      classType: ['recorded']\n    }, {\n      type: 'pricing',\n      title: 'Pricing',\n      classType: ['live', 'recorded']\n    }, {\n      type: 'popquiz',\n      title: 'Pop Quiz (Optional)',\n      classType: ['live']\n    }];\n\n    this.getData = async () => {\n      this.setState({\n        hasDraft: false\n      });\n      const {\n        classDetails\n      } = this.props;\n\n      if (classDetails !== undefined) {\n        const {\n          currentClassId,\n          title,\n          classIntroduction,\n          learningGoals,\n          skillLevelId,\n          categoryId,\n          ageRangeId,\n          externalResources,\n          classType,\n          thumbnailImage,\n          startTime,\n          endTime,\n          maxLearners,\n          minLearners,\n          dayAvailability,\n          timeZone,\n          availableDates,\n          priceAmount,\n          priceCurrency,\n          questions,\n          passingGrade,\n          availabilityStartDate,\n          availabilityEndDate,\n          recordedId,\n          lectures\n        } = classDetails;\n        this.getPricing(classType);\n        let availableDatesTemp = [];\n\n        if (!!availableDates && availableDates.length > 0) {\n          await availableDates.forEach(item => {\n            var dateItem = dayjs(item);\n            var aWeekFromNow = dayjs(new Date()).add(7, 'days').format(\"YYYY-MM-DD\");\n\n            if (dateItem.diff(aWeekFromNow, 'day') >= 0) {\n              availableDatesTemp.push(item);\n            }\n          });\n        }\n\n        let currentTabTemp = 1;\n\n        if (!!title && (title !== undefined || title !== '') && !!classIntroduction && (classIntroduction !== undefined || classIntroduction !== '') && !!learningGoals && (learningGoals !== undefined || learningGoals !== '') && !!skillLevelId && (skillLevelId !== undefined || skillLevelId !== '') && !!categoryId && (categoryId !== undefined || categoryId !== '') && // !!subCategoryId && (subCategoryId !== undefined || subCategoryId !== '') &&\n        !!ageRangeId && (ageRangeId !== undefined || ageRangeId !== '') && !!externalResources && (externalResources !== undefined || externalResources !== '') && !!ageRangeId && (ageRangeId !== undefined || ageRangeId !== '')) {\n          if (!!thumbnailImage && thumbnailImage.length > 0) {\n            if (!!availableDatesTemp && availableDatesTemp.length > 0 && (minLearners !== undefined || minLearners > -1) && (maxLearners !== undefined || maxLearners > minLearners) && !!startTime && (startTime !== undefined || startTime !== '') && !!endTime && (endTime !== undefined || endTime !== '')) {\n              if (!!priceAmount && priceAmount !== '0.00') {\n                currentTabTemp = 5;\n              } else {\n                currentTabTemp = 4;\n              }\n            } else {\n              currentTabTemp = 3;\n            }\n          } else {\n            currentTabTemp = 2;\n          }\n        } else {\n          currentTabTemp = 1;\n        }\n\n        if (!!thumbnailImage && thumbnailImage.length > 0) {\n          document.getElementById(\"imageSrc\").value = thumbnailImage;\n        }\n\n        const selectedPricing = this.state.pricing.find(item => item.currency === priceCurrency && item.amount === priceAmount);\n        await this.setState(prevState => ({\n          thumbnailSrc: thumbnailImage,\n          thumbnailSource: thumbnailImage,\n          newClass: { ...prevState.newClass,\n            saveAsDraft: false,\n            // status: cStatus !== 'CSTAT001' ? 'CSTAT002' : 'CSTAT001',\n            status: 'CSTAT001',\n            title,\n            currentClassId: currentClassId,\n            description: classIntroduction,\n            learningGoals,\n            skillLevelId,\n            categoryId,\n            // subCategoryId,\n            ageRangeId,\n            learningMaterials: externalResources,\n            classType: classType || 'CLT002',\n            thumbnail: thumbnailImage,\n            currency: priceCurrency,\n            price: priceAmount,\n            pricingId: (selectedPricing === null || selectedPricing === void 0 ? void 0 : selectedPricing.pricingId) || null,\n            passingGrade,\n            timezone: timeZone || 'Asia/Manila',\n            availabilityStartDate: moment(availabilityStartDate).format('YYYY-MM-DD'),\n            availabilityEndDate: moment(availabilityEndDate).format('YYYY-MM-DD'),\n            // enrollmentStartDate: enrollmentStartDate ? moment(enrollmentStartDate).format('YYYY-MM-DD') : \"\",\n            // enrollmentEndDate: enrollmentEndDate ? moment(enrollmentEndDate).format('YYYY-MM-DD') : \"\",\n            recordedId,\n            lectures: lectures || [],\n            schedules: {\n              liveClassType: \"LCLT001\",\n              startTime,\n              endTime,\n              minLearners,\n              maxLearners,\n              timezone: timeZone || 'Asia/Manila',\n              dayAvailability,\n              scheduleLength: \"\",\n              // enrollmentStartDate: enrollmentStartDate ? moment(enrollmentStartDate).format('YYYY-MM-DD') : \"\",\n              // enrollmentEndDate: enrollmentEndDate ? moment(enrollmentEndDate).format('YYYY-MM-DD') : \"\",\n              availableDates: availableDatesTemp,\n              sessionNumber: !!availableDatesTemp && availableDatesTemp.length > 0 ? availableDatesTemp.length : null\n            }\n          },\n          fetchedDataLoading: false,\n          currentTab: currentTabTemp\n        }));\n\n        if (questions) {\n          questions.forEach(_ref => {\n            let {\n              questionDescription,\n              questionId,\n              choices\n            } = _ref;\n            const choiceArray = choices.map(_ref2 => {\n              let {\n                choiceDescription,\n                choiceId,\n                isAnswer\n              } = _ref2;\n              return {\n                choiceContent: choiceDescription,\n                choiceId,\n                isAnswer\n              };\n            });\n            var q = {\n              questionId,\n              questionContent: questionDescription,\n              choices: choiceArray\n            };\n            this.addQuestion(q);\n          });\n        }\n      }\n\n      if (this.props.classId) {\n        this.props.getDraft(this.props.classId);\n        this.setState({\n          hasDraft: true,\n          fetchedDataLoading: true\n        });\n      }\n\n      this.getNavItems(this.state.newClass.classType);\n    };\n\n    this.getNavItems = async classType => {\n      const navItems = [];\n\n      if (classType === 'CLT001') {\n        this.allNavItems.forEach(item => {\n          if (item.classType.indexOf('recorded') > -1) {\n            item.isDone = this.getTabStatus(item.type);\n            navItems.push(item);\n          }\n        });\n      } else {\n        this.allNavItems.forEach(item => {\n          if (item.classType.indexOf('live') > -1) {\n            item.isDone = this.getTabStatus(item.type);\n            navItems.push(item);\n          }\n        });\n      }\n\n      this.setState({\n        navItems\n      });\n    };\n\n    this.getCategories = async refCode => {\n      try {\n        const categoriesList = await api.post(\"/class-creation/getReferenceDetails\", {\n          refCode\n        });\n        this.state.refCategories = categoriesList.data.references;\n        var select = document.getElementById(\"categoryId\");\n\n        for (var i = 0; i < this.state.refCategories.length; i++) {\n          var obj = this.state.refCategories[i];\n          select.options[select.options.length] = new Option(obj.DESCRIPTION, obj.CODE);\n        }\n\n        if (this.props.classDetails !== undefined) {\n          select.value = this.state.newClass.categoryId; // this.getSubCategories(this.state.newClass.categoryId);\n        }\n      } catch (error) {// if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {// setLoading(false);\n      }\n    };\n\n    this.getPricing = async type => {\n      await getActivePricing((status, pricing) => {\n        if (status) {\n          this.setState({\n            pricing\n          });\n          const {\n            classDetails\n          } = this.props;\n\n          if (classDetails !== undefined) {\n            const {\n              priceAmount,\n              priceCurrency\n            } = classDetails;\n            const selectedPricing = pricing.find(item => item.currency === priceCurrency && item.amount === priceAmount);\n            this.setState(prevState => ({ ...prevState,\n              newClass: { ...prevState.newClass,\n                pricingId: (selectedPricing === null || selectedPricing === void 0 ? void 0 : selectedPricing.pricingId) || null\n              }\n            }));\n          }\n        }\n      }, type);\n    };\n\n    this.onUnload = event => {\n      if (this.state.dirty && !this.state.submitted) {\n        // Cancel the event as stated by the standard.\n        event.preventDefault(); // Older browsers supported custom message\n\n        event.returnValue = \"\";\n      }\n    };\n\n    this.submitClassAsPending = async (params, state, type) => {\n      if (!!this.state.newClass.passingGrade && this.state.newClass.questions.length < 1) {\n        this.setState({\n          error: \"You have set the passinge grade without the question/s\"\n        });\n        this.setState({\n          isLiveValid: false\n        });\n        window.scrollTo(500, 0);\n        return;\n      }\n\n      if ((!this.state.newClass.passingGrade || this.state.newClass.passingGrade === null || this.state.newClass.passingGrade === \"\") && this.state.newClass.questions.length > 0) {\n        this.setState({\n          error: \"You have set the question/s without the passing grade\"\n        });\n        this.setState({\n          isLiveValid: false\n        });\n        window.scrollTo(500, 0);\n        return;\n      }\n\n      this.setState({\n        isLiveValid: true\n      });\n      this.setState({\n        isLoading: true\n      });\n      await this.saveContent(this.state.newClass);\n      await this.saveThumbnail(this.state.newClass);\n\n      if (this.state.newClass.classType === 'CLT001') {\n        await this.saveRecordedClass(this.state.newClass);\n      } else {\n        await this.saveLiveClass(this.state.newClass);\n      }\n\n      await this.savePricing(this.state.newClass);\n      await this.saveQuizzes(this.state.newClass);\n      await this.saveAsPending(this.state.newClass); // if(this.props.classDetails === undefined){\n\n      this.setState(() => ({\n        modalShow: true\n      })); // }\n    };\n\n    this.saveContent = async (_ref3, showToast, cb) => {\n      let {\n        currentClassId,\n        ageRangeId,\n        categoryId,\n        description,\n        learningGoals,\n        learningMaterials,\n        skillLevelId,\n        // subCategoryId,\n        saveAsDraft: isDraft,\n        status,\n        // timeCommitment,\n        title\n      } = _ref3;\n\n      try {\n        this.setState({\n          isLoading: true\n        });\n        const {\n          email\n        } = this.props;\n        this.state.newClass.emailAddress = email;\n        await api.post(\"/class-creation/saveContent\", {\n          currentClassId,\n          emailAddress: email,\n          ageRangeId,\n          categoryId,\n          description,\n          learningGoals,\n          learningMaterials,\n          skillLevelId,\n          // subCategoryId,\n          // timeCommitment,\n          title,\n          status,\n          isDraft\n        }).then(result => {\n          this.state.newClass.currentClassId = result.data.classId;\n          this.state.accountId = result.data.accountId;\n\n          if (showToast === true) {\n            toast.success(\"Class Details has been successfully saved.\");\n          }\n\n          cb && cb(true);\n        });\n      } catch (error) {\n        console.log(error);\n        cb && cb(false);\n        toast.error(\"Failed saving class details. Please try again later.\"); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        this.setState({\n          isLoading: false\n        }); // setLoading(false);\n      }\n    };\n\n    this.saveThumbnail = async (_ref4, showToast, cb) => {\n      let {\n        currentClassId,\n        thumbnail\n      } = _ref4;\n      const thumbnailSource = document.getElementById(\"imageSrc\").value;\n      this.state.thumbnailSrc = thumbnailSource;\n\n      try {\n        // setLoading(true);\n        this.setState({\n          isLoading: true\n        });\n        const classResponse = await api.post(\"/class-creation/saveThumbnail\", {\n          currentClassId,\n          thumbnail: thumbnailSource\n        });\n        this.state.newClass.currentClassId = classResponse.data.classId;\n\n        if (showToast === true) {\n          toast.success(\"Class Thumbnail has been successfully saved.\");\n        }\n\n        cb && cb(true);\n      } catch (error) {\n        console.log(error);\n        cb && cb(false);\n        toast.error(\"Failed saving class thumbnail. Please try again later.\"); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        this.setState({\n          isLoading: false\n        }); // setLoading(false);\n      }\n    };\n\n    this.saveLiveClass = async (_ref5, showToast, cb) => {\n      let {\n        currentClassId,\n        classType,\n        schedules\n      } = _ref5;\n\n      try {\n        this.setState({\n          isLoading: true\n        });\n        const classResponse = await api.post(\"/class-creation/saveLiveClass\", {\n          currentClassId,\n          classType,\n          schedules\n        });\n\n        if (showToast === true) {\n          toast.success(\"Class Schedule has been successfully saved.\");\n        }\n\n        cb && cb(true);\n        this.state.newClass.currentClassId = classResponse.data.classId;\n      } catch (error) {\n        console.log(error.response);\n        cb && cb(false);\n        toast.error(\"Failed saving class schedule. Please try again later.\"); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.saveRecordedClass = async (_ref6, showToast, cb) => {\n      let {\n        currentClassId,\n        classType,\n        timezone,\n        enrollmentStartDate,\n        enrollmentEndDate,\n        availabilityStartDate,\n        availabilityEndDate,\n        recordedId\n      } = _ref6;\n\n      try {\n        this.setState({\n          isLoading: true\n        });\n        const classResponse = await api.post(\"/class-creation/saveRecordedClass\", {\n          currentClassId,\n          classType,\n          timezone,\n          enrollmentStartDate,\n          enrollmentEndDate,\n          availabilityStartDate,\n          availabilityEndDate,\n          recordedId\n        });\n\n        if (showToast === true) {\n          toast.success(\"Class Schedule has been successfully saved.\");\n        }\n\n        cb && cb(true);\n        this.state.newClass.currentClassId = classResponse.data.classId;\n        this.state.newClass.recordedId = classResponse.data.recordedId;\n      } catch (error) {\n        console.log(error.response);\n        cb && cb(false);\n        toast.error(\"Failed saving class schedule. Please try again later.\"); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.savePricing = async (_ref7, showToast, cb) => {\n      let {\n        currentClassId,\n        currency,\n        price\n      } = _ref7;\n\n      try {\n        this.setState({\n          isLoading: true\n        }); // setLoading(true);\n\n        const classResponse = await api.post(\"/class-creation/savePricing\", {\n          currentClassId,\n          currency: currency || this.state.pricing[0].currency,\n          price: price || this.state.pricing[0].amount\n        });\n\n        if (showToast === true) {\n          toast.success(\"Class Pricing has been successfully saved.\");\n        }\n\n        cb && cb(true);\n        this.state.newClass.currentClassId = classResponse.data.classId;\n      } catch (error) {\n        console.log(error);\n        cb && cb(false);\n        toast.error(\"Failed saving class price. Please try again later.\"); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        this.setState({\n          isLoading: false\n        }); // setLoading(false);\n      }\n    };\n\n    this.saveQuizzes = async (_ref8, showToast, cb) => {\n      let {\n        currentClassId,\n        passingGrade,\n        questions\n      } = _ref8;\n\n      try {\n        this.setState({\n          isLoading: true\n        }); // setLoading(true);\n\n        const newQuestions = await questions.filter(item => item.questionId === undefined);\n        const classResponse = await api.post(\"/class-creation/saveQuestions\", {\n          currentClassId,\n          passingGrade,\n          questions: newQuestions || []\n        });\n\n        if (this.props.classDetails !== undefined && showToast) {\n          toast.success(\"Class Pop Quiz has been successfully saved.\");\n        }\n\n        cb && cb(true);\n        this.state.newClass.currentClassId = classResponse.data.classId;\n      } catch (error) {\n        console.log(error);\n        cb && cb(false);\n        toast.error(\"Failed saving class pop quiz. Please try again later.\"); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        this.setState({\n          isLoading: false\n        }); // setLoading(false);\n      }\n    };\n\n    this.saveAsPending = async function (_ref9, cb) {\n      let {\n        currentClassId\n      } = _ref9;\n      let isNotSetActive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      try {\n        // setLoading(true);\n        _this.setState({\n          isLoading: true\n        });\n\n        const classResponse = await api.post(\"/class-creation/saveAsPending\", {\n          currentClassId\n        });\n        _this.state.newClass.currentClassId = classResponse.data.classId;\n\n        if (isNotSetActive) {\n          _this.setState(() => ({\n            modalShow: true\n          }));\n        }\n\n        cb && cb(true);\n      } catch (error) {\n        console.log(error);\n        cb && cb(false); // if (error.response) setError(error.response.status);\n        // else setError(\"NetworkError\");\n      } finally {\n        _this.setState({\n          isLoading: false\n        }); // setLoading(false);\n\n      }\n    };\n\n    this.modalUpdate = () => {\n      this.setState(() => ({\n        modalShow: false,\n        toDashboard: true\n      }));\n    };\n\n    this.redirectTo = path => {\n      setTimeout(() => {\n        this.setState({\n          redirect: path\n        });\n      }, 3000);\n    };\n\n    this.onInputChange = event => {\n      event.persist();\n\n      if (event.target.name === \"price\") {\n        this.setState(prevState => {\n          const newClass = { ...prevState.newClass\n          };\n          newClass.price = event.target.value >= 0 ? event.target.value : 0;\n          return {\n            newClass\n          };\n        });\n      }\n\n      if (event.target.name === \"categoryId\") {\n        // let selectedId = \".\" + event.target.value;\n        let selectedId = event.target.value; // this.getSubCategories(selectedId);\n\n        for (let el of document.querySelectorAll(\".allSubCat\")) el.style.disabled = true;\n\n        for (let el of document.querySelectorAll(selectedId)) el.style.disabled = false;\n      }\n\n      if (event.target.name === \"classType\") {\n        let selectedClassType = event.target.value;\n        this.getNavItems(event.target.value);\n        this.getPricing(selectedClassType);\n      }\n\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass[event.target.name] = event.target.value;\n        return {\n          newClass\n        };\n      });\n      this.setState({\n        dirty: true\n      });\n    };\n\n    this.onTimeSelect = (value, name) => {\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass[name] = value;\n        return {\n          newClass\n        };\n      });\n      this.setState({\n        dirty: true\n      });\n    };\n\n    this.onInputSelectChange = (filterName, labelName, label, valueName, value) => {\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass[labelName] = label;\n        newClass[valueName] = value;\n        return {\n          newClass\n        };\n      });\n\n      if (filterName) {\n        if (filterName === \"filterCategory\") {\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            }; // newClass.subCategoryId = \"\";\n            // newClass.subCategoryName = \"\";\n\n            return {\n              newClass\n            };\n          });\n        }\n\n        this.props.updateFilter(filterName, value);\n      }\n\n      this.setState({\n        dirty: true\n      });\n    };\n\n    this.addLecture = async (lecture, callback) => {\n      try {\n        await api.post(\"/class-creation/saveRecordedItem\", {\n          recordedId: this.state.newClass.recordedId,\n          ...lecture\n        }).then(async resp => {\n          toast.success('Module has been successfully added.');\n          lecture.id = resp.data.itemId;\n          const questions = lecture.questions;\n\n          if (questions) {\n            const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n              currentClassId: this.state.newClass.currentClassId,\n              itemId: resp.data.itemId,\n              questions\n            });\n            lecture.questions = questions.map((item, index) => {\n              item.isSaved = true;\n              item.questionId = questionResponse.data.questionIds[index];\n              return item;\n            });\n            this.setState(prevState => {\n              const newClass = { ...prevState.newClass\n              };\n              newClass.lectures.push(lecture);\n              return {\n                newClass\n              };\n            });\n          }\n\n          this.setState({\n            dirty: true\n          });\n          callback(true);\n        });\n      } catch (error) {\n        callback(false);\n        console.log(error);\n        toast.error('Failed saving some data. Please try again later.');\n      }\n    };\n\n    this.editLecture = async (index, lecture, callback) => {\n      try {\n        await api.post(\"/class-creation/updateRecordedItem\", {\n          recordedId: this.state.newClass.recordedId,\n          ...lecture\n        }).then(async resp => {\n          const questions = lecture.questions || [];\n          let newQuestions = await questions.filter(item => item.questionId === undefined && !item.isSaved);\n\n          if (newQuestions.length > 0) {\n            const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n              currentClassId: this.state.newClass.currentClassId,\n              itemId: lecture.id,\n              questions: newQuestions\n            });\n            newQuestions = newQuestions.map((item, index) => {\n              item.questionId = questionResponse.data.questionIds[index];\n              item.saved = true;\n              return item;\n            });\n            lecture.questions = questions.filter(item => !!item.questionId);\n          }\n\n          toast.success('Module has been successfully updated.');\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n            const lectureList = newClass.lectures;\n            lectureList[index] = lecture;\n            newClass.lectures = lectureList;\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n          callback(true);\n        });\n      } catch (error) {\n        callback(false);\n        console.log(error);\n        toast.error('Failed updating subject. Please try again later.');\n      }\n    };\n\n    this.removeLecture = async index => {\n      try {\n        //setLoading(true);\n        await api.post(\"/class-creation/deleteRecordedItem\", {\n          id: this.state.newClass.lectures[index].id\n        }).then(async resp => {\n          toast.success('Module has been removed.');\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n            newClass.lectures.splice(index, 1);\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n        toast.error('Failed deleting subject. Please try again later.');\n      }\n    };\n\n    this.addChapter = async (subjectIndex, chapter, callback) => {\n      try {\n        //setLoading(true);\n        await api.post(\"/class-creation/saveRecordedChapter\", {\n          recordedId: this.state.newClass.lectures[subjectIndex].id,\n          ...chapter\n        }).then(async resp => {\n          const questions = chapter.questions;\n\n          if (questions) {\n            const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n              currentClassId: this.state.newClass.currentClassId,\n              chapterId: resp.data.chapterId,\n              questions\n            });\n            chapter.questions = questions.map((item, index) => {\n              item.isSaved = true;\n              item.questionId = questionResponse.data.questionIds[index];\n              return item;\n            });\n          }\n\n          toast.success('Chapter has been successfully added.');\n          chapter.id = resp.data.chapterId;\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n\n            if (!newClass.lectures[subjectIndex].chapters) {\n              newClass.lectures[subjectIndex].chapters = [];\n            }\n\n            newClass.lectures[subjectIndex].chapters.push(chapter);\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n          callback(true);\n        });\n      } catch (error) {\n        callback(false);\n        console.log(error);\n        toast.error('Failed adding chapter. Please try again later.');\n      }\n    };\n\n    this.editChapter = async (subjectIndex, chapterIndex, chapter, callback) => {\n      try {\n        //setLoading(true);\n        await api.post(\"/class-creation/updateRecordedChapter\", {\n          chapterId: chapter.id,\n          ...chapter\n        }).then(async resp => {\n          const questions = chapter.questions || [];\n          let newQuestions = await questions.filter(item => item.questionId === undefined && !item.isSaved);\n\n          if (newQuestions.length > 0) {\n            const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n              currentClassId: this.state.newClass.currentClassId,\n              chapterId: chapter.id,\n              questions: newQuestions\n            });\n            newQuestions = newQuestions.map((item, index) => {\n              item.questionId = questionResponse.data.questionIds[index];\n              item.saved = true;\n              return item;\n            });\n            chapter.questions = questions.filter(item => !!item.saved || !!item.questionId).concat(newQuestions);\n          }\n\n          toast.success('Chapter has been updated.');\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n            const lectureList = newClass.lectures;\n            lectureList[subjectIndex].chapters[chapterIndex] = chapter;\n            newClass.lectures = lectureList;\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n          callback(true);\n        });\n      } catch (error) {\n        callback(false);\n        console.log(error);\n        toast.error('Failed adding chapter. Please try again later.');\n      }\n    };\n\n    this.removeChapter = async (subjectIndex, chapterIndex) => {\n      try {\n        //setLoading(true);\n        await api.post(\"/class-creation/deleteRecordedChapter\", {\n          chapterId: this.state.newClass.lectures[subjectIndex].chapters[chapterIndex].id\n        }).then(async resp => {\n          toast.success('Chapter has been removed.');\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n            newClass.lectures[subjectIndex].chapters.splice(chapterIndex, 1);\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n        toast.error('Failed deleting chapter. Please try again later.');\n      }\n    };\n\n    this.addTopic = async (subjectIndex, chapterIndex, topic, callback) => {\n      try {\n        // setLoading(true);\n        await api.post(\"/class-creation/saveRecordedTopic\", {\n          chapterId: this.state.newClass.lectures[subjectIndex].chapters[chapterIndex].id,\n          ...topic\n        }).then(async resp => {\n          const questions = topic.questions;\n\n          if (questions) {\n            const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n              currentClassId: this.state.newClass.currentClassId,\n              topicId: resp.data.topicId,\n              questions\n            });\n            topic.questions = questions.map((item, index) => {\n              item.questionId = questionResponse.data.questionIds[index];\n              item.isSaved = true;\n              return item;\n            });\n          }\n\n          toast.success('Topic has been successfully added.');\n          topic.id = resp.data.topicId;\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n\n            if (!newClass.lectures[subjectIndex].chapters[chapterIndex].topics) {\n              newClass.lectures[subjectIndex].chapters[chapterIndex].topics = [];\n            }\n\n            newClass.lectures[subjectIndex].chapters[chapterIndex].topics.push(topic);\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n          callback(true);\n        });\n      } catch (error) {\n        callback(false);\n        console.log(error);\n        toast.error('Failed adding chapter. Please try again later.');\n      }\n    };\n\n    this.editTopic = async (subjectIndex, chapterIndex, topicIndex, topic, callback) => {\n      try {\n        //setLoading(true);\n        await api.post(\"/class-creation/updateRecordedTopic\", {\n          topicId: topic.id,\n          ...topic\n        }).then(async resp => {\n          const questions = topic.questions || [];\n          let newQuestions = await questions.filter(item => item.questionId === undefined && !item.isSaved);\n\n          if (newQuestions.length > 0) {\n            const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n              currentClassId: this.state.newClass.currentClassId,\n              topicId: topic.id,\n              questions: newQuestions\n            });\n            newQuestions = newQuestions.map((item, index) => {\n              item.questionId = questionResponse.data.questionIds[index];\n              item.saved = true;\n              return item;\n            });\n            topic.questions = questions.filter(item => !!item.saved || !!item.questionId).concat(newQuestions);\n          }\n\n          toast.success('Topic has been updated.');\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n            const lectureList = newClass.lectures;\n            lectureList[subjectIndex].chapters[chapterIndex].topics[topicIndex] = topic;\n            newClass.lectures = lectureList;\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n          callback(true);\n        });\n      } catch (error) {\n        callback(false);\n        console.log(error);\n        toast.error('Failed updating topic. Please try again later.');\n      }\n    };\n\n    this.removeTopic = async (subjectIndex, chapterIndex, topicIndex) => {\n      try {\n        //setLoading(true);\n        await api.post(\"/class-creation/deleteRecordedTopic\", {\n          topicId: this.state.newClass.lectures[subjectIndex].chapters[chapterIndex].topics[topicIndex].id\n        }).then(async resp => {\n          toast.success('Topic has been removed.');\n          this.setState(prevState => {\n            const newClass = { ...prevState.newClass\n            };\n            newClass.lectures[subjectIndex].chapters[chapterIndex].topics.splice(topicIndex, 1);\n            return {\n              newClass\n            };\n          });\n          this.setState({\n            dirty: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n        toast.error('Failed removing topic. Please try again later.');\n      }\n    };\n\n    this.addSchedule = schedData => {\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass.schedules = { ...newClass.schedules,\n          ...schedData\n        };\n        return {\n          newClass\n        };\n      });\n      this.setState({\n        dirty: true,\n        hasDraft: false\n      });\n    };\n\n    this.addEmail = email => {\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass.emails.push(email);\n        return {\n          newClass\n        };\n      });\n      this.setState({\n        dirty: true\n      });\n    };\n\n    this.removeEmail = index => {\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass.emails.splice(index, 1);\n        return {\n          newClass\n        };\n      });\n      this.setState({\n        dirty: true\n      });\n    };\n\n    this.addQuestion = _ref10 => {\n      let {\n        questionContent,\n        choices,\n        questionId\n      } = _ref10;\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass.questions.push({\n          questionId,\n          questionContent,\n          choices\n        });\n        return {\n          newClass\n        };\n      });\n      this.setState({\n        dirty: true\n      });\n    };\n\n    this.removeQuestion = async (index, questionId) => {\n      if (questionId !== null) {\n        toast.success('Question has been successfully removed.');\n        this.setState(prevState => {\n          const newClass = { ...prevState.newClass\n          };\n          newClass.questions.splice(index, 1);\n          return {\n            newClass\n          };\n        });\n        this.setState({\n          dirty: true\n        });\n      } else {\n        await this.setState(prevState => {\n          const newClass = { ...prevState.newClass\n          };\n          newClass.questions.splice(index, 1);\n          return {\n            newClass\n          };\n        });\n        this.setState({\n          dirty: true\n        });\n      }\n    };\n\n    this.nextButton = async () => {\n      this.clearError();\n      const activeTab = this.state.activeTab;\n      window.scrollTo(500, 0);\n      let validated = false;\n      let success = false;\n\n      switch (this.state.activeTab) {\n        case 0:\n          {\n            validated = this.validateDetails(this.state.newClass);\n\n            if (validated) {\n              await this.saveContent(this.state.newClass, true, status => {\n                success = status;\n              });\n            }\n\n            break;\n          }\n\n        case 1:\n          {\n            validated = this.validatedThumbnail();\n\n            if (validated) {\n              await this.saveThumbnail(this.state.newClass, true, status => {\n                success = status;\n              });\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            validated = this.validateContent();\n\n            if (validated) {\n              if (this.state.newClass.classType === 'CLT001') {\n                await this.saveRecordedClass(this.state.newClass, true, status => {\n                  success = status;\n                });\n              } else {\n                await this.saveLiveClass(this.state.newClass, true, status => {\n                  success = status;\n                });\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            validated = true;\n\n            if (this.state.newClass.classType === 'CLT002') {\n              await this.savePricing(this.state.newClass, true, status => {\n                success = status;\n              });\n            } else {\n              success = true;\n            }\n\n            break;\n          }\n\n        case 4:\n          {\n            validated = true;\n\n            if (this.state.newClass.classType === 'CLT002') {\n              await this.saveQuizzes(this.state.newClass, false, status => {\n                if (status) {\n                  this.saveAsPending(this.state.newClass, status => {\n                    success = status;\n\n                    if (!status) {\n                      toast.error(\"Failed submitting class. Please try again later.\");\n                    }\n                  });\n                }\n              });\n            } else {\n              await this.savePricing(this.state.newClass, false, status => {\n                if (status) {\n                  this.saveAsPending(this.state.newClass, status => {\n                    success = status;\n\n                    if (!status) {\n                      toast.error(\"Failed submitting class. Please try again later.\");\n                    }\n                  });\n                }\n              });\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      if (validated && success) {\n        this.setState(prevState => {\n          const navItems = [...prevState.navItems];\n          navItems[activeTab].isDone = true;\n          return { ...prevState,\n            navItems,\n            activeTab: activeTab + 1\n          };\n        });\n      }\n    };\n\n    this.validateDetails = _ref11 => {\n      let {\n        ageRangeId,\n        categoryId,\n        description,\n        learningGoals,\n        learningMaterials,\n        skillLevelId,\n        // subCategoryId,\n        // timeCommitment,\n        title\n      } = _ref11;\n\n      if (!ageRangeId || !categoryId || !description || !learningGoals || !learningMaterials || !skillLevelId || // !subCategoryId ||\n      // !timeCommitment ||\n      !title) {\n        this.setState({\n          error: \"All fields are required\"\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.validatedThumbnail = () => {\n      const thumbnailSource = document.getElementById(\"imageSrc\").value;\n\n      if (!thumbnailSource) {\n        this.setState({\n          error: \"A picture is required for your class\"\n        });\n      } else {\n        return true;\n      }\n    };\n\n    this.validateContent = (state, type) => {\n      if (this.state.newClass.classType === 'CLT002') {\n        if (!this.state.newClass.schedules.sessionNumber || this.state.newClass.schedules.sessionNumber === null) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Please encode the number of sessions\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.sessionNumber === 0) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Minimum number of sessions is one (1)\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.minLearners === null || this.state.newClass.schedules.minLearners === undefined || this.state.newClass.schedules.minLearners === '') {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Please encode the minimum number of learners\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.maxLearners === null || this.state.newClass.schedules.maxLearners === undefined || this.state.newClass.schedules.maxLearners === '') {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Please encode the maximum number of learners\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.maxLearners === 0) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Maximum number of learners must be greater than zero (0)\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.maxLearners < this.state.newClass.schedules.minLearners) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Maximum number of learners must not be less than the minimum number of learners.\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.startTime === null || this.state.newClass.schedules.startTime === \"\" || isNaN(this.state.newClass.schedules.startTime) && !(typeof this.state.newClass.schedules.startTime === \"string\")) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Please select the start time of the class with the proper format (e.g 12:00 am)\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.endTime === null || this.state.newClass.schedules.endTime === \"\" || isNaN(this.state.newClass.schedules.endTime) && !(typeof this.state.newClass.schedules.endTime === \"string\")) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Please select the end time of the class with the proper format (e.g 12:00 am)\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        } // if (this.state.newClass.schedules.enrollmentStartDate === null || this.state.newClass.schedules.enrollmentStartDate === \"\")\n        // {\n        //   window.scrollTo(500, 0);\n        //   this.setState({ error: \"Please select the Enrollment Start Date of the class.\" });\n        //   this.setState({ isLiveValid: false });\n        //   return false;\n        // }\n        // if (this.state.newClass.schedules.enrollmentEndDate === null || this.state.newClass.schedules.enrollmentEndDate === \"\")\n        // {\n        //   window.scrollTo(500, 0);\n        //   this.setState({ error: \"Please select the Enrollment End Date of the class.\" });\n        //   this.setState({ isLiveValid: false });\n        //   return false;\n        // }\n\n\n        const startTime = dayjs(this.state.newClass.schedules.startTime, \"h:mm\");\n        const endTime = dayjs(this.state.newClass.schedules.endTime, \"h:mm\");\n        const startToEndTimeDiff = startTime.diff(endTime, \"minutes\");\n\n        if (startToEndTimeDiff >= 0) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"End time must not be earlier or equal to the start time.\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        if (this.state.newClass.schedules.sessionNumber > 0) {\n          if (this.state.newClass.schedules.sessionNumber === 1) {\n            if (this.state.newClass.schedules.availableDates.length === 0) {\n              window.scrollTo(500, 0);\n              this.setState({\n                error: \"Please select the preferred date/s in the calendar\"\n              });\n              this.setState({\n                isLiveValid: false\n              });\n              return false;\n            } else if (this.state.newClass.schedules.availableDates.length > 1) {\n              window.scrollTo(500, 0);\n              this.setState({\n                error: \"Number of selected date/s should not exceed the number of session/s\"\n              });\n              this.setState({\n                isLiveValid: false\n              });\n              return false;\n            }\n          } else {\n            if (this.state.newClass.schedules.availableDates.length === 0) {\n              window.scrollTo(500, 0);\n              this.setState({\n                error: \"Please select the preferred dates in the calendar\"\n              });\n              this.setState({\n                isLiveValid: false\n              });\n              return false;\n            }\n\n            if (this.state.newClass.schedules.availableDates.length < this.state.newClass.schedules.sessionNumber) {\n              window.scrollTo(500, 0);\n              this.setState({\n                error: \"Number of selected date/s does not correspond to the number of session/s\"\n              });\n              this.setState({\n                isLiveValid: false\n              });\n              return false;\n            } else if (this.state.newClass.schedules.availableDates.length > this.state.newClass.schedules.sessionNumber) {\n              window.scrollTo(500, 0);\n              this.setState({\n                error: \"Number of selected date/s should not exceed the number of session/s\"\n              });\n              this.setState({\n                isLiveValid: false\n              });\n              return false;\n            }\n          }\n        }\n\n        this.setState({\n          isLiveValid: true\n        });\n        return true;\n      } else {\n        // if (this.state.newClass.enrollmentStartDate === null || this.state.newClass.enrollmentEndDate === null || this.state.newClass.availabilityStartDate === null || this.state.newClass.availabilityEndDate === null )\n        if (this.state.newClass.availabilityStartDate === null || this.state.newClass.availabilityEndDate === null) {\n          window.scrollTo(500, 0);\n          this.setState({\n            error: \"Availability Date is required.\"\n          });\n          this.setState({\n            isLiveValid: false\n          });\n          return false;\n        }\n\n        this.setState({\n          isLiveValid: true\n        });\n        return true;\n      }\n    };\n\n    this.validateModule = () => {\n      if (this.state.newClass.lectures.length < 1) {\n        window.scrollTo(500, 0);\n        this.setState({\n          error: \"Please add atleast one (1) module\"\n        });\n        this.setState({\n          isLiveValid: false\n        });\n        return false;\n      }\n\n      this.setState({\n        isLiveValid: true\n      });\n      return true;\n    };\n\n    this.validatePrice = price => {\n      if (price <= 0) {\n        this.setState({\n          error: \"Price must be more than 0 dollars\"\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.previousButton = () => {\n      const activeTab = this.state.activeTab;\n      this.clearError();\n      window.scrollTo(500, 0);\n      this.setState({\n        activeTab: activeTab - 1\n      });\n    };\n\n    this.setActive = async (selectedId, itemType) => {\n      if (!!selectedId && !!itemType) {\n        this.clearError();\n        const activeTab = this.state.activeTab;\n        window.scrollTo(500, 0);\n        let validated = false;\n        let success = false;\n\n        switch (this.state.activeTab) {\n          case 0:\n            {\n              validated = this.validateDetails(this.state.newClass);\n\n              if (validated) {\n                await this.saveContent(this.state.newClass, true, status => {\n                  success = status;\n                });\n              }\n\n              break;\n            }\n\n          case 1:\n            {\n              validated = this.validatedThumbnail();\n\n              if (validated) {\n                await this.saveThumbnail(this.state.newClass, true, status => {\n                  success = status;\n                });\n              }\n\n              break;\n            }\n\n          case 2:\n            {\n              validated = this.validateContent();\n\n              if (validated) {\n                if (this.state.newClass.classType === 'CLT001') {\n                  await this.saveRecordedClass(this.state.newClass, true, status => {\n                    success = status;\n                  });\n                } else {\n                  await this.saveLiveClass(this.state.newClass, true, status => {\n                    success = status;\n                  });\n                }\n              }\n\n              break;\n            }\n\n          case 3:\n            {\n              validated = true;\n\n              if (this.state.newClass.classType === 'CLT002') {\n                await this.savePricing(this.state.newClass, true, status => {\n                  success = status;\n                });\n              } else {\n                success = true;\n              }\n\n              break;\n            }\n\n          case 4:\n            {\n              validated = true;\n\n              if (this.state.newClass.classType === 'CLT002') {\n                await this.saveQuizzes(this.state.newClass, false, status => {\n                  if (status) {\n                    this.saveAsPending(this.state.newClass, status => {\n                      // success = status\n                      if (!status) {\n                        toast.error(\"Failed submitting class. Please try again later.\");\n                      }\n                    }, false);\n                  }\n                });\n              } else {\n                await this.savePricing(this.state.newClass, false, status => {\n                  if (status) {\n                    this.saveAsPending(this.state.newClass, status => {\n                      // success = status\n                      if (!status) {\n                        toast.error(\"Failed submitting class. Please try again later.\");\n                      }\n                    }, false);\n                  }\n                });\n              }\n\n              break;\n            }\n\n          default:\n            return;\n        }\n\n        if (validated && success || !!validated && parseInt(this.state.activeTab) === 4) {\n          this.setState(prevState => {\n            const navItems = [...prevState.navItems];\n            navItems[activeTab].isDone = true;\n            return { ...prevState,\n              navItems,\n              activeTab: selectedId\n            };\n          });\n        }\n      }\n    };\n\n    this.toolkitListener = modal => {\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.getTabStatus = tab => {\n      if (tab === 'details') {\n        let keys = ['title', 'categoryId', 'ageRangeId', 'skillLevelId', 'description', 'learningGoals', 'learningMaterials'];\n        let countDetails = 0;\n        keys.forEach(item => {\n          if (!!this.state.newClass[item] && this.state.newClass[item] !== '') {\n            countDetails++;\n          }\n        });\n        if (countDetails === keys.length) return true;else return false;\n      }\n\n      if (tab === 'media') {\n        // let value = !!document.getElementById(\"imageSrc\") ? document.getElementById(\"imageSrc\").value : null;\n        if (!!this.state.newClass.thumbnail && this.state.newClass.thumbnail !== '') {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      if (tab === 'schedule') {\n        let keys = this.state.newClass.classType === 'CLT001' ? ['availabilityStartDate', 'availabilityStartDate', 'timezone'] : ['sessionNumber', 'minLearners', 'maxLearners', 'timezone', 'startTime', 'endTime', 'availableDates'];\n        let countSched = 0;\n\n        if (this.state.newClass.classType === 'CLT002') {\n          keys.forEach(item => {\n            if (item !== 'minLearners' && item !== 'maxLearners' && item !== 'sessionNumber' && !!this.state.newClass.schedules && !!this.state.newClass.schedules[item] && this.state.newClass.schedules[item] !== '') {\n              countSched++;\n            } else if (item === 'minLearners') {\n              if ((this.state.newClass.schedules[item] !== undefined || this.state.newClass.schedules[item] !== null || this.state.newClass.schedules[item] !== '') && this.state.newClass.schedules[item] > -1) {\n                countSched++;\n              }\n            } else if (item === 'maxLearners') {\n              if ((this.state.newClass.schedules[item] !== undefined || this.state.newClass.schedules[item] !== null || this.state.newClass.schedules[item] !== '') && this.state.newClass.schedules[item] > 0 && this.state.newClass.schedules['minLearners'] <= this.state.newClass.schedules[item]) {\n                countSched++;\n              }\n            } else if (item === 'sessionNumber') {\n              if (!!this.state.newClass.schedules[item] && this.state.newClass.schedules[item] > 0) {\n                countSched++;\n              }\n            }\n          });\n\n          if (countSched === keys.length && this.state.newClass.classType === 'CLT002' && !!this.state.newClass.schedules.sessionNumber && !!this.state.newClass.schedules.availableDates && this.state.newClass.schedules.availableDates.length === this.state.newClass.schedules.sessionNumber) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          keys.forEach(item => {\n            if (this.state.newClass[item] !== null || this.state.newClass[item] === '') {\n              countSched++;\n            }\n          });\n\n          if (countSched === keys.length) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n\n      if (tab === 'pricing') {\n        if (!!this.state.newClass.price && this.state.newClass.price !== \"0.00\" || this.state.currentTab >= 5) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      if (tab === 'popquiz') {\n        if (!!this.state.newClass.passingGrade && this.state.newClass.passingGrade !== \"\" && !!this.state.newClass.questions && this.state.newClass.questions.length > 0) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      if (tab === 'module') {\n        if (!!this.state.newClass.lectures && this.state.newClass.lectures.length > 0) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    };\n\n    this.clearError = () => {\n      this.setState({\n        error: ''\n      });\n    };\n\n    this.uploadImage = image => {\n      this.setState(prevState => {\n        const newClass = { ...prevState.newClass\n        };\n        newClass['thumbnail'] = image;\n        return {\n          newClass\n        };\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.hasDraft !== this.props.hasDraft) {\n      if (Object.keys(this.props.draft).length > 0) {\n        const {\n          schedules\n        } = this.props.draft;\n        let selectedSchedules = schedules;\n\n        if (schedules) {\n          selectedSchedules = { ...schedules,\n            startDate: dayjs(schedules.startDate).format(\"YYYY-MM-DD\").toString(),\n            endDate: dayjs(schedules.endDate).format(\"YYYY-MM-DD\").toString()\n          };\n        }\n\n        this.setState(prevState => ({\n          newClass: { ...prevState.newClass,\n            ...this.props.draft,\n            schedules: selectedSchedules\n          },\n          fetchedDataLoading: false\n        }));\n      }\n    }\n  }\n\n  /*-------------------------------------------*\\\n    Lifecycle Methods\n  \\*-------------------------------------------*/\n  componentDidMount() {\n    // const { accountNumber, classDetails } = this.props;\n    // if (!accountNumber && !classDetails){\n    //   this.setState({payoutModalShow: true}); \n    // } else {\n    this.getCategories(\"LMS001\");\n    this.getPricing(this.state.newClass.classType);\n    this.getData(); // }\n    // window.addEventListener(\"beforeunload\", this.onUnload);\n  }\n\n  render() {\n    if (this.state.toDashboard) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/classes\",\n        replace: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      status,\n      message,\n      loading\n    } = this.props;\n    const thumbnail = this.state.thumbnailSrc ? this.state.thumbnailSrc : this.state.newClass.thumbnail;\n\n    if (status === 1 && message && !this.state.newClass.saveAsDraft) {\n      this.redirectTo(\"/teacher-portal/class-masterlist\");\n    }\n\n    const addModuleNext = () => {\n      const module = this.state.newClass.lectures;\n\n      if (module.length > 0) {\n        this.nextButton(4);\n      } else {\n        toast.warning(\"Please Add Module\");\n      }\n    };\n\n    const pricingNextBtn = () => {\n      const price = this.state.newClass.price;\n\n      if (price) {\n        this.nextButton(5);\n      } else {\n        toast.warning(\"Please Select Pricing\");\n      }\n    }; // const { fetchedDataLoading } = this.state;\n\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 p-20\",\n            style: {\n              paddingLeft: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: \"Steps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1753,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.state.navItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `list-group-item ${this.state.activeTab === index && 'active'}`,\n                id: `nav-${item.type}-tab` // data-toggle=\"tab\"\n                // href={`#nav-${item.type}`}\n                ,\n                role: \"tab\",\n                \"aria-controls\": `nav-${item.type}`,\n                \"aria-selected\": \"true\",\n                disabled: item.isDone === false,\n                style: {\n                  pointerEvents: item.isDone || this.state.activeTab === index || index > 0 && this.state.navItems[index - 1].isDone ? \"auto\" : \"none\",\n                  cursor: item.isDone || this.state.activeTab === index || index > 0 && this.state.navItems[index - 1].isDone ? \"pointer\" : \"not-allowed\"\n                },\n                onClick: () => this.setActive(index, item.type),\n                children: [item.title, /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: 10,\n                    width: 10,\n                    background: item.isDone ? \"#A2CD3C\" : \"#F59C1E\",\n                    position: \"absolute\",\n                    top: \"50%\",\n                    transform: \"translateY(-50%)\",\n                    right: 13,\n                    borderRadius: \"50%\",\n                    opacity: this.state.activeTab === index || index > 0 && this.state.navItems[index - 1].isDone || this.state.navItems[index].isDone ? 1 : 0.2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1772,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1756,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1754,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-10 p-20\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card p-20\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tab-content lms-tab-content\",\n                  id: \"nav-tabContent\",\n                  children: [status === 1 ? /*#__PURE__*/_jsxDEV(Alert, {\n                    variant: \"success\",\n                    children: message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1796,\n                    columnNumber: 37\n                  }, this) : null, status === 2 ? /*#__PURE__*/_jsxDEV(Alert, {\n                    variant: \"danger\",\n                    style: {\n                      whiteSpace: \"pre-wrap\"\n                    },\n                    children: message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1798,\n                    columnNumber: 23\n                  }, this) : null, this.state.error ? /*#__PURE__*/_jsxDEV(Alert, {\n                    variant: \"danger\",\n                    style: {\n                      whiteSpace: \"pre-wrap\"\n                    },\n                    onClose: () => this.clearError(),\n                    dismissible: true,\n                    children: this.state.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1803,\n                    columnNumber: 23\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tab-pane fade ${this.state.activeTab === 0 && 'show active'}`,\n                    id: \"nav-details\",\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": \"nav-details-tab\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: \"Class Details\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1815,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1816,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group row\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-12\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"firstName\",\n                            children: \"What is the title of your online class or workshop/tutorial session?\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1819,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1823,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                            children: /*#__PURE__*/_jsxDEV(\"small\", {\n                              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"lms-input-sublabel\",\n                                children: \"The title should be unique and stand out among the other classes. Classes with similar titles will be edited and replaced.\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1826,\n                                columnNumber: 33\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1825,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1824,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"title\",\n                            name: \"title\",\n                            value: this.state.newClass.title ? this.state.newClass.title : \"\",\n                            onChange: this.onInputChange,\n                            placeholder: \"Write the class title here...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1833,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1818,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1817,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-6\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"firstName\",\n                            children: \"Select the category of your class.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1848,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1851,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-sublabel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1852,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            name: \"categoryId\",\n                            id: \"categoryId\",\n                            className: \"custom-select lms-portal-select\",\n                            classNamePrefix: \"select\",\n                            onChange: this.onInputChange,\n                            children: /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"\",\n                              children: \"Select Category\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1863,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1856,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1847,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-6\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"firstName\",\n                            children: \"Select your target age category.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1886,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1889,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-sublabel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1890,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            name: \"ageRangeId\",\n                            id: \"ageRangeId\",\n                            value: this.state.newClass.ageRangeId,\n                            onChange: this.onInputChange,\n                            className: \"custom-select lms-portal-select\",\n                            classNamePrefix: \"select\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"\",\n                              children: \"Select Target Age Category\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1902,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"AGE001\",\n                              children: \"4-6 years\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1903,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"AGE002\",\n                              children: \"7-10 years\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1904,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"AGE003\",\n                              children: \"11-16 years\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1905,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"AGE004\",\n                              children: \"17-19 years\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1906,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1894,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1866,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1846,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group row\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-6\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"firstName\",\n                            children: \"Select your target skill level\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1913,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1916,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-sublabel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1917,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            name: \"skillLevelId\",\n                            id: \"skillLevelId\",\n                            value: this.state.newClass.skillLevelId,\n                            onChange: this.onInputChange,\n                            className: \"custom-select lms-portal-select\",\n                            classNamePrefix: \"select\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"\",\n                              children: \"Select Skill Level\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1928,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"SLVL001\",\n                              children: \"Basic\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1929,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"SLVL002\",\n                              children: \"Intermediate\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1930,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"SLVL003\",\n                              children: \"Advanced\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1931,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1920,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1912,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1910,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1935,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: \"Tell us more!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1936,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1937,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group row\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-12\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"firstName\",\n                            children: \"Provide a brief introduction of your class.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1940,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1943,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-sublabel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1944,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"description\",\n                            maxlength: \"2500\",\n                            name: \"description\",\n                            rows: \"4\",\n                            placeholder: \"Write the class description here...\",\n                            value: this.state.newClass.description ? this.state.newClass.description : \"\",\n                            onChange: this.onInputChange\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1948,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1939,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1938,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1966,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1966,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-6\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"learningGoals\",\n                            children: \"Indicate the learning goals and/or outcomes for this class.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1968,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"learningGoals\",\n                            maxlength: \"2500\",\n                            name: \"learningGoals\",\n                            rows: \"4\",\n                            placeholder: \"Write the learnings goals here...\",\n                            onChange: this.onInputChange,\n                            value: this.state.newClass.learningGoals ? this.state.newClass.learningGoals : \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1971,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1967,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-6\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            htmlFor: \"learningMaterials\",\n                            children: \"Indicate materials and resources needed for the class.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1988,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"learningMaterials\",\n                            maxlength: \"2500\",\n                            name: \"learningMaterials\",\n                            rows: \"4\",\n                            placeholder: \"Write the learning materials and external resources here...\",\n                            onChange: this.onInputChange,\n                            value: this.state.newClass.learningMaterials ? this.state.newClass.learningMaterials : \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1991,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1987,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1965,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mt-4 mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-megna btn-outline-megna text-megna float-right\",\n                          style: {\n                            // backgroundColor: \"#2c9cf8\",\n                            // color:  \"white\",\n                            outline: \"none\"\n                          },\n                          onClick: () => this.nextButton(2),\n                          disabled: this.state.isLoading,\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: this.state.isLoading ? 'inline-block' : 'none'\n                            },\n                            class: \"spinner-border spinner-border-sm btn-load\",\n                            role: \"status\",\n                            \"aria-hidden\": \"true\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2021,\n                            columnNumber: 29\n                          }, this), 'Next']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2011,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2024,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2025,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2010,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1814,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1808,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tab-pane fade ${this.state.activeTab === 1 && 'show active'}`,\n                    id: \"nav-media\",\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": \"nav-media-tab\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Class Thumbnail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2037,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2038,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-6\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-label\",\n                            children: \"Upload a thumbnail image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2042,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2045,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-sublabel\",\n                            children: [\"Image size: not more than 3MB\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2048,\n                              columnNumber: 29\n                            }, this), \"Image formats: jpg, png, jpeg\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2050,\n                              columnNumber: 29\n                            }, this), \"Accepted file formats: jpg, png, jpeg\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2052,\n                              columnNumber: 29\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2046,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2041,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              position: \"relative\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: /*#__PURE__*/_jsxDEV(Uploader, {\n                                uploadImage: this.uploadImage\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2058,\n                                columnNumber: 33\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2057,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2056,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2055,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2040,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-6\",\n                        style: {\n                          textAlign: \"center\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          id: \"imageFile\",\n                          src: thumbnail ? thumbnail : \"/assets/images/image-placeholder.jpg\",\n                          alt: \"thumbnail\",\n                          className: \"img-fluid\",\n                          style: {\n                            maxHeight: \"200px\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2064,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: \"imageSrc\",\n                          type: \"text\",\n                          style: {\n                            display: \"none\"\n                          },\n                          onChange: this.onInputChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2075,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2063,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2039,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2083,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-4 mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info text-white\",\n                        onClick: () => this.previousButton(1),\n                        children: \"Previous\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2085,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-megna btn-outline-megna text-megna float-right\",\n                        style: {\n                          // backgroundColor: !loading ? \"#2c9cf8\" : \"transparent\",\n                          // color: !loading ? \"white\" : \"#2c9cf8\",\n                          outline: \"none\"\n                        },\n                        onClick: () => this.nextButton(3),\n                        disabled: this.state.isLoading,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            display: this.state.isLoading ? 'inline-block' : 'none'\n                          },\n                          class: \"spinner-border spinner-border-sm btn-load\",\n                          role: \"status\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2101,\n                          columnNumber: 27\n                        }, this), !loading ? \"Next\" : \"Saving...\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2091,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2084,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2031,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tab-pane fade ${this.state.activeTab === 2 && 'show active'}`,\n                    id: \"nav-schedule\",\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": \"nav-schedule-tab\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      htmlFor: \"firstName\",\n                      children: \"Class Schedule\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2114,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2117,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group row\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-12\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"lms-input-label\",\n                              htmlFor: \"classType\",\n                              children: \"Choose which type of class you want to create.\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2123,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2126,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                  className: \"lms-input-sublabel\",\n                                  htmlFor: \"classUrl\",\n                                  color: \"red\",\n                                  style: {\n                                    fontSize: \"12px\"\n                                  },\n                                  children: \"Class link will be generated upon approval of class and will be sent via Email.\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2129,\n                                  columnNumber: 35\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2128,\n                                columnNumber: 33\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2127,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2122,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            className: \"custom-select lms-portal-select\",\n                            id: \"classType\",\n                            name: \"classType\",\n                            value: this.state.newClass.classType,\n                            onChange: this.onInputChange,\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"CLT002\",\n                              selected: true,\n                              children: \"Live/Scheduled Class\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2145,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"CLT001\",\n                              children: \"Recorded Class\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2148,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2135,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2121,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2120,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2119,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-4\",\n                      children: [this.state.newClass.classType === \"CLT001\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-group row pl-3 pr-3\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"lms-input-sublabel\",\n                            children: \"Timezone\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2157,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(TimezonePicker, {\n                            value: this.state.newClass.timezone,\n                            name: \"timezone\",\n                            onChange: _ref12 => {\n                              let {\n                                id\n                              } = _ref12;\n                              return this.onTimeSelect(id, 'timezone');\n                            },\n                            size: SIZE.compact,\n                            overrides: {\n                              Select: {\n                                props: {\n                                  overrides: {\n                                    ControlContainer: {\n                                      style: _ref13 => {\n                                        let {\n                                          $theme\n                                        } = _ref13;\n                                        return {\n                                          borderColor: `#ced4da!important`,\n                                          borderRadius: `0.25em!important`,\n                                          borderWidth: `thin!important`,\n                                          backgroundColor: $theme.colors.white,\n                                          minHeight: `38px`\n                                        };\n                                      }\n                                    },\n                                    Input: {\n                                      style: _ref14 => {\n                                        let {\n                                          $theme\n                                        } = _ref14;\n                                        return {\n                                          cursor: `text`\n                                        };\n                                      }\n                                    },\n                                    InputContainer: {\n                                      style: _ref15 => {\n                                        let {\n                                          $theme\n                                        } = _ref15;\n                                        return {\n                                          cursor: `text`\n                                        };\n                                      }\n                                    },\n                                    ValueContainer: {\n                                      style: _ref16 => {\n                                        let {\n                                          $theme\n                                        } = _ref16;\n                                        return {\n                                          cursor: `pointer`\n                                        };\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2158,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2156,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row mt-4\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-12\",\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"lms-input-label\",\n                              htmlFor: \"availabilityStartDate\",\n                              children: \"Availability Date\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2240,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"form-group row\",\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"col-md-6\",\n                                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                  className: \"lms-input-label\",\n                                  htmlFor: \"availabilityStartDate\",\n                                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                    children: \"Start Date\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2246,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2245,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"date\",\n                                  className: \"form-control\",\n                                  id: \"availabilityStartDate\",\n                                  name: \"availabilityStartDate\",\n                                  placeholder: \"Availability Date\",\n                                  onChange: this.onInputChange,\n                                  value: this.state.newClass.availabilityStartDate,\n                                  min: this.state.minDate\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2248,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2244,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"col-md-6\",\n                                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                  className: \"lms-input-label\",\n                                  htmlFor: \"availabilityEndDate\",\n                                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                    children: \"End Date\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2261,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2260,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"date\",\n                                  className: \"form-control\",\n                                  id: \"availabilityEndDate\",\n                                  name: \"availabilityEndDate\",\n                                  placeholder: \"Availability Date\",\n                                  onChange: this.onInputChange,\n                                  value: this.state.newClass.availabilityEndDate,\n                                  min: this.state.newClass.availabilityStartDate\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2263,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2259,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2243,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2239,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2238,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2155,\n                        columnNumber: 73\n                      }, this), this.state.newClass.classType === \"CLT002\" && /*#__PURE__*/_jsxDEV(LiveClass, {\n                        onInputChange: this.onInputChange,\n                        classUrl: this.state.newClass.classUrl,\n                        addedSchedules: this.state.newClass.schedules,\n                        addSchedule: this.addSchedule,\n                        sessionNumber: this.state.newClass.schedules.sessionNumber,\n                        removeSchedule: this.removeSchedule,\n                        schedules: this.state.newClass.schedules,\n                        title: this.state.newClass.title,\n                        validated: this.state.isLiveValid,\n                        nextButton: this.nextButton,\n                        previousButton: this.previousButton,\n                        classDetails: this.props.classDetails\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2281,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2154,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-5\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info text-white\",\n                        onClick: () => this.previousButton(2),\n                        children: \"Previous\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2316,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-megna btn-outline-megna text-megna float-right\",\n                        onClick: () => this.nextButton(4),\n                        disabled: this.state.isLoading,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            display: this.state.isLoading ? 'inline-block' : 'none'\n                          },\n                          class: \"spinner-border spinner-border-sm btn-load\",\n                          role: \"status\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2327,\n                          columnNumber: 29\n                        }, this), 'Next']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2322,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2315,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2108,\n                    columnNumber: 21\n                  }, this), this.state.newClass.classType === \"CLT001\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tab-pane fade ${this.state.activeTab === 3 && this.state.newClass.classType === 'CLT001' && 'show active'}`,\n                    id: \"nav-module\",\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": \"nav-module-tab\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      htmlFor: \"firstName\",\n                      children: \"Class Modules\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2340,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2341,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(RecordedClass, {\n                          availabilityStartDate: this.state.newClass.availabilityStartDate,\n                          availabilityEndDate: this.state.newClass.availabilityEndDate,\n                          addedLectures: this.state.newClass.lectures,\n                          addLecture: this.addLecture,\n                          addChapter: this.addChapter,\n                          addTopic: this.addTopic,\n                          removeLecture: this.removeLecture,\n                          removeChapter: this.removeChapter,\n                          removeTopic: this.removeTopic,\n                          editLecture: this.editLecture,\n                          editChapter: this.editChapter,\n                          editTopic: this.editTopic,\n                          nextButton: this.nextButton,\n                          previousButton: this.previousButton\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2345,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2344,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2343,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-5\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info text-white\",\n                        onClick: () => this.previousButton(2),\n                        children: \"Previous\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2364,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-megna btn-outline-megna text-megna float-right\",\n                        onClick: addModuleNext,\n                        disabled: this.state.isLoading,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            display: this.state.isLoading ? 'inline-block' : 'none'\n                          },\n                          class: \"spinner-border spinner-border-sm btn-load\",\n                          role: \"status\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2375,\n                          columnNumber: 29\n                        }, this), 'Next']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2370,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2363,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2334,\n                    columnNumber: 69\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tab-pane fade ${(this.state.activeTab === 3 && this.state.newClass.classType === 'CLT002' || this.state.activeTab === 4 && this.state.newClass.classType === 'CLT001') && 'show active'}`,\n                    id: \"nav-pricing\",\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": \"nav-pricing-tab\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      htmlFor: \"firstName\",\n                      children: \"Class Pricing\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2389,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2392,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-12\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"lms-input-label\",\n                          htmlFor: \"firstName\",\n                          children: \"Indicate Enrollment Fee Per Student\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2395,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2398,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"lms-input-sublabel\",\n                          children: \"Check this for the recommended course pricing guide.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2399,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2394,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"lms-input-label\",\n                          htmlFor: \"currency\",\n                          children: /*#__PURE__*/_jsxDEV(\"b\", {\n                            children: \"Price per session\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2405,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2404,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"custom-select lms-portal-select\",\n                          id: \"currency\",\n                          name: \"pricingId\",\n                          \"aria-describedby\": \"pricingSelect\" // onClick={this.getPricing(this.state.newClass.classType)}\n                          ,\n                          defaultValue: this.state.newClass.pricingId,\n                          onChange: event => {\n                            this.setState(prevState => {\n                              const newClass = { ...prevState.newClass\n                              };\n                              const value = this.state.pricing.find(item => item.pricingId.toString() === event.target.value.toString());\n                              newClass.pricingId = value.pricingId;\n                              newClass.currency = value.currency;\n                              newClass.price = value.amount;\n                              return {\n                                newClass\n                              };\n                            });\n                          } // disabled={true}\n                          ,\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: null,\n                            selected: this.state.newClass.pricingId === null,\n                            disabled: true,\n                            children: \"Select Pricing\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2428,\n                            columnNumber: 29\n                          }, this), this.state.pricing.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: item.pricingId,\n                            selected: item.pricingId === this.state.newClass.pricingId,\n                            children: `${item.currency} ${item.amount}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2431,\n                            columnNumber: 62\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2407,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          id: \"pricingSelect\",\n                          className: \"form-text\",\n                          style: {\n                            color: '#ef5350'\n                          },\n                          children: \"Note: Price list may change without prior notice.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2435,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2403,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                        className: \"table table-striped m-4\",\n                        style: {\n                          maxWidth: '94%'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          style: {\n                            backgroundColor: 'lightsteelblue'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Price\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2439,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Number of Sessions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2440,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Total\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2441,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2438,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: toMoneyFormat(this.state.newClass.price, this.state.newClass.currency)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2445,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: this.state.newClass.classType === 'CLT002' ? this.state.newClass.schedules.sessionNumber : this.state.newClass.lectures.length\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2446,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: this.state.newClass.classType === 'CLT002' ? toMoneyFormat(this.state.newClass.schedules.sessionNumber * this.state.newClass.price, this.state.newClass.currency) : toMoneyFormat(this.state.newClass.lectures.length * this.state.newClass.price, this.state.newClass.currency)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2447,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2444,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2443,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2437,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2393,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-5\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info text-white\",\n                        onClick: () => this.previousButton(3),\n                        children: \"Previous\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2453,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-megna btn-outline-megna text-megna float-right\",\n                        onClick: pricingNextBtn,\n                        disabled: this.state.isLoading,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            display: this.state.isLoading ? 'inline-block' : 'none'\n                          },\n                          class: \"spinner-border spinner-border-sm btn-load\",\n                          role: \"status\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2464,\n                          columnNumber: 27\n                        }, this), this.state.newClass.classType === 'CLT001' ? 'Submit' : 'Next']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2459,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2452,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2383,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tab-pane fade ${this.state.activeTab === 4 && this.state.newClass.classType === 'CLT002' && 'show active'}`,\n                    id: \"nav-popquiz\",\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": \"nav-popquiz-tab\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      htmlFor: \"firstName\",\n                      children: \"Pop Quiz\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2478,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2481,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group row\",\n                      children: /*#__PURE__*/_jsxDEV(PopQuizMaintenance, {\n                        onInputChange: this.onInputChange,\n                        passingGrade: this.state.newClass.passingGrade,\n                        addedQuestions: this.state.newClass.questions,\n                        addQuestion: this.addQuestion,\n                        removeQuestion: this.removeQuestion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2483,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2482,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-5\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info text-white\",\n                        onClick: () => this.previousButton(4),\n                        children: \"Previous\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2492,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-megna btn-outline-megna text-megna float-right float-right\",\n                        onClick: () => {\n                          this.nextButton(5);\n                        },\n                        disabled: this.state.isLoading,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            display: this.state.isLoading ? 'inline-block' : 'none'\n                          },\n                          class: \"spinner-border spinner-border-sm btn-load\",\n                          role: \"status\",\n                          \"aria-hidden\": \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2503,\n                          columnNumber: 29\n                        }, this), 'Submit']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2498,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2491,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2472,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1795,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1794,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1793,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1792,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1751,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"m\",\n        show: this.state.modalShow,\n        backdrop: \"static\",\n        keyboard: false,\n        onHide: () => this.setState({\n          modalShow: false\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: `Class ${this.props.classDetails === undefined ? 'Created' : 'Updated'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2524,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [\"Successfully \", this.props.classDetails === undefined ? 'created a new class' : 'updated the class', \". Kindly wait for the approval\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => this.modalUpdate(),\n            children: \"Return To Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2530,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"l\",\n        backdrop: \"static\",\n        keyboard: false,\n        show: this.state.payoutModalShow,\n        onHide: () => this.setState({\n          payoutModalShow: false\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Set up Payout Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2538,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2537,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '15px'\n            },\n            children: \"To continue creating a class, you need to setup your payout account first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2543,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/profile\",\n              children: \"Click here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2547,\n              columnNumber: 13\n            }, this), \" and proceed to \\\"Payout Account\\\" tab to set up payout account now or click Proceed button.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2546,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '15px'\n            },\n            children: [\" If the link does not work, just navigate to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2549,\n              columnNumber: 86\n            }, this), \" \", '>', \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Payout Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2549,\n              columnNumber: 109\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2549,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2542,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            href: \"/profile\",\n            type: \"button\",\n            children: \"Proceed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2552,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2551,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2536,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1749,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/CreateClass/component/ClassMaintenance.jsx"],"names":["React","Fragment","Component","Navigate","LiveClass","RecordedClass","PopQuizMaintenance","Uploader","toast","dayjs","customParseFormat","TimezonePicker","SIZE","toMoneyFormat","Alert","Modal","Button","getActivePricing","api","moment","extend","ClassMaintenance","state","navItems","toDashboard","accountId","modalShow","payoutModalShow","classType","refCategories","refAgeCategory","refSkillLevels","values","lecture","schedule","question","newClass","currentClassId","emailAddress","title","description","thumbnail","categoryId","ageRangeId","skillLevelId","classUrl","currency","price","learningGoals","learningMaterials","externalResources","saveAsDraft","lectures","schedules","emails","passingGrade","questions","status","pricingId","availabilityStartDate","availabilityEndDate","timezone","hasDraft","redirect","thumbnailSrc","thumbnailSource","tabNo","dirty","submitted","startDate","endDate","error","isLiveValid","isRecordedValid","isExclusiveValid","fetchedDataLoading","isLoading","currentTab","activeTab","pricing","minDate","Date","add","format","allNavItems","type","getData","setState","classDetails","props","undefined","classIntroduction","thumbnailImage","startTime","endTime","maxLearners","minLearners","dayAvailability","timeZone","availableDates","priceAmount","priceCurrency","recordedId","getPricing","availableDatesTemp","length","forEach","item","dateItem","aWeekFromNow","diff","push","currentTabTemp","document","getElementById","value","selectedPricing","find","amount","prevState","liveClassType","scheduleLength","sessionNumber","questionDescription","questionId","choices","choiceArray","map","choiceDescription","choiceId","isAnswer","choiceContent","q","questionContent","addQuestion","classId","getDraft","getNavItems","indexOf","isDone","getTabStatus","getCategories","refCode","categoriesList","post","data","references","select","i","obj","options","Option","DESCRIPTION","CODE","onUnload","event","preventDefault","returnValue","submitClassAsPending","params","window","scrollTo","saveContent","saveThumbnail","saveRecordedClass","saveLiveClass","savePricing","saveQuizzes","saveAsPending","showToast","cb","isDraft","email","then","result","success","console","log","classResponse","response","enrollmentStartDate","enrollmentEndDate","newQuestions","filter","isNotSetActive","modalUpdate","redirectTo","path","setTimeout","onInputChange","persist","target","name","selectedId","el","querySelectorAll","style","disabled","selectedClassType","onTimeSelect","onInputSelectChange","filterName","labelName","label","valueName","updateFilter","addLecture","callback","resp","id","itemId","questionResponse","index","isSaved","questionIds","editLecture","saved","lectureList","removeLecture","splice","addChapter","subjectIndex","chapter","chapterId","chapters","editChapter","chapterIndex","concat","removeChapter","addTopic","topic","topicId","topics","editTopic","topicIndex","removeTopic","addSchedule","schedData","addEmail","removeEmail","removeQuestion","nextButton","clearError","validated","validateDetails","validatedThumbnail","validateContent","isNaN","startToEndTimeDiff","validateModule","validatePrice","previousButton","setActive","itemType","parseInt","toolkitListener","modal","tab","keys","countDetails","countSched","uploadImage","image","componentDidUpdate","prevProps","Object","draft","selectedSchedules","toString","componentDidMount","render","message","loading","addModuleNext","module","warning","pricingNextBtn","paddingLeft","pointerEvents","cursor","height","width","background","position","top","transform","right","borderRadius","opacity","whiteSpace","outline","display","textAlign","maxHeight","fontSize","compact","Select","overrides","ControlContainer","$theme","borderColor","borderWidth","backgroundColor","colors","white","minHeight","Input","InputContainer","ValueContainer","removeSchedule","color","maxWidth"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { Fragment, Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport LiveClass from \"./LiveClass\";\nimport RecordedClass from \"./RecordedClass\";\nimport PopQuizMaintenance from \"./PopQuizMaintenance\";\nimport { Uploader } from \"../Uploader\";\nimport { toast } from 'react-toastify';\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { TimezonePicker } from \"baseui/timezonepicker\";\nimport { SIZE } from \"baseui/input\";\nimport { toMoneyFormat } from 'utils/utils';\nimport { Alert, Modal, Button } from \"react-bootstrap\";\nimport { getActivePricing } from \"api/pricing\";\nimport { api } from \"../../../api\";\nimport moment from 'moment';\n\ndayjs.extend(customParseFormat);\n// const DATE_TODAY = dayjs().format(\"YYYY-MM-DD\");\n\nexport class ClassMaintenance extends Component {\n  state = {\n    navItems: [],\n    toDashboard: false,\n    accountId: \"\",\n    modalShow: false,\n    payoutModalShow: false,\n    classType: \"\",\n    refCategories: [],\n    // refSubCategories: [],\n    refAgeCategory: [],\n    refSkillLevels: [],\n    values: [],\n    lecture: [],\n    schedule: [],\n    question: [],\n    newClass: {\n      currentClassId: \"\",\n      emailAddress: \"\",\n      title: \"\",\n      description: \"\",\n      thumbnail: \"\",\n      // teaser: '',\n      categoryId: \"\",\n      // subCategoryId: \"\",\n      ageRangeId: \"\",\n      skillLevelId: \"\",\n      classUrl: \"\",\n      currency: \"USD\",\n      price: \"\",\n      learningGoals: \"\",\n      learningMaterials: \"\",\n      externalResources: \"\",\n      // timeCommitment: \"\",\n      saveAsDraft: false,\n      classType: \"CLT002\",\n      lectures: [], // {title, description, videoPath}\n      schedules: {}, // {startDate, startTime, endDate, endTime, timezone, min, max}\n      emails: [],\n      passingGrade: \"\",\n      questions: [],\n      status: null,\n      pricingId: null,\n      // enrollmentStartDate: null,\n      // enrollmentEndDate: null,\n      availabilityStartDate: null,\n      availabilityEndDate: null,\n      timezone: \"Asia/Manila\"\n       // {questionContent:string, choices:[choiceContent:string, isAnswer:boolean]}\n    },\n    hasDraft: false,\n    redirect: \"\",\n    thumbnailSrc: \"\",\n    thumbnailSource: \"\",\n    // teaserSrc: '',\n    tabNo: 1,\n    dirty: false,\n    submitted: false,\n    startDate: \"\",\n    endDate: \"\",\n    error: \"\",\n    isLiveValid: false,\n    isRecordedValid: false,\n    isExclusiveValid: false,\n    fetchedDataLoading: false,\n    isLoading: false,\n    currentTab: 0,\n    activeTab: 0,\n    pricing: [],\n    minDate: (moment(new Date()).add(21, 'days')).format('YYYY-MM-DD')\n  };\n\n  allNavItems = [\n    {\n      type: 'details',\n      title: 'Details',\n      classType: ['live', 'recorded']\n    },\n    {\n      type: 'media',\n      title: 'Thumbnail',\n      classType: ['live', 'recorded']\n    },\n    {\n      type: 'schedule',\n      title: 'Schedule',\n      classType: ['live', 'recorded']\n    },\n    {\n      type: 'module',\n      title: 'Modules',\n      classType: ['recorded']\n    },\n    {\n      type: 'pricing',\n      title: 'Pricing',\n      classType: ['live', 'recorded']\n    },\n    {\n      type: 'popquiz',\n      title: 'Pop Quiz (Optional)',\n      classType: ['live']\n    }\n  ];\n\n  /*-------------------------------------------*\\\n    Component Functions\n  \\*-------------------------------------------*/\n\n   getData = async() => {\n    this.setState({ hasDraft: false });\n    \n    const { classDetails } = this.props;\n\n    if(classDetails !== undefined){\n      const { currentClassId, title, classIntroduction, learningGoals, \n        skillLevelId, categoryId, ageRangeId, \n        externalResources, classType, thumbnailImage, \n        startTime, endTime, maxLearners, minLearners, dayAvailability,\n        timeZone, availableDates, priceAmount, priceCurrency, questions, passingGrade, availabilityStartDate, availabilityEndDate, recordedId, lectures} = classDetails;\n\n        this.getPricing(classType);\n        \n        let availableDatesTemp = [];\n        if (!!availableDates && availableDates.length > 0)\n        {\n            await availableDates.forEach((item)=>{\n            var dateItem = dayjs(item);\n            var aWeekFromNow = dayjs(new Date()).add(7, 'days').format(\"YYYY-MM-DD\");\n            if(dateItem.diff(aWeekFromNow, 'day') >= 0)\n            {\n              availableDatesTemp.push(item);\n            }\n          });\n        }\n\n        let currentTabTemp = 1;\n        if (\n          !!title && (title !== undefined || title !== '') &&\n          !!classIntroduction && (classIntroduction !== undefined || classIntroduction !== '') &&\n          !!learningGoals && (learningGoals !== undefined || learningGoals !== '') &&\n          !!skillLevelId && (skillLevelId !== undefined || skillLevelId !== '') &&\n          !!categoryId && (categoryId !== undefined || categoryId !== '') &&\n          // !!subCategoryId && (subCategoryId !== undefined || subCategoryId !== '') &&\n          !!ageRangeId && (ageRangeId !== undefined || ageRangeId !== '') &&\n          !!externalResources && (externalResources !== undefined || externalResources !== '') &&\n          !!ageRangeId && (ageRangeId !== undefined || ageRangeId !== '')\n        )\n        {\n          if (!!thumbnailImage && thumbnailImage.length > 0)\n          {\n            \n            if (\n              !!availableDatesTemp && availableDatesTemp.length > 0 &&\n              (minLearners !== undefined || minLearners > -1) &&\n              (maxLearners !== undefined || maxLearners > minLearners) &&\n              !!startTime && (startTime !== undefined || startTime !== '') &&\n              !!endTime && (endTime !== undefined || endTime !== '')\n            )\n            {\n              if (!!priceAmount && priceAmount !== '0.00')\n              {\n                currentTabTemp = 5;\n              }\n              else\n              {\n                currentTabTemp = 4;\n              }\n            }\n            else\n            {\n              currentTabTemp = 3;\n            }\n          }\n          else\n          {\n            currentTabTemp = 2;\n          }\n        }\n        else\n        {\n          currentTabTemp = 1;\n        }\n\n        if (!!thumbnailImage && thumbnailImage.length > 0)\n        {\n          document.getElementById(\"imageSrc\").value = thumbnailImage;\n        }\n      const selectedPricing = this.state.pricing.find((item) => (item.currency === priceCurrency && item.amount === priceAmount));\n\n      await this.setState((prevState) => ({\n        thumbnailSrc:thumbnailImage,\n        thumbnailSource:thumbnailImage,\n        newClass: {\n          ...prevState.newClass,\n          saveAsDraft: false,\n          // status: cStatus !== 'CSTAT001' ? 'CSTAT002' : 'CSTAT001',\n          status:'CSTAT001',\n          title,\n          currentClassId: currentClassId,\n          description: classIntroduction,\n          learningGoals,\n          skillLevelId,\n          categoryId,\n          // subCategoryId,\n          ageRangeId,\n          learningMaterials: externalResources,\n          classType: classType || 'CLT002',\n          thumbnail: thumbnailImage,\n          currency: priceCurrency,\n          price: priceAmount,\n          pricingId: selectedPricing?.pricingId || null,\n          passingGrade,\n          timezone: timeZone || 'Asia/Manila',\n          availabilityStartDate: moment(availabilityStartDate).format('YYYY-MM-DD'),\n          availabilityEndDate: moment(availabilityEndDate).format('YYYY-MM-DD'),\n          // enrollmentStartDate: enrollmentStartDate ? moment(enrollmentStartDate).format('YYYY-MM-DD') : \"\",\n          // enrollmentEndDate: enrollmentEndDate ? moment(enrollmentEndDate).format('YYYY-MM-DD') : \"\",\n          recordedId,\n          lectures: lectures || [],\n          schedules: {\n            liveClassType: \"LCLT001\",\n            startTime,\n            endTime,\n            minLearners,\n            maxLearners,\n            timezone: timeZone || 'Asia/Manila',\n            dayAvailability,\n            scheduleLength: \"\",\n            // enrollmentStartDate: enrollmentStartDate ? moment(enrollmentStartDate).format('YYYY-MM-DD') : \"\",\n            // enrollmentEndDate: enrollmentEndDate ? moment(enrollmentEndDate).format('YYYY-MM-DD') : \"\",\n            availableDates: availableDatesTemp,\n            sessionNumber: !!availableDatesTemp && availableDatesTemp.length > 0 ? availableDatesTemp.length : null\n          }\n        },\n        fetchedDataLoading: false,\n        currentTab: currentTabTemp\n      }));\n\n      if(questions){\n        questions.forEach(({questionDescription, questionId, choices}) => {\n          const choiceArray = choices.map(({choiceDescription, choiceId, isAnswer}) => {\n            return {\n              choiceContent: choiceDescription,\n              choiceId,\n              isAnswer,\n            }\n          });\n          var q = {\n            questionId,\n            questionContent: questionDescription,\n            choices: choiceArray\n          }\n          this.addQuestion(q);\n        });\n      }\n    }\n\n    if (this.props.classId) {\n      this.props.getDraft(this.props.classId);\n      this.setState({ hasDraft: true, fetchedDataLoading: true });\n    }\n\n    this.getNavItems(this.state.newClass.classType);\n  };\n\n  getNavItems = async (classType) => {\n\n    const navItems = [];\n    if(classType === 'CLT001'){\n      this.allNavItems.forEach(item => {\n        if(item.classType.indexOf('recorded') > -1){\n          item.isDone = this.getTabStatus(item.type); \n          navItems.push(item);\n        }\n      });\n    }else{\n      this.allNavItems.forEach(item => {\n        if(item.classType.indexOf('live') > -1){\n          item.isDone = this.getTabStatus(item.type); \n          navItems.push(item);\n        }\n      });\n    }\n    this.setState({navItems});\n  }\n\n  getCategories = async (refCode) => {\n    try {\n      const categoriesList = await api.post(\"/class-creation/getReferenceDetails\", {\n        refCode\n      });\n      this.state.refCategories = categoriesList.data.references;\n      var select = document.getElementById(\"categoryId\");\n      for(var i = 0; i < this.state.refCategories.length; i++) {\n        var obj = this.state.refCategories[i];\n        select.options[select.options.length] = new Option(obj.DESCRIPTION, obj.CODE);\n      }\n      if(this.props.classDetails !== undefined){\n        select.value = this.state.newClass.categoryId;\n        // this.getSubCategories(this.state.newClass.categoryId);\n      }\n    } catch (error) {\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      // setLoading(false);\n    }\n  };\n\n  getPricing = async (type) => {\n    await getActivePricing((status, pricing) => {\n      if(status){\n        this.setState({pricing});\n\n        const { classDetails } = this.props;\n        if(classDetails !== undefined){\n          const { priceAmount, priceCurrency } = classDetails;\n          const selectedPricing = pricing.find((item) => (item.currency === priceCurrency && item.amount === priceAmount));\n          this.setState((prevState) => ({\n              ...prevState,\n              newClass: {\n                ...prevState.newClass,\n                pricingId: selectedPricing?.pricingId || null,\n              }\n          }));\n        }\n\n      }\n    }, type);\n  }\n\n  // getSubCategories = async (dtlCode) => {\n  //   try {\n  //     const refSubCategoriesList = await api.post(\"/class-creation/getReferenceSubDetails\", {\n  //       dtlCode\n  //     });\n  //     this.state.refSubCategories = refSubCategoriesList.data.references;\n  //     var select = document.getElementById(\"subCategoryId\");   \n  //     select.options.length = 0;        \n  //     select.options[select.options.length] = new Option('Select Sub Category','');\n  //     for(var i = 0; i < this.state.refSubCategories.length; i++) {\n  //       var obj = this.state.refSubCategories[i];\n  //       select.options[select.options.length] = new Option(obj.DESCRIPTION, obj.CODE);\n  //     }\n  //     if(this.props.classDetails !== undefined){\n  //       select.value = this.state.newClass.subCategoryId;\n  //     }\n  //   } catch (error) {\n  //     // if (error.response) setError(error.response.status);\n  //     // else setError(\"NetworkError\");\n  //   } finally {\n  //     // setLoading(false);\n  //   }\n  // };\n  \n  onUnload = (event) => {\n    if (this.state.dirty && !this.state.submitted) {\n      // Cancel the event as stated by the standard.\n      event.preventDefault();\n      // Older browsers supported custom message\n      event.returnValue = \"\";\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.hasDraft !== this.props.hasDraft) {\n      if (Object.keys(this.props.draft).length > 0) {\n        const { schedules } = this.props.draft;\n        let selectedSchedules = schedules;\n\n        if (schedules) {\n          selectedSchedules = {\n            ...schedules,\n            startDate: dayjs(schedules.startDate).format(\"YYYY-MM-DD\").toString(),\n            endDate: dayjs(schedules.endDate).format(\"YYYY-MM-DD\").toString(),\n          };\n        }\n\n        this.setState((prevState) => ({\n          newClass: {\n            ...prevState.newClass,\n            ...this.props.draft,\n            schedules: selectedSchedules,\n          },\n          fetchedDataLoading: false,\n        }));\n      }\n    }\n  }\n\n  submitClassAsPending = async (params, state, type) => {\n    if (!!this.state.newClass.passingGrade && this.state.newClass.questions.length < 1)\n    {\n      this.setState({ error: \"You have set the passinge grade without the question/s\" });\n      this.setState({ isLiveValid: false });\n      window.scrollTo(500, 0);\n      return;\n    }\n    if ((!this.state.newClass.passingGrade || this.state.newClass.passingGrade === null || this.state.newClass.passingGrade === \"\") && this.state.newClass.questions.length > 0)\n    {\n      this.setState({ error: \"You have set the question/s without the passing grade\" });\n      this.setState({ isLiveValid: false });\n      window.scrollTo(500, 0);\n      return;\n\n    }\n    this.setState({ isLiveValid: true });\n\n    this.setState({ isLoading: true });\n    await this.saveContent(this.state.newClass);\n    await this.saveThumbnail(this.state.newClass);\n    if(this.state.newClass.classType === 'CLT001'){\n      await this.saveRecordedClass(this.state.newClass);\n    }else{\n      await this.saveLiveClass(this.state.newClass);\n    }\n    await this.savePricing(this.state.newClass);\n    await this.saveQuizzes(this.state.newClass);\n    await this.saveAsPending(this.state.newClass);\n    // if(this.props.classDetails === undefined){\n      this.setState(() => ({ modalShow: true }));\n    // }\n  };\n\n  saveContent = async ({\n    currentClassId,\n    ageRangeId,\n    categoryId,\n    description,\n    learningGoals,\n    learningMaterials,\n    skillLevelId,\n    // subCategoryId,\n    saveAsDraft: isDraft,\n    status,\n    // timeCommitment,\n    title,\n  }, showToast, cb) => {\n    try {\n      this.setState({ isLoading: true });\n      const { email } = this.props;\n      this.state.newClass.emailAddress = email;\n      await api.post(\"/class-creation/saveContent\", {\n        currentClassId,\n        emailAddress: email,\n        ageRangeId,\n        categoryId,\n        description,\n        learningGoals,\n        learningMaterials,\n        skillLevelId,\n        // subCategoryId,\n        // timeCommitment,\n        title,\n        status,\n        isDraft,\n      }).then((result) => {\n        this.state.newClass.currentClassId = result.data.classId;\n        this.state.accountId = result.data.accountId;\n        if(showToast === true) {\n          toast.success(\"Class Details has been successfully saved.\");\n        }\n        cb && cb(true);\n      });\n\n    } catch (error) {\n      console.log(error);\n      cb && cb(false);\n      toast.error(\"Failed saving class details. Please try again later.\");\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n      // setLoading(false);\n    }\n  };\n\n  saveThumbnail = async ({ currentClassId, thumbnail }, showToast, cb) => {\n    const thumbnailSource = document.getElementById(\"imageSrc\").value;\n    this.state.thumbnailSrc = thumbnailSource;\n    try {\n      // setLoading(true);\n      this.setState({ isLoading: true });\n      const classResponse = await api.post(\"/class-creation/saveThumbnail\", {\n        currentClassId,\n        thumbnail: thumbnailSource,\n      });\n\n      this.state.newClass.currentClassId = classResponse.data.classId;\n      if(showToast === true) {\n        toast.success(\"Class Thumbnail has been successfully saved.\");\n      }\n      cb && cb(true);\n    } catch (error) {\n      console.log(error);\n      cb && cb(false);\n      toast.error(\"Failed saving class thumbnail. Please try again later.\");\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n      // setLoading(false);\n    }\n  };\n\n  saveLiveClass = async ({ currentClassId, classType, schedules }, showToast, cb) => {\n    try {\n      this.setState({ isLoading: true });\n      const classResponse = await api.post(\"/class-creation/saveLiveClass\", {\n        currentClassId,\n        classType,\n        schedules\n      });\n      if(showToast === true) {\n        toast.success(\"Class Schedule has been successfully saved.\");\n      }\n      cb && cb(true);\n      this.state.newClass.currentClassId = classResponse.data.classId;\n    } catch (error) {\n      console.log(error.response);\n      cb && cb(false);\n      toast.error(\"Failed saving class schedule. Please try again later.\");\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  saveRecordedClass = async ({ currentClassId, classType, timezone, enrollmentStartDate, enrollmentEndDate, availabilityStartDate, availabilityEndDate, recordedId }, showToast, cb) => {\n    try {\n      this.setState({ isLoading: true });\n      const classResponse = await api.post(\"/class-creation/saveRecordedClass\", {\n        currentClassId,\n        classType,\n        timezone,\n        enrollmentStartDate,\n        enrollmentEndDate,\n        availabilityStartDate,\n        availabilityEndDate,\n        recordedId\n      });\n      if(showToast === true) {\n        toast.success(\"Class Schedule has been successfully saved.\");\n      }\n      cb && cb(true);\n      this.state.newClass.currentClassId = classResponse.data.classId;\n      this.state.newClass.recordedId = classResponse.data.recordedId;\n    } catch (error) {\n      console.log(error.response);\n      cb && cb(false);\n      toast.error(\"Failed saving class schedule. Please try again later.\");\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  savePricing = async ({ currentClassId, currency, price }, showToast, cb) => {\n    try {\n      this.setState({ isLoading: true });\n      // setLoading(true);\n      const classResponse = await api.post(\"/class-creation/savePricing\", {\n        currentClassId,\n        currency: currency || this.state.pricing[0].currency,\n        price: price || this.state.pricing[0].amount,\n      });\n      if(showToast === true) {\n        toast.success(\"Class Pricing has been successfully saved.\");\n      }\n      cb && cb(true);\n      this.state.newClass.currentClassId = classResponse.data.classId;\n    } catch (error) {\n      console.log(error);\n      cb && cb(false);\n      toast.error(\"Failed saving class price. Please try again later.\");\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n      // setLoading(false);\n    }\n  };\n\n  saveQuizzes = async ({ currentClassId, passingGrade, questions }, showToast, cb) => {\n    try {\n      this.setState({ isLoading: true });\n      // setLoading(true);\n      \n      const newQuestions = await questions.filter(item => item.questionId === undefined);\n      const classResponse = await api.post(\"/class-creation/saveQuestions\", {\n        currentClassId,\n        passingGrade,\n        questions: newQuestions || [],\n      });\n      \n      if(this.props.classDetails !== undefined && showToast){\n        toast.success(\"Class Pop Quiz has been successfully saved.\");\n      }\n      cb && cb(true);\n      this.state.newClass.currentClassId = classResponse.data.classId;\n    } catch (error) {\n      console.log(error);\n      cb && cb(false);\n      toast.error(\"Failed saving class pop quiz. Please try again later.\");\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n      // setLoading(false);\n    }\n  };\n\n  saveAsPending = async ({ currentClassId }, cb, isNotSetActive = true) => {\n    try {\n      // setLoading(true);\n      this.setState({ isLoading: true });\n      const classResponse = await api.post(\"/class-creation/saveAsPending\", {\n        currentClassId,\n      });\n      this.state.newClass.currentClassId = classResponse.data.classId;\n      \n      if (isNotSetActive) {\n        this.setState(() => ({ modalShow: true }));\n      }\n      cb && cb(true);\n    } catch (error) {\n      console.log(error);\n      cb && cb(false);\n      // if (error.response) setError(error.response.status);\n      // else setError(\"NetworkError\");\n    } finally {\n      this.setState({ isLoading: false });\n      // setLoading(false);\n    }\n  };\n\n  modalUpdate = () => {\n    this.setState(() => ({ modalShow: false, toDashboard: true }));\n\n  };\n\n  redirectTo = (path) => {\n    setTimeout(() => {\n      this.setState({\n        redirect: path,\n      });\n    }, 3000);\n  };\n\n  onInputChange = (event) => {\n    event.persist();\n    if (event.target.name === \"price\") {\n      this.setState((prevState) => {\n        const newClass = { ...prevState.newClass };\n        newClass.price = event.target.value >= 0 ? event.target.value : 0;\n        return { newClass };\n      });\n    }\n    if (event.target.name === \"categoryId\") {\n      // let selectedId = \".\" + event.target.value;\n      let selectedId = event.target.value;\n      // this.getSubCategories(selectedId);\n      for (let el of document.querySelectorAll(\".allSubCat\")) el.style.disabled = true;\n      for (let el of document.querySelectorAll(selectedId)) el.style.disabled = false;\n    }\n\n    if (event.target.name === \"classType\") {\n      let selectedClassType = event.target.value;\n      this.getNavItems(event.target.value);\n      this.getPricing(selectedClassType);\n    }\n\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass[event.target.name] = event.target.value;\n      return { newClass };\n    });\n    this.setState({ dirty: true });\n  };\n\n  onTimeSelect = (value, name) => {\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass[name] = value;\n      return { newClass };\n    });\n    this.setState({ dirty: true });\n  }\n\n  onInputSelectChange = (filterName, labelName, label, valueName, value) => {\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass[labelName] = label;\n      newClass[valueName] = value;\n      return { newClass };\n    });\n    if (filterName) {\n      if (filterName === \"filterCategory\") {\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          // newClass.subCategoryId = \"\";\n          // newClass.subCategoryName = \"\";\n          return { newClass };\n        });\n      }\n      this.props.updateFilter(filterName, value);\n    }\n    this.setState({ dirty: true });\n  };\n\n  // onUploadThumbnail = ({ src }) => {\n  //   this.setState((prevState) => {\n  //     const newClass = { ...prevState.newClass };\n  //     newClass.thumbnail = src;\n  //     return { newClass };\n  //   });\n  //   this.setState({ thumbnailSrc: src });\n  //   this.setState({ dirty: true });\n  // };\n\n  addLecture = async (lecture, callback) => {\n    try {\n      await api.post(\"/class-creation/saveRecordedItem\", {\n        recordedId: this.state.newClass.recordedId,\n        ...lecture\n      }).then(async (resp) => {\n        toast.success('Module has been successfully added.');\n        lecture.id = resp.data.itemId;\n        const questions = lecture.questions\n        if(questions){\n          const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n            currentClassId: this.state.newClass.currentClassId,\n            itemId: resp.data.itemId,\n            questions\n          });\n\n          lecture.questions = questions.map((item, index) => {\n            item.isSaved = true;\n            item.questionId = questionResponse.data.questionIds[index];\n            return item;\n          });\n          this.setState((prevState) => {\n            const newClass = { ...prevState.newClass };\n            newClass.lectures.push(lecture);\n            return { newClass };\n          });\n        }\n        \n        this.setState({ dirty: true });\n        callback(true);\n      });\n    } catch (error) {\n      callback(false);\n      console.log(error);\n      toast.error('Failed saving some data. Please try again later.');\n    } \n  };\n\n  editLecture = async(index, lecture, callback) => {\n    try {\n      await api.post(\"/class-creation/updateRecordedItem\", {\n        recordedId: this.state.newClass.recordedId,\n        ...lecture\n      }).then(async (resp) => {\n        const questions = lecture.questions || [];\n        let newQuestions = await questions.filter(item => (item.questionId === undefined && !item.isSaved));\n        if(newQuestions.length > 0){\n          const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n            currentClassId: this.state.newClass.currentClassId,\n            itemId: lecture.id,\n            questions: newQuestions\n          });\n\n          newQuestions = newQuestions.map((item, index) => {\n            item.questionId = questionResponse.data.questionIds[index];\n            item.saved = true;\n            return item;\n          });\n          lecture.questions = (questions.filter(item => !!item.questionId));\n        }\n        \n        toast.success('Module has been successfully updated.');\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          const lectureList = newClass.lectures;\n          lectureList[index] = lecture;\n          newClass.lectures = lectureList\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n        callback(true);\n      });\n    } catch (error) {\n      callback(false);\n      console.log(error);\n      toast.error('Failed updating subject. Please try again later.');\n    }\n  };\n\n  removeLecture = async (index) => {\n    try {\n      //setLoading(true);\n      await api.post(\"/class-creation/deleteRecordedItem\", {\n        id: this.state.newClass.lectures[index].id\n      }).then(async (resp) => {\n        toast.success('Module has been removed.');\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          newClass.lectures.splice(index, 1);\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('Failed deleting subject. Please try again later.');\n    }\n  };\n\n  addChapter = async (subjectIndex, chapter, callback) => {\n    try {\n      //setLoading(true);\n      await api.post(\"/class-creation/saveRecordedChapter\", {\n        recordedId: this.state.newClass.lectures[subjectIndex].id,\n        ...chapter\n      }).then(async (resp) => {\n        const questions = chapter.questions\n        if(questions){\n          const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n            currentClassId: this.state.newClass.currentClassId,\n            chapterId: resp.data.chapterId,\n            questions\n          });\n\n          chapter.questions = questions.map((item, index) => {\n            item.isSaved = true;\n            item.questionId = questionResponse.data.questionIds[index];\n            return item;\n          });\n        }\n\n        toast.success('Chapter has been successfully added.');\n        chapter.id = resp.data.chapterId;\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          if(!newClass.lectures[subjectIndex].chapters){\n            newClass.lectures[subjectIndex].chapters = [];\n          }\n          newClass.lectures[subjectIndex].chapters.push(chapter);\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n        callback(true);\n      });\n    } catch (error) {\n      callback(false);\n      console.log(error);\n      toast.error('Failed adding chapter. Please try again later.');\n    }\n  };\n\n  editChapter = async (subjectIndex, chapterIndex, chapter, callback) => {    \n    try {\n      //setLoading(true);\n      await api.post(\"/class-creation/updateRecordedChapter\", {\n        chapterId: chapter.id,\n        ...chapter\n      }).then(async (resp) => {\n        const questions = chapter.questions || [];\n        let newQuestions = await questions.filter(item => (item.questionId === undefined && !item.isSaved));\n        if(newQuestions.length > 0){\n          const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n            currentClassId: this.state.newClass.currentClassId,\n            chapterId: chapter.id,\n            questions: newQuestions\n          });\n\n          newQuestions = newQuestions.map((item, index) => {\n            item.questionId = questionResponse.data.questionIds[index];\n            item.saved = true;\n            return item;\n          });\n\n          chapter.questions = (questions.filter(item => !!item.saved || !!item.questionId)).concat(newQuestions);\n        }\n\n        toast.success('Chapter has been updated.');\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          const lectureList = newClass.lectures;\n          lectureList[subjectIndex].chapters[chapterIndex] = chapter;\n          newClass.lectures = lectureList\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n        callback(true);\n      });\n    } catch (error) {\n      callback(false);\n      console.log(error);\n      toast.error('Failed adding chapter. Please try again later.');\n    }\n  };\n\n  removeChapter = async (subjectIndex, chapterIndex) => {\n    try {\n      //setLoading(true);\n      await api.post(\"/class-creation/deleteRecordedChapter\", {\n        chapterId: this.state.newClass.lectures[subjectIndex].chapters[chapterIndex].id\n      }).then(async (resp) => {\n        toast.success('Chapter has been removed.');\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          newClass.lectures[subjectIndex].chapters.splice(chapterIndex, 1);\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('Failed deleting chapter. Please try again later.');\n    }\n  };\n\n  addTopic = async (subjectIndex, chapterIndex, topic, callback) => {\n    try {\n      // setLoading(true);\n      await api.post(\"/class-creation/saveRecordedTopic\", {\n        chapterId: this.state.newClass.lectures[subjectIndex].chapters[chapterIndex].id,\n        ...topic\n      }).then(async (resp) => {\n        const questions = topic.questions\n        if(questions){\n          const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n            currentClassId: this.state.newClass.currentClassId,\n            topicId: resp.data.topicId,\n            questions\n          });\n\n          topic.questions = questions.map((item, index) => {\n            item.questionId = questionResponse.data.questionIds[index];\n            item.isSaved = true;\n            return item;\n          });\n        }\n\n        toast.success('Topic has been successfully added.');\n        topic.id = resp.data.topicId;\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          if(!newClass.lectures[subjectIndex].chapters[chapterIndex].topics){\n            newClass.lectures[subjectIndex].chapters[chapterIndex].topics = [];\n          }\n          newClass.lectures[subjectIndex].chapters[chapterIndex].topics.push(topic);\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n        callback(true);\n      });\n    } catch (error) {\n      callback(false);\n      console.log(error);\n      toast.error('Failed adding chapter. Please try again later.');\n    }\n    \n  };\n\n  editTopic = async (subjectIndex, chapterIndex, topicIndex, topic, callback) => {\n    try {\n      //setLoading(true);\n      await api.post(\"/class-creation/updateRecordedTopic\", {\n        topicId: topic.id,\n        ...topic\n      }).then(async (resp) => {\n        const questions = topic.questions || [];\n        let newQuestions = await questions.filter(item => (item.questionId === undefined && !item.isSaved));\n        if(newQuestions.length > 0){\n          const questionResponse = await api.post(\"/class-creation/saveQuestions\", {\n            currentClassId: this.state.newClass.currentClassId,\n            topicId: topic.id,\n            questions: newQuestions\n          });\n\n          newQuestions = newQuestions.map((item, index) => {\n            item.questionId = questionResponse.data.questionIds[index];\n            item.saved = true;\n            return item;\n          });\n\n          topic.questions = (questions.filter(item => !!item.saved || !!item.questionId)).concat(newQuestions);\n        }\n\n        toast.success('Topic has been updated.');\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          const lectureList = newClass.lectures;\n          lectureList[subjectIndex].chapters[chapterIndex].topics[topicIndex] = topic;\n          newClass.lectures = lectureList\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n        callback(true);\n      });\n    } catch (error) {\n      callback(false);\n      console.log(error);\n      toast.error('Failed updating topic. Please try again later.');\n    }\n  };\n\n  removeTopic = async (subjectIndex, chapterIndex, topicIndex) => {\n    try {\n      //setLoading(true);\n      await api.post(\"/class-creation/deleteRecordedTopic\", {\n        topicId: this.state.newClass.lectures[subjectIndex].chapters[chapterIndex].topics[topicIndex].id\n      }).then(async (resp) => {\n        toast.success('Topic has been removed.');\n        this.setState((prevState) => {\n          const newClass = { ...prevState.newClass };\n          newClass.lectures[subjectIndex].chapters[chapterIndex].topics.splice(topicIndex, 1);\n          return { newClass };\n        });\n        this.setState({ dirty: true });\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('Failed removing topic. Please try again later.');\n    }\n  };\n\n  addSchedule = (schedData) => {\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass.schedules = {\n        ...newClass.schedules,\n        ...schedData,\n      };\n      return { newClass };\n    });\n    this.setState({ dirty: true, hasDraft: false });\n  };\n\n  // removeSchedule = (index) => {\n  //   this.setState((prevState) => {\n  //     const newClass = { ...prevState.newClass };\n  //     newClass.schedules.splice(index, 1);\n  //     return { newClass };\n  //   });\n  //   this.setState({ dirty: true });\n  // };\n\n  addEmail = (email) => {\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass.emails.push(email);\n      return { newClass };\n    });\n    this.setState({ dirty: true });\n  };\n\n  removeEmail = (index) => {\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass.emails.splice(index, 1);\n      return { newClass };\n    });\n    this.setState({ dirty: true });\n  };\n\n  addQuestion = ({ questionContent, choices, questionId }) => {\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass.questions.push({ questionId, questionContent, choices });\n      return { newClass };\n    });\n    this.setState({ dirty: true });\n  };\n\n  removeQuestion = async (index, questionId) => {\n    if(questionId !== null){\n          toast.success('Question has been successfully removed.');\n          this.setState((prevState) => {\n            const newClass = { ...prevState.newClass };\n            newClass.questions.splice(index, 1);\n            return { newClass };\n          });\n          this.setState({ dirty: true });\n    }else{\n      await this.setState((prevState) => {\n        const newClass = { ...prevState.newClass };\n        newClass.questions.splice(index, 1);\n        return { newClass };\n      });\n      this.setState({ dirty: true });\n    }\n  };\n\n  nextButton = async () => {\n    this.clearError();\n    const activeTab = this.state.activeTab;\n    window.scrollTo(500, 0);\n\n    let validated = false\n    let success = false;\n    switch(this.state.activeTab){\n      case 0: {\n        validated = this.validateDetails(this.state.newClass);\n        if (validated) {\n          await this.saveContent(this.state.newClass, true, status => {\n            success = status\n          });\n        }\n        break;\n      }\n      case 1: {\n        validated = this.validatedThumbnail();\n        if (validated) {\n          await this.saveThumbnail(this.state.newClass, true, status => {\n            success = status\n          });\n        }\n        break;\n      }\n      case 2: {\n        validated = this.validateContent();\n        if (validated) {\n          if(this.state.newClass.classType === 'CLT001'){\n            await this.saveRecordedClass(this.state.newClass, true, status => {\n              success = status\n            });\n          }else{\n            await this.saveLiveClass(this.state.newClass, true, status => {\n              success = status\n            });\n          }\n        }\n        break;\n      }\n      case 3: {\n        validated = true;\n        if(this.state.newClass.classType === 'CLT002'){\n          await this.savePricing(this.state.newClass, true, status => {\n            success = status\n          });\n        }else{\n          success = true;\n        }\n        break;\n      }\n      case 4: {\n        validated = true;\n        if(this.state.newClass.classType === 'CLT002'){\n          await this.saveQuizzes(this.state.newClass, false, status => {\n            if(status){\n              this.saveAsPending(this.state.newClass, status => {\n                success = status\n                if(!status){\n                  toast.error(\"Failed submitting class. Please try again later.\");\n                }\n              });\n            }\n          });\n        }else{\n          await this.savePricing(this.state.newClass, false, status => {\n            if(status){\n              this.saveAsPending(this.state.newClass, status => {\n                success = status\n                if(!status){\n                  toast.error(\"Failed submitting class. Please try again later.\");\n                }\n              });\n            }\n          });\n        }\n        break;\n      }\n      default: return;\n    }\n\n    if (validated && success) {\n      this.setState(prevState => {\n        const navItems = [...prevState.navItems];\n        navItems[activeTab].isDone = true;\n        return {\n          ...prevState,\n          navItems,\n          activeTab: activeTab+1\n        }\n      });\n    }\n  };\n\n  validateDetails = ({\n    ageRangeId,\n    categoryId,\n    description,\n    learningGoals,\n    learningMaterials,\n    skillLevelId,\n    // subCategoryId,\n    // timeCommitment,\n    title,\n  }) => {\n    if (\n      !ageRangeId ||\n      !categoryId ||\n      !description ||\n      !learningGoals ||\n      !learningMaterials ||\n      !skillLevelId ||\n      // !subCategoryId ||\n      // !timeCommitment ||\n      !title\n    ) {\n      this.setState({ error: \"All fields are required\" });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  validatedThumbnail = () => {\n    const thumbnailSource = document.getElementById(\"imageSrc\").value;\n\n    if (!thumbnailSource) {\n      this.setState({ error: \"A picture is required for your class\" });\n    } else {\n      return true;\n    }\n  };\n\n  validateContent = (state, type) => {\n    if(this.state.newClass.classType === 'CLT002'){\n      if (!this.state.newClass.schedules.sessionNumber || this.state.newClass.schedules.sessionNumber === null)\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Please encode the number of sessions\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if (this.state.newClass.schedules.sessionNumber === 0)\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Minimum number of sessions is one (1)\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n      if(this.state.newClass.schedules.minLearners === null || this.state.newClass.schedules.minLearners === undefined || this.state.newClass.schedules.minLearners === '')\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Please encode the minimum number of learners\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if(this.state.newClass.schedules.maxLearners === null || this.state.newClass.schedules.maxLearners === undefined || this.state.newClass.schedules.maxLearners === '')\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Please encode the maximum number of learners\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if (this.state.newClass.schedules.maxLearners === 0)\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Maximum number of learners must be greater than zero (0)\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if (\n        this.state.newClass.schedules.maxLearners <\n        this.state.newClass.schedules.minLearners\n      ) {\n        window.scrollTo(500, 0);\n        this.setState({\n          error: \"Maximum number of learners must not be less than the minimum number of learners.\",\n        });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if (this.state.newClass.schedules.startTime === null || this.state.newClass.schedules.startTime === \"\" || (isNaN(this.state.newClass.schedules.startTime) && !(typeof this.state.newClass.schedules.startTime ===  \"string\")))\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Please select the start time of the class with the proper format (e.g 12:00 am)\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if (this.state.newClass.schedules.endTime === null || this.state.newClass.schedules.endTime === \"\" || (isNaN(this.state.newClass.schedules.endTime) && !(typeof this.state.newClass.schedules.endTime === \"string\")))\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Please select the end time of the class with the proper format (e.g 12:00 am)\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      // if (this.state.newClass.schedules.enrollmentStartDate === null || this.state.newClass.schedules.enrollmentStartDate === \"\")\n      // {\n      //   window.scrollTo(500, 0);\n      //   this.setState({ error: \"Please select the Enrollment Start Date of the class.\" });\n      //   this.setState({ isLiveValid: false });\n      //   return false;\n      // }\n\n      // if (this.state.newClass.schedules.enrollmentEndDate === null || this.state.newClass.schedules.enrollmentEndDate === \"\")\n      // {\n      //   window.scrollTo(500, 0);\n      //   this.setState({ error: \"Please select the Enrollment End Date of the class.\" });\n      //   this.setState({ isLiveValid: false });\n      //   return false;\n      // }\n\n      const startTime = dayjs(this.state.newClass.schedules.startTime, \"h:mm\");\n      const endTime = dayjs(this.state.newClass.schedules.endTime, \"h:mm\");\n      const startToEndTimeDiff = startTime.diff(endTime, \"minutes\");\n\n      if (startToEndTimeDiff >= 0) {\n        window.scrollTo(500, 0);\n        this.setState({\n          error: \"End time must not be earlier or equal to the start time.\",\n        });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      if (this.state.newClass.schedules.sessionNumber > 0)\n      {\n        if (this.state.newClass.schedules.sessionNumber === 1)\n        {\n          if (this.state.newClass.schedules.availableDates.length === 0)\n          {\n            window.scrollTo(500, 0);\n            this.setState({ error: \"Please select the preferred date/s in the calendar\" });\n            this.setState({ isLiveValid: false });\n            return false;\n          }\n          else if (this.state.newClass.schedules.availableDates.length > 1)\n          {\n            window.scrollTo(500, 0);\n            this.setState({ error: \"Number of selected date/s should not exceed the number of session/s\" });\n            this.setState({ isLiveValid: false });\n            return false;\n          }\n        }\n        else\n        {\n          if (this.state.newClass.schedules.availableDates.length === 0)\n          {\n            window.scrollTo(500, 0);\n            this.setState({ error: \"Please select the preferred dates in the calendar\" });\n            this.setState({ isLiveValid: false });\n            return false;\n          }\n\n          if (this.state.newClass.schedules.availableDates.length < this.state.newClass.schedules.sessionNumber)\n          {\n            window.scrollTo(500, 0);\n            this.setState({ error: \"Number of selected date/s does not correspond to the number of session/s\" });\n            this.setState({ isLiveValid: false });\n            return false;\n          }\n          else if (this.state.newClass.schedules.availableDates.length > this.state.newClass.schedules.sessionNumber)\n          {\n            window.scrollTo(500, 0);\n            this.setState({ error: \"Number of selected date/s should not exceed the number of session/s\" });\n            this.setState({ isLiveValid: false });\n            return false;\n          }\n        }\n      }\n\n      this.setState({ isLiveValid: true });\n      return true;\n    } \n    else {\n      // if (this.state.newClass.enrollmentStartDate === null || this.state.newClass.enrollmentEndDate === null || this.state.newClass.availabilityStartDate === null || this.state.newClass.availabilityEndDate === null )\n      if (this.state.newClass.availabilityStartDate === null || this.state.newClass.availabilityEndDate === null )\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Availability Date is required.\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      this.setState({ isLiveValid: true });\n      return true;\n    }\n  };\n\n  validateModule = () => {\n    if (this.state.newClass.lectures.length < 1)\n      {\n        window.scrollTo(500, 0);\n        this.setState({ error: \"Please add atleast one (1) module\" });\n        this.setState({ isLiveValid: false });\n        return false;\n      }\n\n      this.setState({ isLiveValid: true });\n      return true;\n  }\n\n  validatePrice = (price) => {\n    if (price <= 0) {\n      this.setState({ error: \"Price must be more than 0 dollars\" });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  previousButton = () => {\n    const activeTab = this.state.activeTab;\n    this.clearError();\n    window.scrollTo(500, 0);\n\n    this.setState({\n      activeTab: activeTab-1\n    });\n  };\n\n  setActive = async(selectedId, itemType) => {\n  if (!!selectedId && !!itemType) {\n    this.clearError();\n    const activeTab = this.state.activeTab;\n    window.scrollTo(500, 0);\n\n    let validated = false\n    let success = false;\n    switch(this.state.activeTab){\n      case 0: {\n        validated = this.validateDetails(this.state.newClass);\n        if (validated) {\n          await this.saveContent(this.state.newClass, true, status => {\n            success = status\n          });\n        }\n        break;\n      }\n      case 1: {\n        validated = this.validatedThumbnail();\n        if (validated) {\n          await this.saveThumbnail(this.state.newClass, true, status => {\n            success = status\n          });\n        }\n        break;\n      }\n      case 2: {\n        validated = this.validateContent();\n        if (validated) {\n          if(this.state.newClass.classType === 'CLT001'){\n            await this.saveRecordedClass(this.state.newClass, true, status => {\n              success = status\n            });\n          }else{\n            await this.saveLiveClass(this.state.newClass, true, status => {\n              success = status\n            });\n          }\n        }\n        break;\n      }\n      case 3: {\n        validated = true;\n        if(this.state.newClass.classType === 'CLT002'){\n          await this.savePricing(this.state.newClass, true, status => {\n            success = status\n          });\n        }else{\n          success = true;\n        }\n        break;\n      }\n      case 4: {\n        validated = true;\n        if(this.state.newClass.classType === 'CLT002'){\n          await this.saveQuizzes(this.state.newClass, false, status => {\n            if(status){\n              this.saveAsPending(this.state.newClass, status => {\n                // success = status\n                if(!status){\n                  toast.error(\"Failed submitting class. Please try again later.\");\n                }\n              }, false);\n            }\n          });\n        }else{\n          await this.savePricing(this.state.newClass, false, status => {\n            if(status){\n              this.saveAsPending(this.state.newClass, status => {\n                // success = status\n                if(!status){\n                  toast.error(\"Failed submitting class. Please try again later.\");\n                }\n              }, false);\n            }\n          });\n        }\n        break;\n      }\n      default: return;\n    }\n    if ((validated && success) || (!!validated && parseInt(this.state.activeTab) === 4)) {\n      \n      this.setState(prevState => {\n        const navItems = [...prevState.navItems];\n        navItems[activeTab].isDone = true;\n        return {\n          ...prevState,\n          navItems,\n          activeTab: selectedId\n        }\n      });\n    }\n  }\n    \n  };\n\n  toolkitListener = (modal) => {\n    this.setState({ modal: modal });\n  };\n\n  /*-------------------------------------------*\\\n    Lifecycle Methods\n  \\*-------------------------------------------*/\n  componentDidMount() {\n    \n    // const { accountNumber, classDetails } = this.props;\n\n    // if (!accountNumber && !classDetails){\n    //   this.setState({payoutModalShow: true}); \n    // } else {\n      this.getCategories( \"LMS001\");\n      this.getPricing(this.state.newClass.classType);\n      this.getData();\n    // }\n\n    // window.addEventListener(\"beforeunload\", this.onUnload);\n  }\n\n  getTabStatus = (tab)=>{\n    if (tab === 'details')\n    {\n      let keys = ['title', 'categoryId', 'ageRangeId', 'skillLevelId', 'description', 'learningGoals', 'learningMaterials'];\n      let countDetails = 0;\n      keys.forEach((item)=>{\n        if (!!this.state.newClass[item] && this.state.newClass[item] !== '')\n        {\n          countDetails++;\n        }\n      });\n      \n      if (countDetails === keys.length)\n        return true;\n      else\n        return false;\n    }\n\n    if (tab === 'media')\n    {\n      // let value = !!document.getElementById(\"imageSrc\") ? document.getElementById(\"imageSrc\").value : null;\n      if (!!this.state.newClass.thumbnail && this.state.newClass.thumbnail !== '')\n      {\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n\n    if (tab === 'schedule')\n    {\n      let keys = this.state.newClass.classType === 'CLT001' ?\n        ['availabilityStartDate', 'availabilityStartDate', 'timezone'] : ['sessionNumber', 'minLearners', 'maxLearners', 'timezone', 'startTime', 'endTime', 'availableDates'];\n      let countSched = 0;\n      if(this.state.newClass.classType === 'CLT002'){\n        keys.forEach((item)=>{\n          if (item !== 'minLearners' && item !== 'maxLearners' && item !== 'sessionNumber' && !!this.state.newClass.schedules && !!this.state.newClass.schedules[item] && this.state.newClass.schedules[item] !== '')\n          {\n            countSched++;\n          }\n          else if (item === 'minLearners')\n          {\n            if ((this.state.newClass.schedules[item] !== undefined || this.state.newClass.schedules[item] !== null || this.state.newClass.schedules[item] !== '') && this.state.newClass.schedules[item] > -1)\n            {\n              countSched++;\n            }\n          }\n          else if (item === 'maxLearners')\n          {\n            if ((this.state.newClass.schedules[item] !== undefined || this.state.newClass.schedules[item] !== null || this.state.newClass.schedules[item] !== '') && this.state.newClass.schedules[item] > 0 && this.state.newClass.schedules['minLearners'] <= this.state.newClass.schedules[item])\n            {\n              countSched++;\n            }\n          }\n          else if (item === 'sessionNumber')\n          {\n            if (!!this.state.newClass.schedules[item] && this.state.newClass.schedules[item] > 0)\n            {\n              countSched++;\n            }\n          }\n        });\n\n        if (countSched === keys.length && ((this.state.newClass.classType==='CLT002' && !!this.state.newClass.schedules.sessionNumber && !!this.state.newClass.schedules.availableDates && this.state.newClass.schedules.availableDates.length === this.state.newClass.schedules.sessionNumber)))\n        {\n          return true;\n        }\n        else\n        {\n          return false;\n        }\n      }else{\n        keys.forEach((item)=>{\n          if(this.state.newClass[item] !== null || this.state.newClass[item]=== ''){\n            countSched++;\n          }\n        });\n        if (countSched === keys.length)\n        {\n          return true;\n        }\n        else\n        {\n          return false;\n        }\n      }\n\n      \n    }\n    if (tab === 'pricing')\n    {\n      if ((!!this.state.newClass.price && this.state.newClass.price !== \"0.00\") || this.state.currentTab >= 5)\n      {\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n    if (tab === 'popquiz')\n    {\n      if (!!this.state.newClass.passingGrade && this.state.newClass.passingGrade !== \"\" && !!this.state.newClass.questions && this.state.newClass.questions.length > 0)\n      {\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n\n    if (tab === 'module')\n    {\n      if (!!this.state.newClass.lectures && this.state.newClass.lectures.length > 0)\n      {\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n  };\n\n  clearError = ()=>{\n    this.setState({error:''});\n  }\n\n  uploadImage = (image)=>{\n    this.setState((prevState) => {\n      const newClass = { ...prevState.newClass };\n      newClass['thumbnail'] = image;\n      return {\n        newClass\n      };\n    });\n  };\n\n  render() {\n    if (this.state.toDashboard) {\n      return <Navigate to=\"/classes\" replace={false} />;\n    }\n\n    const { status, message, loading } = this.props;\n\n    const thumbnail = this.state.thumbnailSrc\n      ? this.state.thumbnailSrc\n      : this.state.newClass.thumbnail;\n\n    if (status === 1 && message && !this.state.newClass.saveAsDraft) {\n      this.redirectTo(\"/teacher-portal/class-masterlist\");\n    }\n\n    const addModuleNext = () => {\n      const module = this.state.newClass.lectures\n      if (module.length > 0) {\n        this.nextButton(4)\n      } else {\n        toast.warning(\"Please Add Module\")\n      }\n    }\n\n    const pricingNextBtn = () => {\n      const price = this.state.newClass.price\n      if(price) {\n        this.nextButton(5)\n      } else {\n        toast.warning(\"Please Select Pricing\")\n      }\n    }\n\n\n    // const { fetchedDataLoading } = this.state;\n    return (\n      \n      <Fragment>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-2 p-20\" style={{paddingLeft:0}}>\n              <h4 className=\"card-title\">Steps</h4>\n              <ul className=\"list-group list-group-flush\">\n                {this.state.navItems.map((item, index) => (\n                  <div\n                    className={`list-group-item ${this.state.activeTab===index && 'active'}`}\n                    id={`nav-${item.type}-tab`}\n                    // data-toggle=\"tab\"\n                    // href={`#nav-${item.type}`}\n                    role=\"tab\"\n                    aria-controls={`nav-${item.type}`}\n                    aria-selected=\"true\"\n                    disabled={item.isDone === false}\n                    style={{\n                      pointerEvents: (item.isDone || this.state.activeTab === index || (index > 0 && this.state.navItems[index-1].isDone)) ? \"auto\" : \"none\",\n                      cursor: (item.isDone || this.state.activeTab === index || (index > 0 && this.state.navItems[index-1].isDone)) ? \"pointer\" : \"not-allowed\",\n                    }}                  \n                    onClick={() => this.setActive(index, item.type)}\n                  >\n                    {item.title}\n                    <div\n                      style={{\n                        height: 10,\n                        width: 10,\n                        background: item.isDone ? \"#A2CD3C\": \"#F59C1E\",\n                        position: \"absolute\",\n                        top: \"50%\",\n                        transform: \"translateY(-50%)\",\n                        right: 13,\n                        borderRadius: \"50%\",\n                        opacity: (this.state.activeTab===index\n                          || (index > 0 && this.state.navItems[index-1].isDone) || this.state.navItems[index].isDone)? 1 : 0.2,\n                      }}\n                    />\n                  </div>\n                ))}\n                {/* </div> */}\n              </ul>\n              {/* </div> */}\n            </div>\n            <div className=\"col-md-10 p-20\">\n              <div className=\"card p-20\">\n                <div className=\"card-body \">\n                  <div className=\"tab-content lms-tab-content\" id=\"nav-tabContent\">\n                    {status === 1 ? <Alert variant=\"success\">{message}</Alert> : null}\n                    {status === 2 ? (\n                      <Alert variant=\"danger\" style={{ whiteSpace: \"pre-wrap\" }}>\n                        {message}\n                      </Alert>\n                    ) : null}\n                    {this.state.error ? (\n                      <Alert variant=\"danger\" style={{ whiteSpace: \"pre-wrap\" }} onClose={() => this.clearError()} dismissible >\n                        {this.state.error}\n                      </Alert>\n                    ) : null}\n                    {/* Details */}\n                    <div\n                      className={`tab-pane fade ${this.state.activeTab===0 && 'show active'}`}\n                      id=\"nav-details\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-details-tab\"\n                    >\n                      <div>\n                        <h3>Class Details</h3>\n                        <hr></hr>\n                        <div className=\"form-group row\">\n                          <div className=\"col-12\">\n                            <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                              What is the title of your online class or workshop/tutorial\n                              session?\n                            </label>\n                            <br />\n                            <i>\n                              <small>\n                                <label className=\"lms-input-sublabel\">\n                                  The title should be unique and stand out among the other\n                                  classes. Classes with similar titles will be edited and\n                                  replaced.\n                                </label>\n                              </small>\n                            </i>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"title\"\n                              name=\"title\"\n                              value={\n                                this.state.newClass.title ? this.state.newClass.title : \"\"\n                              }\n                              onChange={this.onInputChange}\n                              placeholder=\"Write the class title here...\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-group row\">\n                          <div className=\"col-6\">\n                            <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                              Select the category of your class.\n                            </label>\n                            <br />\n                            <label className=\"lms-input-sublabel\">\n                              {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                                                tempor. */}\n                            </label>\n                            <select\n                              name=\"categoryId\"\n                              id=\"categoryId\"\n                              className=\"custom-select lms-portal-select\"\n                              classNamePrefix=\"select\"\n                              onChange={this.onInputChange}\n                            >\n                              <option value=\"\">Select Category</option>\n                              </select>                             \n                          </div>\n                          <div className=\"col-6\">\n                            {/* <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                              Select the sub-category of your class.\n                            </label>\n                            <br /> */}\n                            {/* <label className=\"lms-input-sublabel\"> */}\n                              {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                                                tempor. */}\n                            {/* </label>\n                            <select\n                              name=\"subCategoryId\"\n                              id=\"subCategoryId\"\n                              onChange={this.onInputChange}\n                              className=\"custom-select lms-portal-select\"\n                              classNamePrefix=\"select\"\n                            >\n                              <option value=\"\">\n                                Select Sub Category\n                              </option>                              \n                            </select> */}\n                              <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                              Select your target age category.\n                            </label>\n                            <br />\n                            <label className=\"lms-input-sublabel\">\n                              {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                                                tempor. */}\n                            </label>\n                            <select\n                              name=\"ageRangeId\"\n                              id=\"ageRangeId\"\n                              value={this.state.newClass.ageRangeId}\n                              onChange={this.onInputChange}\n                              className=\"custom-select lms-portal-select\"\n                              classNamePrefix=\"select\"\n                            >\n                              <option value=\"\">Select Target Age Category</option>\n                              <option value=\"AGE001\">4-6 years</option>\n                              <option value=\"AGE002\">7-10 years</option>\n                              <option value=\"AGE003\">11-16 years</option>\n                              <option value=\"AGE004\">17-19 years</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"form-group row\">\n                         \n                          <div className=\"col-6\">\n                            <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                              Select your target skill level\n                            </label>\n                            <br />\n                            <label className=\"lms-input-sublabel\">\n                              \n                            </label>\n                            <select\n                              name=\"skillLevelId\"\n                              id=\"skillLevelId\"\n                              value={this.state.newClass.skillLevelId}\n                              onChange={this.onInputChange}\n                              className=\"custom-select lms-portal-select\"\n                              classNamePrefix=\"select\"\n                            >\n                              <option value=\"\">Select Skill Level</option>\n                              <option value=\"SLVL001\">Basic</option>\n                              <option value=\"SLVL002\">Intermediate</option>\n                              <option value=\"SLVL003\">Advanced</option>\n                            </select>\n                          </div>\n                        </div>\n                        <br />\n                        <h3>Tell us more!</h3>\n                        <hr></hr>\n                        <div className=\"form-group row\">\n                          <div className=\"col-12\">\n                            <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                              Provide a brief introduction of your class.\n                            </label>\n                            <br />\n                            <label className=\"lms-input-sublabel\">\n                              {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                                                tempor. */}\n                            </label>\n                            <textarea\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"description\"\n                              maxlength=\"2500\"\n                              name=\"description\"\n                              rows=\"4\"\n                              placeholder=\"Write the class description here...\"\n                              value={\n                                this.state.newClass.description\n                                  ? this.state.newClass.description\n                                  : \"\"\n                              }\n                              onChange={this.onInputChange}\n                            ></textarea>\n                          </div>\n                        </div>\n                        <div className=\"form-group row\">\n                          <br /><br />\n                          <div className=\"col-6\">\n                            <label className=\"lms-input-label\" htmlFor=\"learningGoals\">\n                              Indicate the learning goals and/or outcomes for this class.\n                            </label>\n                            <textarea\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"learningGoals\"\n                              maxlength=\"2500\"\n                              name=\"learningGoals\"\n                              rows=\"4\"\n                              placeholder=\"Write the learnings goals here...\"\n                              onChange={this.onInputChange}\n                              value={\n                                this.state.newClass.learningGoals\n                                  ? this.state.newClass.learningGoals\n                                  : \"\"\n                              }\n                            ></textarea>\n                          </div>\n                          <div className=\"col-6\">\n                            <label className=\"lms-input-label\" htmlFor=\"learningMaterials\">\n                              Indicate materials and resources needed for the class.\n                            </label>\n                            <textarea\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"learningMaterials\"\n                              maxlength=\"2500\"\n                              name=\"learningMaterials\"\n                              rows=\"4\"\n                              placeholder=\"Write the learning materials and external resources here...\"\n                              onChange={this.onInputChange}\n                              value={\n                                this.state.newClass.learningMaterials\n                                  ? this.state.newClass.learningMaterials\n                                  : \"\"\n                              }\n                            ></textarea>\n                          </div>\n                        </div>\n    \n\n                        <div className=\"mt-4 mb-4\">\n                          <button\n                            className=\"btn btn-megna btn-outline-megna text-megna float-right\"\n                            style={{\n                              // backgroundColor: \"#2c9cf8\",\n                              // color:  \"white\",\n                              outline: \"none\",\n                            }}\n                            onClick={() => this.nextButton(2)}\n                            disabled={this.state.isLoading}\n                          >\n                            <span style = {{display: this.state.isLoading ? 'inline-block' : 'none'}} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                            {'Next'}\n                          </button>\n                          <br />\n                          <br />\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Media */}\n                    <div\n                      className={`tab-pane fade ${this.state.activeTab===1 && 'show active'}`}\n                      id=\"nav-media\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-media-tab\"\n                    >\n                      <h3>Class Thumbnail</h3>\n                      <hr></hr>\n                      <div className=\"form-group row\">\n                        <div className=\"col-6\">\n                          <div>\n                          <label className=\"lms-input-label\">\n                            Upload a thumbnail image\n                          </label>\n                          <br />\n                          <label className=\"lms-input-sublabel\">\n                            Image size: not more than 3MB\n                            <br />\n                            Image formats: jpg, png, jpeg\n                            <br />\n                            Accepted file formats: jpg, png, jpeg\n                            <br />\n                          </label>\n                          </div>\n                          <div>\n                            <div style={{ position: \"relative\" }}>\n                              <div>\n                                <Uploader uploadImage={this.uploadImage}></Uploader>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-6\" style={{textAlign:\"center\"}}>\n                          <img\n                            id=\"imageFile\"\n                            src={\n                              thumbnail\n                                ? thumbnail\n                                : \"/assets/images/image-placeholder.jpg\"\n                            }\n                            alt=\"thumbnail\"\n                            className=\"img-fluid\"\n                            style={{ maxHeight: \"200px\" }}\n                          />\n                          <input\n                            id=\"imageSrc\"\n                            type=\"text\"\n                            style={{ display: \"none\" }}\n                            onChange={this.onInputChange}\n                          />\n                        </div>\n                      </div>\n                      <hr></hr>\n                      <div className=\"mt-4 mb-4\">\n                        <button\n                          className=\"btn btn-info text-white\"\n                          onClick={() => this.previousButton(1)}\n                        >\n                          Previous\n                        </button>\n                        <button\n                          className=\"btn btn-megna btn-outline-megna text-megna float-right\"\n                          style={{\n                            // backgroundColor: !loading ? \"#2c9cf8\" : \"transparent\",\n                            // color: !loading ? \"white\" : \"#2c9cf8\",\n                            outline: \"none\",\n                          }}\n                          onClick={() => this.nextButton(3)}\n                          disabled={this.state.isLoading}\n                        >\n                          <span style = {{display: this.state.isLoading ? 'inline-block' : 'none'}} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                          {!loading ? \"Next\" : \"Saving...\"}\n                        </button>\n                      </div>\n                    </div>\n\n                    {/* Schedule */}                   \n                    <div\n                      className={`tab-pane fade ${this.state.activeTab===2 && 'show active'}`}\n                      id=\"nav-schedule\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-schedule-tab\"\n                    >\n                      <h3 htmlFor=\"firstName\">\n                                  Class Schedule\n                              </h3>\n                      <hr />\n                      \n                      <div className=\"mb-3\">\n                        <div className=\"form-group row\">\n                          <div className=\"col-12\">\n                            <div>\n                              <label className=\"lms-input-label\" htmlFor=\"classType\">\n                                Choose which type of class you want to create.\n                              </label>\n                              <br />\n                              <i>\n                                <small>\n                                  <label className=\"lms-input-sublabel\" htmlFor=\"classUrl\" color=\"red\" style={{fontSize: \"12px\"}}>\n                                    Class link will be generated upon approval of class and will be sent via Email.\n                                  </label>\n                                </small>\n                              </i>\n                            </div>\n                            <select\n                              className=\"custom-select lms-portal-select\"\n                              id=\"classType\"\n                              name=\"classType\"\n                              value={this.state.newClass.classType}\n                              onChange={this.onInputChange}\n                            >\n                              {/* <option value=\"\" disabled>\n                                  Select Class Type\n                                </option> */}\n                              <option value=\"CLT002\" selected>\n                                Live/Scheduled Class\n                              </option>\n                              <option value=\"CLT001\">Recorded Class</option>\n                              {/* <option value=\"CLT003\">Exclusive Class</option> */}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"mt-4\">\n                        {this.state.newClass.classType === \"CLT001\" && (<div>\n                          <div className=\"form-group row pl-3 pr-3\">\n                              <label className=\"lms-input-sublabel\">Timezone</label>\n                              <TimezonePicker\n                                  value={this.state.newClass.timezone}\n                                  name=\"timezone\"\n                                  onChange={({ id }) => this.onTimeSelect(id, 'timezone')}\n                                  size={SIZE.compact}\n                                  overrides={{\n                                      Select: {\n                                          props: {\n                                              overrides: {\n                                                  ControlContainer:{\n                                                      style: ({ $theme }) => ({\n                                                          borderColor: `#ced4da!important`,\n                                                          borderRadius: `0.25em!important`,\n                                                          borderWidth: `thin!important`,\n                                                          backgroundColor: $theme.colors.white,\n                                                          minHeight: `38px`\n                                                        }),\n                                                  },\n                                                  Input:{\n                                                      style: ({ $theme }) => ({\n                                                          cursor:`text`\n                                                      })\n                                                  },\n                                                  InputContainer:{\n                                                      style: ({ $theme }) => ({\n                                                          cursor:`text`\n                                                      })\n                                                  },\n                                                  ValueContainer:{\n                                                      style: ({ $theme }) => ({\n                                                          cursor:`pointer`\n                                                      })\n                                                  }\n                                              },\n                                          },\n                                      },\n                                  }}\n                              />\n                          </div>\n                          {/* <div className=\"row mt-4\">\n                              <div className=\"col-12\">\n                                  <label className=\"lms-input-label\" htmlFor=\"enrollmentStartDate\">\n                                    Enrollment Date\n                                  </label>\n                                  <div className=\"form-group row\">\n                                      <div className=\"col-md-6\">\n                                        <label className=\"lms-input-label\" htmlFor=\"enrollmentStartDate\">\n                                          <small>Start Date</small>\n                                        </label>\n                                        <input\n                                          type=\"date\"\n                                          className=\"form-control\"\n                                          id=\"enrollmentStartDate\"\n                                          name=\"enrollmentStartDate\"\n                                          placeholder=\"Enrollment Date\"\n                                          onChange={this.onInputChange}\n                                          onKeyDown={(e) => e.preventDefault()}\n                                          value={this.state.newClass.enrollmentStartDate}\n                                          min={this.state.minDate}\n                                        />\n                                      </div>\n                                      <div className=\"col-md-6\">\n                                        <label className=\"lms-input-label\" htmlFor=\"enrollmentEndDate\">\n                                          <small>End Date</small>\n                                        </label>\n                                        <input\n                                          type=\"date\"\n                                          className=\"form-control\"\n                                          id=\"enrollmentEndDate\"\n                                          name=\"enrollmentEndDate\"\n                                          placeholder=\"Enrollment Date\"\n                                          onChange={this.onInputChange}\n                                          onKeyDown={(e) => e.preventDefault()}\n                                          value={this.state.newClass.enrollmentEndDate}\n                                          min={this.state.newClass.enrollmentStartDate}\n                                        />\n                                      </div>\n                                  </div>\n                              </div>                    \n                          </div> */}\n                          <div className=\"row mt-4\">\n                              <div className=\"col-12\">\n                                  <label className=\"lms-input-label\" htmlFor=\"availabilityStartDate\">\n                                    Availability Date\n                                  </label>\n                                  <div className=\"form-group row\">\n                                      <div className=\"col-md-6\">\n                                        <label className=\"lms-input-label\" htmlFor=\"availabilityStartDate\">\n                                          <small>Start Date</small>\n                                        </label>\n                                        <input\n                                          type=\"date\"\n                                          className=\"form-control\"\n                                          id=\"availabilityStartDate\"\n                                          name=\"availabilityStartDate\"\n                                          placeholder=\"Availability Date\"\n                                          onChange={this.onInputChange}\n                                          value={this.state.newClass.availabilityStartDate}\n                                          min={this.state.minDate}\n                                        />\n                                      </div>\n                                      <div className=\"col-md-6\">\n                                        <label className=\"lms-input-label\" htmlFor=\"availabilityEndDate\">\n                                          <small>End Date</small>\n                                        </label>\n                                        <input\n                                          type=\"date\"\n                                          className=\"form-control\"\n                                          id=\"availabilityEndDate\"\n                                          name=\"availabilityEndDate\"\n                                          placeholder=\"Availability Date\"\n                                          onChange={this.onInputChange}\n                                          value={this.state.newClass.availabilityEndDate}\n                                          min={this.state.newClass.availabilityStartDate}\n                                        />\n                                      </div>\n                                  </div>\n                              </div>                    \n                          </div>\n                        </div>)}\n\n                        {/* {this.state.newClass.classType === \"live\" && ( */}\n                        { this.state.newClass.classType === \"CLT002\" && \n                          <LiveClass\n                            onInputChange={this.onInputChange}\n                            classUrl={this.state.newClass.classUrl}\n                            addedSchedules={this.state.newClass.schedules}\n                            addSchedule={this.addSchedule}\n                            sessionNumber={this.state.newClass.schedules.sessionNumber}\n                            removeSchedule={this.removeSchedule}\n                            schedules={this.state.newClass.schedules}\n                            title={this.state.newClass.title}\n                            validated={this.state.isLiveValid}\n                            nextButton={this.nextButton}\n                            previousButton={this.previousButton}\n                            classDetails={this.props.classDetails}\n                          />\n                        }\n                        {/* )} */}\n\n                        {/* {this.state.newClass.classType === \"exclusive\" && (\n                    <ExclusiveClass\n                      onInputChange={this.onInputChange}\n                      classUrl={this.state.newClass.classUrl}\n                      addedSchedules={this.state.newClass.schedules}\n                      addSchedule={this.addSchedule}\n                      removeSchedule={this.removeSchedule}\n                      addedEmails={this.state.newClass.emails}\n                      addEmail={this.addEmail}\n                      removeEmail={this.removeEmail}\n                      nextButton={this.nextButton}\n                      previousButton={this.previousButton}\n                      validated={this.state.isExclusiveValid}\n                      schedules={this.state.newClass.schedules}\n                    />\n                  )} */}\n                      </div>\n                      <div className=\"mt-5\">\n                        <button\n                          className=\"btn btn-info text-white\"\n                          onClick={() => this.previousButton(2)}\n                        >\n                          Previous\n                        </button>\n                        <button\n                          className=\"btn btn-megna btn-outline-megna text-megna float-right\"\n                          onClick={() => this.nextButton(4)}\n                          disabled={this.state.isLoading}\n                        >\n                            <span style = {{display: this.state.isLoading ? 'inline-block' : 'none'}} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                          {'Next'}\n                        </button>\n                      </div>\n                    </div>\n\n                    {/* Module */}                   \n                    {this.state.newClass.classType === \"CLT001\" &&  <div\n                      className={`tab-pane fade ${(this.state.activeTab===3 && this.state.newClass.classType==='CLT001') && 'show active'}`}\n                      id=\"nav-module\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-module-tab\"\n                    >\n                      <h3 htmlFor=\"firstName\">Class Modules</h3>\n                      <hr />\n                       \n                      <div className=\"mt-4\">\n                        <div>\n                          <RecordedClass\n                            availabilityStartDate={this.state.newClass.availabilityStartDate}\n                            availabilityEndDate={this.state.newClass.availabilityEndDate}\n                            addedLectures={this.state.newClass.lectures}\n                            addLecture={this.addLecture}\n                            addChapter={this.addChapter}\n                            addTopic={this.addTopic}\n                            removeLecture={this.removeLecture}\n                            removeChapter={this.removeChapter}\n                            removeTopic={this.removeTopic}\n                            editLecture={this.editLecture}\n                            editChapter={this.editChapter}\n                            editTopic={this.editTopic}\n                            nextButton={this.nextButton}\n                            previousButton={this.previousButton}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"mt-5\">\n                        <button\n                          className=\"btn btn-info text-white\"\n                          onClick={() => this.previousButton(2)}\n                        >\n                          Previous\n                        </button>\n                        <button\n                          className=\"btn btn-megna btn-outline-megna text-megna float-right\"\n                          onClick={addModuleNext}\n                          disabled={this.state.isLoading}\n                        >\n                            <span style = {{display: this.state.isLoading ? 'inline-block' : 'none'}} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                          {'Next'}\n                        </button>\n                      </div>\n                    </div>}\n\n                    {/* Pricing */}\n                    \n                    <div\n                      className={`tab-pane fade ${((this.state.activeTab===3 && this.state.newClass.classType==='CLT002') || (this.state.activeTab===4 && this.state.newClass.classType==='CLT001')) && 'show active'}`}\n                      id=\"nav-pricing\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-pricing-tab\"\n                    >\n                      <h3 htmlFor=\"firstName\">\n                                  Class Pricing\n                              </h3>\n                      <hr />\n                      <div className=\"form-group row\">\n                        <div className=\"col-12\">\n                          <label className=\"lms-input-label\" htmlFor=\"firstName\">\n                            Indicate Enrollment Fee Per Student\n                          </label>\n                          <br />\n                          <label className=\"lms-input-sublabel\">\n                            Check this for the recommended course pricing guide.\n                          </label>\n                        </div>\n                        <div className=\"col\">\n                          <label className=\"lms-input-label\" htmlFor=\"currency\">\n                            <b>Price per session</b>\n                          </label>\n                          <select\n                            className=\"custom-select lms-portal-select\"\n                            id=\"currency\"\n                            name=\"pricingId\"\n                            aria-describedby=\"pricingSelect\"\n                            // onClick={this.getPricing(this.state.newClass.classType)}\n                            defaultValue={this.state.newClass.pricingId}\n                            onChange={(event) => {\n                              this.setState((prevState) => {\n                                const newClass = { ...prevState.newClass };\n                                const value = this.state.pricing.find((item) => (item.pricingId.toString() === event.target.value.toString()));\n                                newClass.pricingId = value.pricingId;\n                                newClass.currency = value.currency;\n                                newClass.price = value.amount;\n                                return {\n                                  newClass,\n                                };\n                              });\n                            }}\n                            // disabled={true}\n                          >\n                            <option value={null} selected={this.state.newClass.pricingId===null} disabled>\n                              Select Pricing\n                            </option>\n                            {this.state.pricing.map(item => (<option value={item.pricingId} selected={item.pricingId===this.state.newClass.pricingId}>{`${item.currency} ${item.amount}`}</option>))}\n                            {/* <option value=\"USD\">USD</option>\n                            <option value=\"PHP\">PHP</option> */}\n                          </select>\n                          <small id=\"pricingSelect\" className=\"form-text\" style={{color: '#ef5350'}}>Note: Price list may change without prior notice.</small>\n                        </div>\n                        <table className=\"table table-striped m-4\" style={{maxWidth: '94%'}}>\n                          <thead style={{backgroundColor: 'lightsteelblue'}}>\n                              <th>Price</th>\n                              <th>Number of Sessions</th>\n                              <th>Total</th>\n                          </thead>\n                          <tbody>\n                              <tr>\n                                <td>{toMoneyFormat(this.state.newClass.price, this.state.newClass.currency)}</td>\n                                <td>{this.state.newClass.classType==='CLT002' ? this.state.newClass.schedules.sessionNumber : this.state.newClass.lectures.length}</td>\n                                <td>{this.state.newClass.classType==='CLT002' ? toMoneyFormat((this.state.newClass.schedules.sessionNumber*this.state.newClass.price), this.state.newClass.currency) : toMoneyFormat((this.state.newClass.lectures.length*this.state.newClass.price), this.state.newClass.currency)}</td>\n                              </tr>\n                          </tbody>\n                      </table>\n                      </div>\n                      <div className=\"mt-5\">\n                        <button\n                          className=\"btn btn-info text-white\"\n                          onClick={() => this.previousButton(3)}\n                        >\n                          Previous\n                        </button>\n                        <button\n                          className=\"btn btn-megna btn-outline-megna text-megna float-right\"\n                          onClick={pricingNextBtn}\n                          disabled={this.state.isLoading}\n                        >\n                          <span style = {{display: this.state.isLoading ? 'inline-block' : 'none'}} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                          {this.state.newClass.classType === 'CLT001' ? 'Submit' : 'Next'}\n                        </button>\n                      </div>\n                    </div>\n\n                    {/* Pop Quiz */}\n                    \n                    <div\n                      className={`tab-pane fade ${(this.state.activeTab===4 && this.state.newClass.classType==='CLT002') && 'show active'}`}\n                      id=\"nav-popquiz\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-popquiz-tab\"\n                    >\n                      <h3 htmlFor=\"firstName\">\n                                  Pop Quiz\n                              </h3>\n                      <hr />\n                      <div className=\"form-group row\">\n                        <PopQuizMaintenance\n                          onInputChange={this.onInputChange}\n                          passingGrade={this.state.newClass.passingGrade}\n                          addedQuestions={this.state.newClass.questions}\n                          addQuestion={this.addQuestion}\n                          removeQuestion={this.removeQuestion}\n                        />\n                      </div>\n                      <div className=\"mt-5\">\n                          <button\n                            className=\"btn btn-info text-white\"\n                            onClick={() => this.previousButton(4)}\n                          >\n                            Previous\n                          </button>\n                          <button\n                            className=\"btn btn-megna btn-outline-megna text-megna float-right float-right\"\n                            onClick={() => {this.nextButton(5)}}\n                            disabled={this.state.isLoading}\n                          >\n                            <span style = {{display: this.state.isLoading ? 'inline-block' : 'none'}} class=\"spinner-border spinner-border-sm btn-load\" role=\"status\" aria-hidden=\"true\"></span>\n                            {'Submit'}\n                          </button>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* </div> */}\n          </div>\n        </div>\n\n        <Modal\n          size=\"m\"\n          show={this.state.modalShow}\n          backdrop=\"static\"\n          keyboard={false}\n          onHide={() => this.setState({ modalShow: false })}\n        >\n          <Modal.Header>\n            <Modal.Title>{`Class ${this.props.classDetails === undefined ? 'Created' : 'Updated'}`}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Successfully {this.props.classDetails === undefined ? 'created a new class' : 'updated the class'}. Kindly wait for the approval\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => this.modalUpdate()}>\n              Return To Dashboard\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal size=\"l\" backdrop=\"static\" keyboard={false} show={this.state.payoutModalShow} onHide={() => this.setState({ payoutModalShow: false })}>\n        <Modal.Header>\n          <Modal.Title>\n            Set up Payout Account\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p style={{fontSize: '15px'}}>\n            To continue creating a class, you need to setup your payout account first.\n          </p>\n          <p style={{fontSize: '15px'}}>\n            <a href=\"/profile\">Click here</a> and proceed to \"Payout Account\" tab to set up payout account now or click Proceed button.\n          </p>\n          <p style={{fontSize: '15px'}}> If the link does not work, just navigate to <b>Profile</b> { '>' } <b>Payout Account</b></p>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"info\" href=\"/profile\" type=\"button\">\n              Proceed\n            </Button>\n        </Modal.Footer>\n      </Modal>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}