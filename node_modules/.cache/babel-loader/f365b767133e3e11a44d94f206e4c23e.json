{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/MailView/EmailContentView/Email/index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable eqeqeq */\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport arrayMutators from 'final-form-arrays';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { Message } from '../../EmailContentView';\nimport MailContent from '../MailContent';\nimport Popup from 'reactjs-popup';\nimport { deleteEmailMessage, getAllMessagesByThreadId } from '../../../../api/emailMessaging';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'react-final-form';\nimport { fields } from '../../EmailComposer/fields';\nimport { FileAttachment } from '../../EmailComposer';\nimport { FieldArray } from 'react-final-form-arrays';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContent = styled.div`\n  display: grid;\n  gap: 0.6rem;\n`;\n_c = MainContent;\nconst AvatarImage = styled.img`\n  border-radius: 999px;\n  height: 3rem;\n  width: 3rem;\n  object-fit: cover;\n`;\n_c2 = AvatarImage;\nconst SenderInfo = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto auto;\n  gap: 1rem;\n  cursor: pointer;\n  align-items: center;\n`;\n_c3 = SenderInfo;\nconst SenderInfoLeft = styled.div``;\n_c4 = SenderInfoLeft;\nconst SenderInfoRight = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr;\n`;\n_c5 = SenderInfoRight;\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  color: black;\n  display: grid;\n  grid-template-rows: auto auto 1fr;\n  gap: 1rem;\n  border-bottom: solid lightgray 1px;\n`;\n_c6 = Container;\nconst DateSent = styled.h6`\n  color: gray;\n  font-size: x-small;\n`;\n_c7 = DateSent;\n\nconst MessageActions = _ref => {\n  _s();\n\n  let {\n    messageId,\n    order\n  } = _ref;\n  const [deleting, setDeleting] = useState(false);\n  const params = useParams();\n  const dispatch = useDispatch();\n  const actions = [order !== 0 ? {\n    label: 'Delete Message',\n    icon: !deleting ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa fa-trash\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spinner-border text-primary\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this),\n    onClick: async messageId => {\n      try {\n        setDeleting(true);\n        await deleteEmailMessage(null, {\n          messageId\n        });\n        toast('Message Deleted', {\n          type: 'info',\n          position: 'bottom-left'\n        });\n        getAllMessagesByThreadId(dispatch, {\n          threadId: params.threadId\n        });\n      } catch (error) {\n        toast('Failed to delete message', {\n          type: 'default',\n          position: 'bottom-left'\n        });\n      } finally {\n        setDeleting(false);\n      }\n    }\n  } : null].filter(a => a != null);\n  if (!actions.length) return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-circle d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-ellipsis-v\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this),\n    position: \"left top\",\n    closeOnDocumentClick: true,\n    children: actions.map(_ref2 => {\n      let {\n        label,\n        icon,\n        onClick\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: label,\n        onClick: !deleting ? () => onClick(messageId) : null,\n        className: \"btn\",\n        style: {\n          display: 'grid',\n          alignItems: 'center',\n          gap: '0.5rem',\n          grid: '1fr / auto-flow auto 1fr',\n          padding: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageActions, \"Qt88TkWVAz0CsbE6TenB1yobm+E=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c8 = MessageActions;\nexport default function Email(_ref3) {\n  _s2();\n\n  let {\n    senderPhoto,\n    sender,\n    mailContent,\n    open,\n    createdDate,\n    messageId,\n    senderId,\n    order,\n    mailAttachments\n  } = _ref3;\n  const [openContent, setOpenContent] = useState(open);\n\n  const getDate = dateString => {\n    return dayjs(dateString).format('MMM D, YYYY, h:mm A') + ' (' + dayjs(dateString).fromNow('d') + ' ago' + ')';\n  };\n\n  const handleToggleContent = () => setOpenContent(!openContent);\n\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current && open) {\n      ref.current.scrollIntoView();\n    }\n  }, [open]);\n  const accountId = useSelector(state => {\n    var _state$auth, _state$auth$user;\n\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.accountId;\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(SenderInfo, {\n        onClick: handleToggleContent,\n        children: [/*#__PURE__*/_jsxDEV(SenderInfoLeft, {\n          children: /*#__PURE__*/_jsxDEV(AvatarImage, {\n            src: !(senderPhoto !== null && senderPhoto !== void 0 && senderPhoto.length) && './assets/images/image-placeholder.jpg' || senderPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SenderInfoRight, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateSent, {\n          children: getDate(createdDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageActions, {\n          messageId: messageId,\n          isOwner: accountId == senderId,\n          order: order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        show: openContent,\n        children: [/*#__PURE__*/_jsxDEV(MailContent, {\n          mailContent: mailContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => {},\n          initialValues: {\n            mailAttachments: mailAttachments\n          },\n          mutators: { ...arrayMutators\n          },\n          render: _ref4 => {\n            let {\n              handleSubmit\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: mailAttachments && mailAttachments.length && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Attachments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                  name: fields.mailAttachments.name,\n                  component: FileAttachment,\n                  viewOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this) || /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Email, \"RXuhuqep88Y/Zr8ZObpqDDvsDBM=\", false, function () {\n  return [useSelector];\n});\n\n_c9 = Email;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"MainContent\");\n$RefreshReg$(_c2, \"AvatarImage\");\n$RefreshReg$(_c3, \"SenderInfo\");\n$RefreshReg$(_c4, \"SenderInfoLeft\");\n$RefreshReg$(_c5, \"SenderInfoRight\");\n$RefreshReg$(_c6, \"Container\");\n$RefreshReg$(_c7, \"DateSent\");\n$RefreshReg$(_c8, \"MessageActions\");\n$RefreshReg$(_c9, \"Email\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/MailView/EmailContentView/Email/index.jsx"],"names":["React","Fragment","useEffect","useRef","useState","arrayMutators","dayjs","styled","Message","MailContent","Popup","deleteEmailMessage","getAllMessagesByThreadId","toast","useParams","useDispatch","useSelector","Form","fields","FileAttachment","FieldArray","MainContent","div","AvatarImage","img","SenderInfo","SenderInfoLeft","SenderInfoRight","Container","DateSent","h6","MessageActions","messageId","order","deleting","setDeleting","params","dispatch","actions","label","icon","onClick","type","position","threadId","error","filter","a","length","map","display","alignItems","gap","grid","padding","Email","senderPhoto","sender","mailContent","open","createdDate","senderId","mailAttachments","openContent","setOpenContent","getDate","dateString","format","fromNow","handleToggleContent","ref","current","scrollIntoView","accountId","state","auth","user","handleSubmit","name"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport arrayMutators from 'final-form-arrays';\n\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { Message } from '../../EmailContentView';\nimport MailContent from '../MailContent';\nimport Popup from 'reactjs-popup';\nimport {\n  deleteEmailMessage,\n  getAllMessagesByThreadId\n} from '../../../../api/emailMessaging';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'react-final-form';\nimport { fields } from '../../EmailComposer/fields';\nimport { FileAttachment } from '../../EmailComposer';\nimport { FieldArray } from 'react-final-form-arrays';\n\nconst MainContent = styled.div`\n  display: grid;\n  gap: 0.6rem;\n`;\n\nconst AvatarImage = styled.img`\n  border-radius: 999px;\n  height: 3rem;\n  width: 3rem;\n  object-fit: cover;\n`;\n\nconst SenderInfo = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto auto;\n  gap: 1rem;\n  cursor: pointer;\n  align-items: center;\n`;\n\nconst SenderInfoLeft = styled.div``;\n\nconst SenderInfoRight = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  color: black;\n  display: grid;\n  grid-template-rows: auto auto 1fr;\n  gap: 1rem;\n  border-bottom: solid lightgray 1px;\n`;\nconst DateSent = styled.h6`\n  color: gray;\n  font-size: x-small;\n`;\nconst MessageActions = ({ messageId, order }) => {\n  const [deleting, setDeleting] = useState(false);\n  const params = useParams();\n  const dispatch = useDispatch();\n  const actions = [\n    order !== 0\n      ? {\n          label: 'Delete Message',\n          icon: !deleting ? (\n            <i className='fa fa-trash' aria-hidden='true' />\n          ) : (\n            <div class='spinner-border text-primary' role='status'>\n              <span class='sr-only'>Loading...</span>\n            </div>\n          ),\n          onClick: async messageId => {\n            try {\n              setDeleting(true);\n              await deleteEmailMessage(null, { messageId });\n              toast('Message Deleted', { type: 'info', position: 'bottom-left' });\n              getAllMessagesByThreadId(dispatch, { threadId: params.threadId });\n            } catch (error) {\n              toast('Failed to delete message', {\n                type: 'default',\n                position: 'bottom-left'\n              });\n            } finally {\n              setDeleting(false);\n            }\n          }\n        }\n      : null\n  ].filter(a => a != null);\n  if (!actions.length) return <Fragment />;\n  return (\n    <Popup\n      trigger={() => (\n        <button className='btn btn-circle d-flex justify-content-center align-items-center'>\n          <i className='fas fa-ellipsis-v' />\n        </button>\n      )}\n      position='left top'\n      closeOnDocumentClick\n    >\n      {actions.map(({ label, icon, onClick }) => (\n        <div\n          id={label}\n          onClick={!deleting ? () => onClick(messageId) : null}\n          className='btn'\n          style={{\n            display: 'grid',\n            alignItems: 'center',\n            gap: '0.5rem',\n            grid: '1fr / auto-flow auto 1fr',\n            padding: '0.5rem'\n          }}\n        >\n          <div>{icon}</div>\n          <div>{label}</div>\n        </div>\n      ))}\n    </Popup>\n  );\n};\n\nexport default function Email({\n  senderPhoto,\n  sender,\n  mailContent,\n  open,\n  createdDate,\n  messageId,\n  senderId,\n  order,\n  mailAttachments\n}) {\n  const [openContent, setOpenContent] = useState(open);\n  const getDate = dateString => {\n    return (\n      dayjs(dateString).format('MMM D, YYYY, h:mm A') +\n      ' (' +\n      dayjs(dateString).fromNow('d') +\n      ' ago' +\n      ')'\n    );\n  };\n\n  const handleToggleContent = () => setOpenContent(!openContent);\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current && open) {\n      ref.current.scrollIntoView();\n    }\n  }, [open]);\n  const accountId = useSelector(state => state.auth?.user?.accountId);\n  return (\n    <Container ref={ref}>\n      <MainContent>\n        <SenderInfo onClick={handleToggleContent}>\n          <SenderInfoLeft>\n            <AvatarImage\n              src={\n                (!senderPhoto?.length && './assets/images/image-placeholder.jpg') ||\n                senderPhoto\n              }\n            />\n          </SenderInfoLeft>\n          <SenderInfoRight>\n            <div>{sender}</div>\n          </SenderInfoRight>\n          <DateSent>{getDate(createdDate)}</DateSent>\n          <MessageActions\n            messageId={messageId}\n            isOwner={accountId == senderId}\n            order={order}\n          />\n        </SenderInfo>\n        <Message show={openContent}>\n          <MailContent mailContent={mailContent} />\n          <Form\n            onSubmit={() => {}}\n            initialValues={{\n              mailAttachments: mailAttachments\n            }}\n            mutators={{\n              ...arrayMutators\n            }}\n            render={({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                {(mailAttachments && mailAttachments.length && (\n                  <div className='mt-5'>\n                    <h6>Attachments</h6>\n                    <FieldArray\n                      name={fields.mailAttachments.name}\n                      component={FileAttachment}\n                      viewOnly={true}\n                    />\n                  </div>\n                )) || <div />}\n              </form>\n            )}\n          />\n        </Message>\n      </MainContent>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}