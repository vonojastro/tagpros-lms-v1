{"ast":null,"code":"import { api } from \"../api\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nimport { getAllShortListedTeacherSuccess, getAllShortListedTeacherFail, forInterviewTeacherSuccess, forInterviewTeacherFail, getAllForInterviewTeacherSuccess, getAllForInterviewTeacherFail, updateFinalListFail, updateFinalListSuccess, getAcceptedTeachersFail, getAcceptedTeachersSuccess, getRejectedTeachersFail, getRejectedTeachersSuccess, addInterviewNotesFail, addInterviewNotesSuccess, getTeachersBySchoolLeaderSuccess, getTeachersBySchoolLeaderFail } from \"../redux/actions/school-leader\";\nconst SCHOOL_LEADER_API = \"/school-leader\";\nexport const getAllShortListedTeacher = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/getAllShortListedTeacher\");\n    dispatch(getAllShortListedTeacherSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(getAllShortListedTeacherFail(error));\n    console.log(\"(getAllShortListedTeacher) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getAllForInterviewTeacher = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(SCHOOL_LEADER_API + \"/getAllForInterviewTeacher\");\n    dispatch(getAllForInterviewTeacherSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(getAllForInterviewTeacherFail(error));\n    console.log(\"(getAllForInterviewTeacher) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const forInterviewTeacher = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/forInterviewTeacher\", args);\n    dispatch(forInterviewTeacherSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(forInterviewTeacherFail(error));\n    console.log(\"(forInterviewTeacher) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const updateFinalList = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/updateFinalList\", args);\n    dispatch(updateFinalListSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(updateFinalListFail(error));\n    console.log(\"(updateFinalList) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const addInterviewNotes = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/addInterviewNotes\", args);\n    dispatch(addInterviewNotesSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(addInterviewNotesFail(error));\n    console.log(\"(addInterviewNotes) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getAcceptedTeachers = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/getAcceptedTeachers\");\n    dispatch(getAcceptedTeachersSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(getAcceptedTeachersFail(error));\n    console.log(\"(getAcceptedTeachers) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getRejectedTeachers = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/getRejectedTeachers\");\n    dispatch(getRejectedTeachersSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(getRejectedTeachersFail(error));\n    console.log(\"(getRejectedTeachers) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getTeachersBySchoolLeader = async (dispatch, args, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.post(SCHOOL_LEADER_API + \"/getTeachersBySchoolLeader\", args);\n    dispatch(getTeachersBySchoolLeaderSuccess(response.data));\n    callback(true, response.data);\n  } catch (error) {\n    dispatch(getTeachersBySchoolLeaderFail(error));\n    console.log(\"(getTeachersBySchoolLeader) Status:\", error);\n    callback(false, error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/school-leader.js"],"names":["api","onLoadingScreen","offLoadingScreen","getAllShortListedTeacherSuccess","getAllShortListedTeacherFail","forInterviewTeacherSuccess","forInterviewTeacherFail","getAllForInterviewTeacherSuccess","getAllForInterviewTeacherFail","updateFinalListFail","updateFinalListSuccess","getAcceptedTeachersFail","getAcceptedTeachersSuccess","getRejectedTeachersFail","getRejectedTeachersSuccess","addInterviewNotesFail","addInterviewNotesSuccess","getTeachersBySchoolLeaderSuccess","getTeachersBySchoolLeaderFail","SCHOOL_LEADER_API","getAllShortListedTeacher","dispatch","callback","response","post","data","error","console","log","getAllForInterviewTeacher","get","forInterviewTeacher","args","updateFinalList","addInterviewNotes","getAcceptedTeachers","getRejectedTeachers","getTeachersBySchoolLeader"],"mappings":"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","sourcesContent":["import { api } from \"../api\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nimport {\n    getAllShortListedTeacherSuccess,\n    getAllShortListedTeacherFail,\n\tforInterviewTeacherSuccess,\n\tforInterviewTeacherFail,\n\tgetAllForInterviewTeacherSuccess,\n\tgetAllForInterviewTeacherFail,\n\tupdateFinalListFail,\n\tupdateFinalListSuccess,\n\tgetAcceptedTeachersFail,\n\tgetAcceptedTeachersSuccess,\n\tgetRejectedTeachersFail,\n\tgetRejectedTeachersSuccess,\n\taddInterviewNotesFail,\n\taddInterviewNotesSuccess,\n\tgetTeachersBySchoolLeaderSuccess,\n\tgetTeachersBySchoolLeaderFail\n} from \"../redux/actions/school-leader\";\n\nconst SCHOOL_LEADER_API = \"/school-leader\";\n\n\nexport const getAllShortListedTeacher = async(dispatch, callback) =>{\n    try {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/getAllShortListedTeacher\");\n\n\t\tdispatch(getAllShortListedTeacherSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(getAllShortListedTeacherFail(error));\n\t\tconsole.log(\"(getAllShortListedTeacher) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getAllForInterviewTeacher = async(dispatch, callback) =>{\n    try {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.get(SCHOOL_LEADER_API + \"/getAllForInterviewTeacher\");\n\n\t\tdispatch(getAllForInterviewTeacherSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(getAllForInterviewTeacherFail(error));\n\t\tconsole.log(\"(getAllForInterviewTeacher) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const forInterviewTeacher = async (dispatch, args, callback) =>{\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/forInterviewTeacher\", args);\n\n\t\tdispatch(forInterviewTeacherSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(forInterviewTeacherFail(error));\n\t\tconsole.log(\"(forInterviewTeacher) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const updateFinalList = async (dispatch, args, callback) =>{\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/updateFinalList\", args);\n\n\t\tdispatch(updateFinalListSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(updateFinalListFail(error));\n\t\tconsole.log(\"(updateFinalList) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const addInterviewNotes = async (dispatch, args, callback) =>{\n\ttry {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/addInterviewNotes\", args);\n\n\t\tdispatch(addInterviewNotesSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(addInterviewNotesFail(error));\n\t\tconsole.log(\"(addInterviewNotes) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getAcceptedTeachers = async(dispatch, callback) =>{\n    try {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/getAcceptedTeachers\");\n\n\t\tdispatch(getAcceptedTeachersSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(getAcceptedTeachersFail(error));\n\t\tconsole.log(\"(getAcceptedTeachers) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getRejectedTeachers = async(dispatch, callback) =>{\n    try {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/getRejectedTeachers\");\n\n\t\tdispatch(getRejectedTeachersSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(getRejectedTeachersFail(error));\n\t\tconsole.log(\"(getRejectedTeachers) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getTeachersBySchoolLeader = async(dispatch, args, callback) =>{\n    try {\n        dispatch(onLoadingScreen());\n\t\tconst response = await api.post(SCHOOL_LEADER_API + \"/getTeachersBySchoolLeader\", args);\n\n\t\tdispatch(getTeachersBySchoolLeaderSuccess(response.data));\n\t\tcallback(true, response.data);\n\t} catch (error) {\n        dispatch(getTeachersBySchoolLeaderFail(error));\n\t\tconsole.log(\"(getTeachersBySchoolLeader) Status:\", error);\n\t\tcallback(false, error);\n        dispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};"]},"metadata":{},"sourceType":"module"}