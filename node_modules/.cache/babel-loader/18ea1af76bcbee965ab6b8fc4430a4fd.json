{"ast":null,"code":"import { getLearnerSchedules } from \"../../api/classEnroll\";\nexport const FETCH_LEARNER_SCHEDULES = \"FETCH_LEARNER_SCHEDULES\";\nexport const FETCH_LEARNER_SCHEDULES_REQUEST = \"FETCH_LEARNER_SCHEDULES_REQUEST\";\nexport const FETCH_LEARNER_SCHEDULES_SUCCESS = \"FETCH_LEARNER_SCHEDULES_SUCCESS\";\nexport const FETCH_LEARNER_SCHEDULES_ERROR = \"FETCH_LEARNER_SCHEDULES_ERROR\";\nexport const fetchLearnerSchedules = _ref => {\n  let {\n    id\n  } = _ref;\n  return async dispatch => {\n    try {\n      dispatch(fetchLearnerSchedulesRequest({\n        id\n      }));\n      const learners = await getLearnerSchedules(id);\n      dispatch(fetchLearnerSchedulesSuccess({\n        [id]: learners\n      }));\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n\n      dispatch(fetchLearnerSchedulesError(data));\n      return error;\n    }\n  };\n};\nexport function fetchLearnerSchedulesRequest(data) {\n  return {\n    type: FETCH_LEARNER_SCHEDULES_REQUEST,\n    data\n  };\n}\nexport function fetchLearnerSchedulesSuccess(data) {\n  return {\n    type: FETCH_LEARNER_SCHEDULES_SUCCESS,\n    data\n  };\n}\nexport function fetchLearnerSchedulesError(data) {\n  return {\n    type: FETCH_LEARNER_SCHEDULES_ERROR,\n    data\n  };\n}","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/actions/learnersSchedules.js"],"names":["getLearnerSchedules","FETCH_LEARNER_SCHEDULES","FETCH_LEARNER_SCHEDULES_REQUEST","FETCH_LEARNER_SCHEDULES_SUCCESS","FETCH_LEARNER_SCHEDULES_ERROR","fetchLearnerSchedules","id","dispatch","fetchLearnerSchedulesRequest","learners","fetchLearnerSchedulesSuccess","error","data","response","status","request","fetchLearnerSchedulesError","type"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,uBAApC;AAEA,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,6BAA6B,GAAG,+BAAtC;AAGP,OAAO,MAAMC,qBAAqB,GAAG,QAAY;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC/C,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,4BAA4B,CAAC;AAAEF,QAAAA;AAAF,OAAD,CAA7B,CAAR;AACA,YAAMG,QAAQ,GAAG,MAAMT,mBAAmB,CAACM,EAAD,CAA1C;AACAC,MAAAA,QAAQ,CAACG,4BAA4B,CAAC;AAAE,SAACJ,EAAD,GAAMG;AAAR,OAAD,CAA7B,CAAR;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACd;AACA,YAAMC,IAAI,GAAG,EAAb;;AACA,UAAID,KAAK,CAACE,QAAV,EAAoB;AAClB;AACR;AACA;AACA;AACQD,QAAAA,IAAI,CAACE,MAAL,GAAcH,KAAK,CAACE,QAAN,CAAeC,MAA7B;AACD,OAND,MAMO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACxB;AACR;AACA;AACA;AACA;AACQH,QAAAA,IAAI,CAACE,MAAL,GAAc,GAAd;AACD,OAPM,MAOA;AACLF,QAAAA,IAAI,CAACE,MAAL,GAAc,GAAd;AACD;;AACDP,MAAAA,QAAQ,CAACS,0BAA0B,CAACJ,IAAD,CAA3B,CAAR;AACA,aAAOD,KAAP;AACD;AACF,GA3BD;AA4BD,CA7BM;AA+BP,OAAO,SAASH,4BAAT,CAAsCI,IAAtC,EAA4C;AACjD,SAAO;AAAEK,IAAAA,IAAI,EAAEf,+BAAR;AAAyCU,IAAAA;AAAzC,GAAP;AACD;AAED,OAAO,SAASF,4BAAT,CAAsCE,IAAtC,EAA4C;AACjD,SAAO;AAAEK,IAAAA,IAAI,EAAEd,+BAAR;AAAyCS,IAAAA;AAAzC,GAAP;AACD;AAED,OAAO,SAASI,0BAAT,CAAoCJ,IAApC,EAA0C;AAC/C,SAAO;AAAEK,IAAAA,IAAI,EAAEb,6BAAR;AAAuCQ,IAAAA;AAAvC,GAAP;AACD","sourcesContent":["import { getLearnerSchedules } from \"../../api/classEnroll\";\n\nexport const FETCH_LEARNER_SCHEDULES = \"FETCH_LEARNER_SCHEDULES\";\nexport const FETCH_LEARNER_SCHEDULES_REQUEST = \"FETCH_LEARNER_SCHEDULES_REQUEST\";\nexport const FETCH_LEARNER_SCHEDULES_SUCCESS = \"FETCH_LEARNER_SCHEDULES_SUCCESS\";\nexport const FETCH_LEARNER_SCHEDULES_ERROR = \"FETCH_LEARNER_SCHEDULES_ERROR\";\n\n\nexport const fetchLearnerSchedules = ({ id }) => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchLearnerSchedulesRequest({ id }));\n      const learners = await getLearnerSchedules(id);\n      dispatch(fetchLearnerSchedulesSuccess({ [id]: learners }));\n    } catch (error) {\n      // Error ðŸ˜¨\n      const data = {};\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        data.status = error.response.status;\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        data.status = 500;\n      } else {\n        data.status = 500;\n      }\n      dispatch(fetchLearnerSchedulesError(data));\n      return error;\n    }\n  };\n};\n\nexport function fetchLearnerSchedulesRequest(data) {\n  return { type: FETCH_LEARNER_SCHEDULES_REQUEST, data };\n}\n\nexport function fetchLearnerSchedulesSuccess(data) {\n  return { type: FETCH_LEARNER_SCHEDULES_SUCCESS, data };\n}\n\nexport function fetchLearnerSchedulesError(data) {\n  return { type: FETCH_LEARNER_SCHEDULES_ERROR, data };\n}\n"]},"metadata":{},"sourceType":"module"}