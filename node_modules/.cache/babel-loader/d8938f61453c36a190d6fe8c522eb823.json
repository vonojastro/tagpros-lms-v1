{"ast":null,"code":"import { setAuthToken } from \"redux/actions/auth\";\nimport { api } from \"../api\";\nimport { setRegisterStatus } from \"../redux/actions/registration\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nimport { setRegistrationId } from \"../utils/auth/index\";\nexport const submitRegistration = async (dispatch, params) => {\n  try {\n    dispatch === null || dispatch === void 0 ? void 0 : dispatch(onLoadingScreen());\n    const response = await api.post(\"/auth/register\", params);\n    setRegistrationId(response.data.registrationId);\n    dispatch === null || dispatch === void 0 ? void 0 : dispatch(setRegisterStatus(response.data));\n    if (response.data.token) dispatch(setAuthToken(response.data.token));\n  } catch (error) {\n    dispatch === null || dispatch === void 0 ? void 0 : dispatch(setRegisterStatus(error.response.data));\n    throw error;\n  } finally {\n    dispatch === null || dispatch === void 0 ? void 0 : dispatch(offLoadingScreen());\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/registration.js"],"names":["setAuthToken","api","setRegisterStatus","onLoadingScreen","offLoadingScreen","setRegistrationId","submitRegistration","dispatch","params","response","post","data","registrationId","token","error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,oBAA7B;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,8BAAlD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAAOC,QAAP,EAAiBC,MAAjB,KAA4B;AAC1D,MAAI;AACLD,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGJ,eAAe,EAAlB,CAAR;AACA,UAAMM,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,gBAAT,EAA2BF,MAA3B,CAAvB;AACAH,IAAAA,iBAAiB,CAACI,QAAQ,CAACE,IAAT,CAAcC,cAAf,CAAjB;AACAL,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGL,iBAAiB,CAACO,QAAQ,CAACE,IAAV,CAApB,CAAR;AACA,QAAGF,QAAQ,CAACE,IAAT,CAAcE,KAAjB,EAAwBN,QAAQ,CAACP,YAAY,CAACS,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAb,CAAR;AAEtB,GAPD,CAOE,OAAOC,KAAP,EAAc;AACjBP,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGL,iBAAiB,CAACY,KAAK,CAACL,QAAN,CAAeE,IAAhB,CAApB,CAAR;AACA,UAAMG,KAAN;AAEE,GAXD,SAWU;AACXP,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGH,gBAAgB,EAAnB,CAAR;AACA;AACF,CAfM","sourcesContent":["import { setAuthToken } from \"redux/actions/auth\";\nimport { api } from \"../api\";\nimport { setRegisterStatus } from \"../redux/actions/registration\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nimport { setRegistrationId } from \"../utils/auth/index\"\n\nexport const submitRegistration = async (dispatch, params) => {\n    try {\n\t\t\tdispatch?.(onLoadingScreen());\n\t\t\tconst response = await api.post(\"/auth/register\", params);\n\t\t\tsetRegistrationId(response.data.registrationId);\n\t\t\tdispatch?.(setRegisterStatus(response.data));\n\t\t\tif(response.data.token) dispatch(setAuthToken(response.data.token))\n\n    } catch (error) {\n\t\t\tdispatch?.(setRegisterStatus(error.response.data))\n\t\t\tthrow error\n\n    } finally {\n\t\t\tdispatch?.(offLoadingScreen())\n\t\t}\n};"]},"metadata":{},"sourceType":"module"}