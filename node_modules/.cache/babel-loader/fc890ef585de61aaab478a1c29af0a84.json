{"ast":null,"code":"var _jsxFileName = \"/Users/vonojastro/Desktop/lms-frontend-v2/src/components/UsersTable/index.jsx\";\nimport styled from 'styled-components';\nimport React from 'react';\nimport DataTable from 'react-data-table-component';\nimport { InputLabel } from 'components/common/Form/Inputs';\nimport { ACCOUNT_STATUS, APPLICATION_STATUS, USER_CODES } from 'utils/constants';\nimport _ from 'lodash';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: 'First name',\n  selector: row => row.FIRST_NAME,\n  sortable: true\n}, {\n  name: 'IS',\n  selector: row => row.IS_CHECKED,\n  sortable: true,\n  omit: true\n}, {\n  name: 'Last name',\n  selector: row => row.LAST_NAME,\n  sortable: true\n}, {\n  name: 'Email',\n  selector: row => row.EMAIL_ADD,\n  sortable: true\n}, {\n  name: 'Account Type',\n  selector: row => row.USER_CODE,\n  sortable: true,\n  format: _ref => {\n    let {\n      USER_CODE\n    } = _ref;\n    return USER_CODES[USER_CODE] === 'Educ' ? 'Education' : USER_CODES[USER_CODE];\n  }\n}, {\n  name: 'Account Status',\n  selector: row => row.STATUS,\n  format: row => _.findKey(ACCOUNT_STATUS, v => v === row.STATUS),\n  sortable: true\n}, {\n  name: 'Application Status',\n  selector: row => row.APPLICATION_STATUS,\n  format: row => _.findKey(APPLICATION_STATUS, v => v === row.APPLICATION_STATUS),\n  // selector: ({ TBL_LMS_TEACHER, TBL_LMS_SCHOOL_DISTRICT }) =>\n  //   (TBL_LMS_SCHOOL_DISTRICT || TBL_LMS_TEACHER)?.APPLICATION_STATUS || undefined,\n  // format: ({ TBL_LMS_TEACHER, TBL_LMS_SCHOOL_DISTRICT }) =>\n  //   _.findKey(\n  //     APPLICATION_STATUS,\n  //     v =>\n  //       v === (TBL_LMS_SCHOOL_DISTRICT || TBL_LMS_TEACHER)?.APPLICATION_STATUS ||\n  //       undefined\n  //   ),\n  sortable: true\n}, {\n  name: 'Verified',\n  selector: row => row.IS_VERIFY,\n  format: row => row.IS_VERIFY === true || row.IS_VERIFY === 'true' ? 'Yes' : 'No',\n  sortable: true\n}];\nconst Wrapper = styled.div`\n  [type='checkbox']:checked,\n  [type='checkbox']:not(:checked) {\n    position: static !important;\n    opacity: 100%;\n  }\n  .rdt_TableCol_Sortable {\n    /* white-space: normal; */\n    > div:nth-child(1) {\n      white-space: break-spaces !important;\n    }\n  }\n`;\n_c = Wrapper;\n\nconst rowSelectCritera = _ref2 => {\n  let {\n    IS_CHECKED\n  } = _ref2;\n  return IS_CHECKED === true;\n};\n\nconst UsersTable = _ref3 => {\n  let {\n    data,\n    handleSelectedRowsChange,\n    to,\n    progressPending\n  } = _ref3;\n  // const rowSelectCritera = ({ EMAIL_ADD }) =>\n  //   to.find(selected => selected.EMAIL_ADD === EMAIL_ADD);\n  // useMemo(() => first, [second])\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"w-100 h-100\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      label: 'Search Results'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      progressPending: progressPending,\n      columns: columns,\n      keyField: \"EMAIL_ADD\" // data={new Array(100).fill({\n      //   EMAIL_ADD: `HAHAHAHA${Math.random() * 100}@yahoo.com`\n      // })}\n      ,\n      data: data,\n      selectableRows: true,\n      onSelectedRowsChange: handleSelectedRowsChange,\n      pagination: true,\n      selectableRowSelected: rowSelectCritera,\n      progressComponent: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = UsersTable;\nexport default UsersTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"UsersTable\");","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/components/UsersTable/index.jsx"],"names":["styled","React","DataTable","InputLabel","ACCOUNT_STATUS","APPLICATION_STATUS","USER_CODES","_","Spinner","columns","name","selector","row","FIRST_NAME","sortable","IS_CHECKED","omit","LAST_NAME","EMAIL_ADD","USER_CODE","format","STATUS","findKey","v","IS_VERIFY","Wrapper","div","rowSelectCritera","UsersTable","data","handleSelectedRowsChange","to","progressPending"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport DataTable from 'react-data-table-component';\nimport { InputLabel } from 'components/common/Form/Inputs';\nimport { ACCOUNT_STATUS, APPLICATION_STATUS, USER_CODES } from 'utils/constants';\nimport _ from 'lodash';\nimport { Spinner } from 'react-bootstrap';\nconst columns = [\n  {\n    name: 'First name',\n    selector: row => row.FIRST_NAME,\n    sortable: true\n  },\n  {\n    name: 'IS',\n    selector: row => row.IS_CHECKED,\n    sortable: true,\n    omit: true\n  },\n  {\n    name: 'Last name',\n    selector: row => row.LAST_NAME,\n    sortable: true\n  },\n  {\n    name: 'Email',\n    selector: row => row.EMAIL_ADD,\n    sortable: true\n  },\n  {\n    name: 'Account Type',\n    selector: row => row.USER_CODE,\n    sortable: true,\n    format: ({ USER_CODE }) =>\n      USER_CODES[USER_CODE] === 'Educ' ? 'Education' : USER_CODES[USER_CODE]\n  },\n  {\n    name: 'Account Status',\n    selector: row => row.STATUS,\n    format: row => _.findKey(ACCOUNT_STATUS, v => v === row.STATUS),\n    sortable: true\n  },\n  {\n    name: 'Application Status',\n    selector: row => row.APPLICATION_STATUS,\n    format: row => _.findKey(APPLICATION_STATUS, v => v === row.APPLICATION_STATUS),\n    // selector: ({ TBL_LMS_TEACHER, TBL_LMS_SCHOOL_DISTRICT }) =>\n    //   (TBL_LMS_SCHOOL_DISTRICT || TBL_LMS_TEACHER)?.APPLICATION_STATUS || undefined,\n    // format: ({ TBL_LMS_TEACHER, TBL_LMS_SCHOOL_DISTRICT }) =>\n    //   _.findKey(\n    //     APPLICATION_STATUS,\n    //     v =>\n    //       v === (TBL_LMS_SCHOOL_DISTRICT || TBL_LMS_TEACHER)?.APPLICATION_STATUS ||\n    //       undefined\n    //   ),\n    sortable: true\n  },\n  {\n    name: 'Verified',\n    selector: row => row.IS_VERIFY,\n    format: row => (row.IS_VERIFY === true || row.IS_VERIFY === 'true' ? 'Yes' : 'No'),\n    sortable: true\n  }\n];\n\nconst Wrapper = styled.div`\n  [type='checkbox']:checked,\n  [type='checkbox']:not(:checked) {\n    position: static !important;\n    opacity: 100%;\n  }\n  .rdt_TableCol_Sortable {\n    /* white-space: normal; */\n    > div:nth-child(1) {\n      white-space: break-spaces !important;\n    }\n  }\n`;\n\nconst rowSelectCritera = ({ IS_CHECKED }) => IS_CHECKED === true;\nconst UsersTable = ({ data, handleSelectedRowsChange, to, progressPending }) => {\n  // const rowSelectCritera = ({ EMAIL_ADD }) =>\n  //   to.find(selected => selected.EMAIL_ADD === EMAIL_ADD);\n  // useMemo(() => first, [second])\n\n  return (\n    <Wrapper className='w-100 h-100'>\n      <InputLabel label={'Search Results'} />\n      <DataTable\n        progressPending={progressPending}\n        columns={columns}\n        keyField='EMAIL_ADD'\n        // data={new Array(100).fill({\n        //   EMAIL_ADD: `HAHAHAHA${Math.random() * 100}@yahoo.com`\n        // })}\n        data={data}\n        selectableRows\n        onSelectedRowsChange={handleSelectedRowsChange}\n        pagination\n        selectableRowSelected={rowSelectCritera}\n        progressComponent={\n          <Spinner animation='border' role='status'>\n            {/* <span className='visually-hidden'>Loading...</span> */}\n          </Spinner>\n        }\n      />\n    </Wrapper>\n  );\n};\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}