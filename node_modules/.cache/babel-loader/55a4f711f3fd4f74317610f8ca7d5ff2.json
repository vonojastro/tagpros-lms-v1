{"ast":null,"code":"import { api } from \"../api\";\nimport { getClassesSuccess, getClassesAdminSuccess, submitClassApprovalAction, getActiveClassesSuccess, getEnrolledClasses, getAllStudentsEnrolled, getClassDetailsSuccess, getPendingEnrollmentSuccess, getFinalRecordedClasses } from \"redux/actions/class\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\";\nconst CLASS_ENDPOINT = '/class';\nexport const getAllClasses = async dispatch => {\n  try {\n    const response = await api.get(CLASS_ENDPOINT + \"/me\");\n    dispatch(getClassesSuccess(response.data));\n    console.log(response);\n  } catch (error) {\n    console.log(\"(getAllClasses) Status:\", error);\n  }\n};\nexport const getClassesAdmin = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(CLASS_ENDPOINT + \"/final\");\n    dispatch(getClassesAdminSuccess(response.data));\n    !!callback && callback(true);\n    console.log(response);\n  } catch (error) {\n    !!callback && callback(false);\n    console.log(\"(getClassesAdmin) Status:\", error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getFinalRecordedClassesDispatch = async (dispatch, callback) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(CLASS_ENDPOINT + \"/final/recorded\");\n    dispatch(getFinalRecordedClasses(response.data));\n    !!callback && callback(true);\n    console.log(response);\n  } catch (error) {\n    !!callback && callback(false);\n    console.log(\"(getFinalRecordedClasses) Status:\", error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const submitClassApproval = async (dispatch, args, callback) => {\n  try {\n    const response = await api.post(CLASS_ENDPOINT + \"/review\", args);\n    callback && callback(true);\n    dispatch(submitClassApprovalAction({\n      index: args.index,\n      status: response.data.data.STATUS\n    }));\n  } catch (error) {\n    callback && callback(false, error.response);\n    console.log(\"Status:\", error);\n  }\n};\nexport const getAllActiveClasses = async dispatch => {\n  try {\n    dispatch(onLoadingScreen());\n    await api.get(\"/class-learner/getAllActive\").then(result => {\n      dispatch(getActiveClassesSuccess(result.data));\n      console.log(result);\n      return result;\n    });\n  } catch (error) {\n    dispatch(offLoadingScreen());\n    console.log(\"(getActiveClassesSuccess) Status:\", error);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getEnrolledClass = async dispatch => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(\"/class-enroll/viewMyClass\");\n    dispatch(getEnrolledClasses(response.data));\n  } catch (error) {\n    dispatch(offLoadingScreen());\n    console.log(\"(getEnrolledClasses) Status:\", error);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getPendingEnrollment = async dispatch => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(\"/class-enroll/viewPendingEnrollment\");\n    dispatch(getPendingEnrollmentSuccess(response.data));\n  } catch (error) {\n    dispatch(offLoadingScreen());\n    console.log(\"(getEnrolledClasses) Status:\", error);\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};\nexport const getAllMyStudents = async dispatch => {\n  try {\n    const response = await api.get(\"/class-enroll/viewAllStudents\");\n    dispatch(getAllStudentsEnrolled(response.data));\n  } catch (error) {\n    console.log(\"(getAllMyStudents) Status:\", error);\n  }\n};\nexport const getClassDetails = async (dispatch, args) => {\n  try {\n    dispatch(onLoadingScreen());\n    const response = await api.get(CLASS_ENDPOINT + \"/\" + args.id);\n    dispatch(getClassDetailsSuccess(response.data));\n    console.log(response);\n  } catch (error) {\n    console.log(\"(getAllClasses) Status:\", error);\n    dispatch(offLoadingScreen());\n  } finally {\n    dispatch(offLoadingScreen());\n  }\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/api/class.js"],"names":["api","getClassesSuccess","getClassesAdminSuccess","submitClassApprovalAction","getActiveClassesSuccess","getEnrolledClasses","getAllStudentsEnrolled","getClassDetailsSuccess","getPendingEnrollmentSuccess","getFinalRecordedClasses","onLoadingScreen","offLoadingScreen","CLASS_ENDPOINT","getAllClasses","dispatch","response","get","data","console","log","error","getClassesAdmin","callback","getFinalRecordedClassesDispatch","submitClassApproval","args","post","index","status","STATUS","getAllActiveClasses","then","result","getEnrolledClass","getPendingEnrollment","getAllMyStudents","getClassDetails","id"],"mappings":"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","sourcesContent":["import { api } from \"../api\";\nimport { getClassesSuccess, getClassesAdminSuccess, submitClassApprovalAction, getActiveClassesSuccess, getEnrolledClasses, getAllStudentsEnrolled, getClassDetailsSuccess, getPendingEnrollmentSuccess, getFinalRecordedClasses } from \"redux/actions/class\";\nimport { onLoadingScreen, offLoadingScreen } from \"../redux/actions/ui-elements\"\n\nconst CLASS_ENDPOINT = '/class';\n\nexport const getAllClasses = async (dispatch) => {\n\ttry {\n\t\tconst response = await api.get(CLASS_ENDPOINT + \"/me\");\n\n\t\tdispatch(getClassesSuccess(response.data));\n\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\tconsole.log(\"(getAllClasses) Status:\", error);\n\t}\n};\n\nexport const getClassesAdmin = async (dispatch, callback) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(CLASS_ENDPOINT + \"/final\");\n\n\t\tdispatch(getClassesAdminSuccess(response.data));\n\t\t!!callback && callback(true);\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\t!!callback && callback(false);\n\t\tconsole.log(\"(getClassesAdmin) Status:\", error);\n\t\tdispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getFinalRecordedClassesDispatch = async (dispatch, callback) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(CLASS_ENDPOINT + \"/final/recorded\");\n\n\t\tdispatch(getFinalRecordedClasses(response.data));\n\t\t!!callback && callback(true);\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\t!!callback && callback(false);\n\t\tconsole.log(\"(getFinalRecordedClasses) Status:\", error);\n\t\tdispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const submitClassApproval = async (dispatch, args, callback) => {\n\ttry {\n\t\tconst response = await api.post(CLASS_ENDPOINT + \"/review\", args);\n\t\tcallback && callback(true);\n\t\tdispatch(submitClassApprovalAction({index: args.index, status: response.data.data.STATUS}));\n\t} catch (error) {\n\t\tcallback && callback(false, error.response);\n\t\tconsole.log(\"Status:\", error);\n\t}\n};\n\n\nexport const getAllActiveClasses = async (dispatch) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tawait api.get(\"/class-learner/getAllActive\").then((result) => {\n\t\t\tdispatch(getActiveClassesSuccess(result.data));\n\t\t\tconsole.log(result)\n\t\t\treturn result;\n\t\t});\n\t\n\t} catch (error) {\n\t\tdispatch(offLoadingScreen());\n\t\tconsole.log(\"(getActiveClassesSuccess) Status:\", error);\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};\n\nexport const getEnrolledClass = async (dispatch) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(\"/class-enroll/viewMyClass\");\n\n\t\tdispatch(getEnrolledClasses(response.data));\n\n\t} catch (error) {\n\t\tdispatch(offLoadingScreen());\n\t\tconsole.log(\"(getEnrolledClasses) Status:\", error);\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n}\n\nexport const getPendingEnrollment = async (dispatch) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(\"/class-enroll/viewPendingEnrollment\");\n\n\t\tdispatch(getPendingEnrollmentSuccess(response.data));\n\n\t} catch (error) {\n\t\tdispatch(offLoadingScreen());\n\t\tconsole.log(\"(getEnrolledClasses) Status:\", error);\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n}\n\nexport const getAllMyStudents = async (dispatch) => {\n\ttry {\n\t\tconst response = await api.get(\"/class-enroll/viewAllStudents\");\n\n\t\tdispatch(getAllStudentsEnrolled(response.data));\n\n\t} catch (error) {\n\t\tconsole.log(\"(getAllMyStudents) Status:\", error);\n\t}\n}\n\nexport const getClassDetails = async (dispatch, args) => {\n\ttry {\n\t\tdispatch(onLoadingScreen());\n\t\tconst response = await api.get(CLASS_ENDPOINT + \"/\" + args.id);\n\n\t\tdispatch(getClassDetailsSuccess(response.data));\n\n\t\tconsole.log(response)\n\t} catch (error) {\n\t\tconsole.log(\"(getAllClasses) Status:\", error);\n\t\tdispatch(offLoadingScreen());\n\t} finally {\n\t\tdispatch(offLoadingScreen());\n\t}\n};"]},"metadata":{},"sourceType":"module"}