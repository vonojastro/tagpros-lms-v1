{"ast":null,"code":"import moment from 'moment';\nimport _ from 'lodash';\nexport const getStatusDisplays = state => {\n  const ref = state.classes.getIn(['data', 'class']) || [];\n  let result = new Set(ref.map(e => e.statusDisplay));\n  const label = {\n    CLASS_ENDED: 'Ended class',\n    CLASS_ONGOING: 'Ongoing',\n    ONGOING_ENROLLMENT: 'For Enrollment',\n    NOT_STARTED: 'Not started',\n    OPENS_SOON: 'Opens soon'\n  };\n  const ret = Array.from(result).map(e => ({\n    label: label[e] || \"unlabelled\",\n    value: e\n  }));\n  const order = ['CLASS_ONGOING', 'ONGOING_ENROLLMENT', 'NOT_STARTED', 'OPENS_SOON', 'CLASS_ENDED'];\n  return _.sortBy(ret, e => order.indexOf(e.value));\n};\n\nconst getCategoryCodes = data => {\n  if (!(data !== null && data !== void 0 && data.length)) return [];\n  let result = new Set();\n  data.forEach(r => {\n    result.add(r.categoryCode);\n  });\n  return Array.from(result).map(e => ({\n    label: e,\n    value: e\n  }));\n};\n\nexport const classCategoriesSelector = state => {\n  const classes = state.classes.getIn(['data', 'class']) || [];\n  return getCategoryCodes(classes);\n};\nexport const scheduleListSelector = state => {\n  const array = state.classes.getIn(['data', 'class']) || [];\n  var temp = array.map(item => {\n    return moment(item.startDate, 'YYYY/MM/DD').format('MMMM YYYY');\n  });\n  var temp2 = [];\n  array.forEach(item => {\n    if (!!item.availableDates && item.availableDates.length > 0) {\n      item.availableDates.forEach(dateitem => {\n        temp2.push(moment(dateitem).format('MMMM YYYY'));\n      });\n    }\n  });\n  temp = temp.concat(temp2).filter((value, index, self) => self.indexOf(value) === index);\n  temp = temp.sort((a, b) => moment(a, 'MMMM YYYY').valueOf() - moment(b, 'MMMM YYYY').valueOf());\n  temp = _.filter(temp, item => {\n    var _item$toLowerCase;\n\n    return (item === null || item === void 0 ? void 0 : (_item$toLowerCase = item.toLowerCase) === null || _item$toLowerCase === void 0 ? void 0 : _item$toLowerCase.call(item)) !== 'invalid date';\n  });\n  return temp;\n};","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/src/redux/selectors/index.js"],"names":["moment","_","getStatusDisplays","state","ref","classes","getIn","result","Set","map","e","statusDisplay","label","CLASS_ENDED","CLASS_ONGOING","ONGOING_ENROLLMENT","NOT_STARTED","OPENS_SOON","ret","Array","from","value","order","sortBy","indexOf","getCategoryCodes","data","length","forEach","r","add","categoryCode","classCategoriesSelector","scheduleListSelector","array","temp","item","startDate","format","temp2","availableDates","dateitem","push","concat","filter","index","self","sort","a","b","valueOf","toLowerCase"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash';\n\nexport const getStatusDisplays = (state) => {\n  const ref = state.classes.getIn(['data', 'class']) || [];\n  let result = new Set(ref.map(e => e.statusDisplay));\n  const label = {\n    CLASS_ENDED: 'Ended class',\n    CLASS_ONGOING: 'Ongoing',\n    ONGOING_ENROLLMENT: 'For Enrollment',\n    NOT_STARTED: 'Not started',\n    OPENS_SOON: 'Opens soon',\n  };\n  const ret = Array.from(result).map(e => ({ label: label[e] || \"unlabelled\", value: e }));\n  const order = ['CLASS_ONGOING', 'ONGOING_ENROLLMENT', 'NOT_STARTED', 'OPENS_SOON', 'CLASS_ENDED'];\n  return _.sortBy(ret, e => order.indexOf(e.value));\n};\n\nconst getCategoryCodes = data => {\n  if (!data?.length) return [];\n\n  let result = new Set();\n  data.forEach(r => {\n    result.add(r.categoryCode);\n  });\n  return Array.from(result).map(e => ({ label: e, value: e }));\n};\nexport const classCategoriesSelector = state => {\n  const classes = state.classes.getIn(['data', 'class']) || [];\n  return getCategoryCodes(classes);\n};\n\nexport const scheduleListSelector = state => {\n  const array = state.classes.getIn(['data', 'class']) || [];\n\n  var temp = array.map(item => {\n    return moment(item.startDate, 'YYYY/MM/DD').format('MMMM YYYY');\n  });\n\n  var temp2 = [];\n  array.forEach(item => {\n    if (!!item.availableDates && item.availableDates.length > 0) {\n      item.availableDates.forEach(dateitem => {\n        temp2.push(moment(dateitem).format('MMMM YYYY'));\n      });\n    }\n  });\n\n  temp = temp.concat(temp2).filter((value, index, self) => self.indexOf(value) === index);\n  temp = temp.sort(\n    (a, b) => moment(a, 'MMMM YYYY').valueOf() - moment(b, 'MMMM YYYY').valueOf()\n  );\n  temp = _.filter(temp, item => {\n    return item?.toLowerCase?.() !== 'invalid date';\n  });\n\n  return temp;\n};\n"]},"metadata":{},"sourceType":"module"}