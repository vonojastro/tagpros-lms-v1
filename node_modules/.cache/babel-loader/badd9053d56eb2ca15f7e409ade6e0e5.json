{"ast":null,"code":"import { useMemo, useState, useEffect, useCallback, useRef } from \"react\";\n\nfunction getValueFromSessionStorage(key) {\n  var _a;\n\n  if (typeof sessionStorage === \"undefined\") {\n    return null;\n  }\n\n  var storedValue = (_a = sessionStorage.getItem(key)) !== null && _a !== void 0 ? _a : \"null\";\n\n  try {\n    return JSON.parse(storedValue);\n  } catch (error) {\n    console.error(error);\n  }\n\n  return storedValue;\n}\n\nfunction saveValueToSessionStorage(key, value) {\n  if (typeof sessionStorage === \"undefined\") {\n    return null;\n  }\n\n  return sessionStorage.setItem(key, JSON.stringify(value));\n}\n/**\n * @param key Key of the sessionStorage object\n * @param initialState Default initial value\n */\n\n\nfunction initialize(key, initialState) {\n  var valueLoadedFromSessionStorage = getValueFromSessionStorage(key);\n\n  if (valueLoadedFromSessionStorage === null) {\n    return initialState;\n  } else {\n    return valueLoadedFromSessionStorage;\n  }\n}\n/**\n * useSessionstorageState hook\n * Tracks a value within sessionStorage and updates it\n *\n * @param {string} key - Key of the sessionStorage object\n * @param {any} initialState - Default initial value\n */\n\n\nfunction useSessionstorageState(key, initialState) {\n  var _a = useState(function () {\n    return initialize(key, initialState);\n  }),\n      value = _a[0],\n      setValue = _a[1];\n\n  var isUpdateFromCrossDocumentListener = useRef(false);\n  var isUpdateFromWithinDocumentListener = useRef(false);\n  var customEventTypeName = useMemo(function () {\n    return \"rooks-\".concat(key, \"-sessionstorage-update\");\n  }, [key]);\n  useEffect(function () {\n    /**\n     * We need to ensure there is no loop of\n     * storage events fired. Hence we are using a ref\n     * to keep track of whether setValue is from another\n     * storage event\n     */\n    if (!isUpdateFromCrossDocumentListener.current) {\n      saveValueToSessionStorage(key, value);\n    }\n  }, [key, value]);\n  var listenToCrossDocumentStorageEvents = useCallback(function (event) {\n    var _a;\n\n    if (event.storageArea === sessionStorage && event.key === key) {\n      try {\n        isUpdateFromCrossDocumentListener.current = true;\n        var newValue = JSON.parse((_a = event.newValue) !== null && _a !== void 0 ? _a : \"null\");\n\n        if (value !== newValue) {\n          setValue(newValue);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [key, value]); // check for changes across windows\n\n  useEffect(function () {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"storage\", listenToCrossDocumentStorageEvents);\n      return function () {\n        window.removeEventListener(\"storage\", listenToCrossDocumentStorageEvents);\n      };\n    } else {\n      console.warn(\"[useSessionstorageState] window is undefined.\");\n      return function () {};\n    }\n  }, [listenToCrossDocumentStorageEvents]);\n  var listenToCustomEventWithinDocument = useCallback(function (event) {\n    try {\n      isUpdateFromWithinDocumentListener.current = true;\n      var newValue = event.detail.newValue;\n\n      if (value !== newValue) {\n        setValue(newValue);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [value]); // check for changes within document\n\n  useEffect(function () {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(customEventTypeName, listenToCustomEventWithinDocument);\n      return function () {\n        document.removeEventListener(customEventTypeName, listenToCustomEventWithinDocument);\n      };\n    } else {\n      console.warn(\"[useSessionstorageState] document is undefined.\");\n      return function () {};\n    }\n  }, [customEventTypeName, listenToCustomEventWithinDocument]);\n  var broadcastValueWithinDocument = useCallback(function (newValue) {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof document !== \"undefined\") {\n      var event_1 = new CustomEvent(customEventTypeName, {\n        detail: {\n          newValue: newValue\n        }\n      });\n      document.dispatchEvent(event_1);\n    } else {\n      console.warn(\"[useSessionstorageState] document is undefined.\");\n    }\n  }, [customEventTypeName]);\n  var set = useCallback(function (newValue) {\n    isUpdateFromCrossDocumentListener.current = false;\n    isUpdateFromWithinDocumentListener.current = false;\n    setValue(newValue);\n    broadcastValueWithinDocument(newValue);\n  }, [broadcastValueWithinDocument]);\n  var remove = useCallback(function () {\n    sessionStorage.removeItem(key);\n  }, [key]);\n  return [value, set, remove];\n}\n\nexport { useSessionstorageState };","map":{"version":3,"sources":["/Users/vonojastro/Desktop/lms-frontend-v2/node_modules/rooks/dist/esm/hooks/useSessionstorageState.js"],"names":["useMemo","useState","useEffect","useCallback","useRef","getValueFromSessionStorage","key","_a","sessionStorage","storedValue","getItem","JSON","parse","error","console","saveValueToSessionStorage","value","setItem","stringify","initialize","initialState","valueLoadedFromSessionStorage","useSessionstorageState","setValue","isUpdateFromCrossDocumentListener","isUpdateFromWithinDocumentListener","customEventTypeName","concat","current","listenToCrossDocumentStorageEvents","event","storageArea","newValue","log","window","addEventListener","removeEventListener","warn","listenToCustomEventWithinDocument","detail","document","broadcastValueWithinDocument","event_1","CustomEvent","dispatchEvent","set","remove","removeItem"],"mappings":"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","sourcesContent":["import { useMemo, useState, useEffect, useCallback, useRef } from \"react\";\nfunction getValueFromSessionStorage(key) {\n    var _a;\n    if (typeof sessionStorage === \"undefined\") {\n        return null;\n    }\n    var storedValue = (_a = sessionStorage.getItem(key)) !== null && _a !== void 0 ? _a : \"null\";\n    try {\n        return JSON.parse(storedValue);\n    }\n    catch (error) {\n        console.error(error);\n    }\n    return storedValue;\n}\nfunction saveValueToSessionStorage(key, value) {\n    if (typeof sessionStorage === \"undefined\") {\n        return null;\n    }\n    return sessionStorage.setItem(key, JSON.stringify(value));\n}\n/**\n * @param key Key of the sessionStorage object\n * @param initialState Default initial value\n */\nfunction initialize(key, initialState) {\n    var valueLoadedFromSessionStorage = getValueFromSessionStorage(key);\n    if (valueLoadedFromSessionStorage === null) {\n        return initialState;\n    }\n    else {\n        return valueLoadedFromSessionStorage;\n    }\n}\n/**\n * useSessionstorageState hook\n * Tracks a value within sessionStorage and updates it\n *\n * @param {string} key - Key of the sessionStorage object\n * @param {any} initialState - Default initial value\n */\nfunction useSessionstorageState(key, initialState) {\n    var _a = useState(function () { return initialize(key, initialState); }), value = _a[0], setValue = _a[1];\n    var isUpdateFromCrossDocumentListener = useRef(false);\n    var isUpdateFromWithinDocumentListener = useRef(false);\n    var customEventTypeName = useMemo(function () {\n        return \"rooks-\".concat(key, \"-sessionstorage-update\");\n    }, [key]);\n    useEffect(function () {\n        /**\n         * We need to ensure there is no loop of\n         * storage events fired. Hence we are using a ref\n         * to keep track of whether setValue is from another\n         * storage event\n         */\n        if (!isUpdateFromCrossDocumentListener.current) {\n            saveValueToSessionStorage(key, value);\n        }\n    }, [key, value]);\n    var listenToCrossDocumentStorageEvents = useCallback(function (event) {\n        var _a;\n        if (event.storageArea === sessionStorage && event.key === key) {\n            try {\n                isUpdateFromCrossDocumentListener.current = true;\n                var newValue = JSON.parse((_a = event.newValue) !== null && _a !== void 0 ? _a : \"null\");\n                if (value !== newValue) {\n                    setValue(newValue);\n                }\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n    }, [key, value]);\n    // check for changes across windows\n    useEffect(function () {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"storage\", listenToCrossDocumentStorageEvents);\n            return function () {\n                window.removeEventListener(\"storage\", listenToCrossDocumentStorageEvents);\n            };\n        }\n        else {\n            console.warn(\"[useSessionstorageState] window is undefined.\");\n            return function () { };\n        }\n    }, [listenToCrossDocumentStorageEvents]);\n    var listenToCustomEventWithinDocument = useCallback(function (event) {\n        try {\n            isUpdateFromWithinDocumentListener.current = true;\n            var newValue = event.detail.newValue;\n            if (value !== newValue) {\n                setValue(newValue);\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }, [value]);\n    // check for changes within document\n    useEffect(function () {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof document !== \"undefined\") {\n            document.addEventListener(customEventTypeName, listenToCustomEventWithinDocument);\n            return function () {\n                document.removeEventListener(customEventTypeName, listenToCustomEventWithinDocument);\n            };\n        }\n        else {\n            console.warn(\"[useSessionstorageState] document is undefined.\");\n            return function () { };\n        }\n    }, [customEventTypeName, listenToCustomEventWithinDocument]);\n    var broadcastValueWithinDocument = useCallback(function (newValue) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof document !== \"undefined\") {\n            var event_1 = new CustomEvent(customEventTypeName, { detail: { newValue: newValue } });\n            document.dispatchEvent(event_1);\n        }\n        else {\n            console.warn(\"[useSessionstorageState] document is undefined.\");\n        }\n    }, [customEventTypeName]);\n    var set = useCallback(function (newValue) {\n        isUpdateFromCrossDocumentListener.current = false;\n        isUpdateFromWithinDocumentListener.current = false;\n        setValue(newValue);\n        broadcastValueWithinDocument(newValue);\n    }, [broadcastValueWithinDocument]);\n    var remove = useCallback(function () {\n        sessionStorage.removeItem(key);\n    }, [key]);\n    return [value, set, remove];\n}\nexport { useSessionstorageState };\n"]},"metadata":{},"sourceType":"module"}