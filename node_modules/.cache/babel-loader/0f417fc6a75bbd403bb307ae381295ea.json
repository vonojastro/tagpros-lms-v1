{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\n/* eslint-disable no-continue,no-restricted-syntax,no-plusplus */\n\nexport function compare(a, b, keys) {\n  return keys.every(function (key) {\n    return a[key] === b[key];\n  });\n}\nexport function deepMerge(target) {\n  var _a, _b;\n\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var key in source) {\n      if (!Object.prototype.hasOwnProperty.call(source, key)) {\n        continue;\n      }\n\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, (_a = {}, _a[key] = {}, _a));\n        }\n\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n      }\n    }\n  }\n\n  return deepMerge.apply(void 0, __spreadArrays([target], sources));\n}\nexport function findLastTextNode(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    return node;\n  }\n\n  var children = node.childNodes;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var textNode = findLastTextNode(children[i]);\n\n    if (textNode !== null) {\n      return textNode;\n    }\n  }\n\n  return null;\n}\nexport function getSelectedNode() {\n  if (document.selection) {\n    return document.selection.createRange().parentElement();\n  }\n\n  var selection = window.getSelection();\n\n  if (selection.rangeCount > 0) {\n    return selection.getRangeAt(0).startContainer.parentNode;\n  }\n\n  return null;\n}\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function normalizeHtml(str) {\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ');\n}\nexport function replaceCaret(el) {\n  // Place the caret at the end of the element\n  var target = findLastTextNode(el); // do not move caret if element was not focused\n\n  var isTargetFocused = document.activeElement === el;\n\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    var range = document.createRange();\n    var sel = window.getSelection();\n    range.setStart(target, target.nodeValue.length);\n    range.collapse(true);\n    sel.removeAllRanges();\n    sel.addRange(range);\n\n    if (el instanceof HTMLElement) {\n      el.focus();\n    }\n  }\n}","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __spreadArrays } from \"tslib\";\n/* eslint-disable no-continue,no-restricted-syntax,no-plusplus */\nexport function compare(a, b, keys) {\n    return keys.every(function (key) { return a[key] === b[key]; });\n}\nexport function deepMerge(target) {\n    var _a, _b;\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (!sources.length) {\n        return target;\n    }\n    var source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (var key in source) {\n            if (!Object.prototype.hasOwnProperty.call(source, key)) {\n                continue;\n            }\n            if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, (_a = {}, _a[key] = {}, _a));\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n            }\n        }\n    }\n    return deepMerge.apply(void 0, __spreadArrays([target], sources));\n}\nexport function findLastTextNode(node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n        return node;\n    }\n    var children = node.childNodes;\n    for (var i = children.length - 1; i >= 0; i--) {\n        var textNode = findLastTextNode(children[i]);\n        if (textNode !== null) {\n            return textNode;\n        }\n    }\n    return null;\n}\nexport function getSelectedNode() {\n    if (document.selection) {\n        return document.selection.createRange().parentElement();\n    }\n    var selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n        return selection.getRangeAt(0).startContainer.parentNode;\n    }\n    return null;\n}\nfunction isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\nexport function normalizeHtml(str) {\n    return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ');\n}\nexport function replaceCaret(el) {\n    // Place the caret at the end of the element\n    var target = findLastTextNode(el);\n    // do not move caret if element was not focused\n    var isTargetFocused = document.activeElement === el;\n    if (target !== null && target.nodeValue !== null && isTargetFocused) {\n        var range = document.createRange();\n        var sel = window.getSelection();\n        range.setStart(target, target.nodeValue.length);\n        range.collapse(true);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        if (el instanceof HTMLElement) {\n            el.focus();\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}