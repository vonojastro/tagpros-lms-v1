var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import { getJaaSDomain, getRoomName } from '../utils';
import { JitsiMeeting } from '.';
/**
 * Returns the JaaSMeeting Component with access to the 8x8.vc External API
 * to be used as-it-is in React projects
 *
 * @param {IJaaSMeetingProps} props the component's props
 * @returns {ReactElement} the `JaaSMeeting` Component
 * @example
  ```js
      <JaaSMeeting
        roomName: 'TestingJaaSMeetingComponent'
        appId='exampleAppId'
        spinner={CustomSpinner}
        onApiReady={(externalApi) => console.log(externalApi)}
      />
  ```
 */
const JaaSMeeting = (_a) => {
    var { appId, roomName, useStaging } = _a, rest = __rest(_a, ["appId", "roomName", "useStaging"]);
    return (_jsx(JitsiMeeting, Object.assign({ domain: getJaaSDomain(useStaging), roomName: getRoomName(roomName, appId) }, rest), void 0));
};
export default JaaSMeeting;
